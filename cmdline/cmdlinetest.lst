GAS LISTING /var/tmp//ccsuTKi5.s 			page 1


   1               		.file	"cmdlinetest.c"
   2               		.arch atmega32
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.stabs	"/opt/local/avr/avrlib/freedomflies/cmdline/",100,0,2,.Ltext0
  11               		.stabs	"cmdlinetest.c",100,0,2,.Ltext0
  12               		.text
  13               	.Ltext0:
  14               		.stabs	"gcc2_compiled.",60,0,0,0
  15               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  16               		.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,0,0
  17               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  18               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  19               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  20               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  21               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  22               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  23               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  24               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  25               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  26               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  28               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"void:t(0,15)=(0,15)",128,0,0,0
  30               		.stabs	"/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/avr/io.h",130,0,0,0
  31               		.stabs	"/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/avr/sfr_defs.h",130,0,0,0
  32               		.stabs	"/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/inttypes.h",130,0,0,0
  33               		.stabs	"/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/stdint.h",130,0,0,0
  34               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,116,0
  35               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,117,0
  36               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,118,0
  37               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,119,0
  38               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,120,0
  39               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,121,0
  40               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,122,0
  41               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,123,0
  42               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,135,0
  43               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,140,0
  44               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,152,0
  45               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,157,0
  46               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,162,0
  47               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,167,0
  48               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,172,0
  49               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,177,0
  50               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,182,0
  51               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,187,0
  52               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,200,0
  53               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,205,0
  54               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,210,0
  55               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,215,0
  56               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,220,0
  57               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,225,0
GAS LISTING /var/tmp//ccsuTKi5.s 			page 2


  58               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,230,0
  59               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,235,0
  60               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,249,0
  61               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,254,0
  62               		.stabn	162,0,0,0
  63               		.stabs	"int_farptr_t:t(3,1)=(4,5)",128,0,76,0
  64               		.stabs	"uint_farptr_t:t(3,2)=(4,6)",128,0,80,0
  65               		.stabn	162,0,0,0
  66               		.stabn	162,0,0,0
  67               		.stabn	162,0,0,0
  68               		.stabs	"global.h",130,0,0,0
  69               		.stabs	"/opt/local/avr/sixcode/avrlibtypes.h",130,0,0,0
  70               		.stabs	"u08:t(6,1)=(0,11)",128,0,32,0
  71               		.stabs	"s08:t(6,2)=(0,10)",128,0,33,0
  72               		.stabs	"u16:t(6,3)=(0,9)",128,0,34,0
  73               		.stabs	"s16:t(6,4)=(0,8)",128,0,35,0
  74               		.stabs	"u32:t(6,5)=(0,5)",128,0,36,0
  75               		.stabs	"s32:t(6,6)=(0,3)",128,0,37,0
  76               		.stabs	"u64:t(6,7)=(0,7)",128,0,38,0
  77               		.stabs	"s64:t(6,8)=(0,6)",128,0,39,0
  78               		.stabs	"BOOL:t(6,9)=(0,11)",128,0,69,0
  79               		.stabs	"BYTE:t(6,10)=(0,11)",128,0,70,0
  80               		.stabs	"WORD:t(6,11)=(0,4)",128,0,71,0
  81               		.stabs	"DWORD:t(6,12)=(0,5)",128,0,72,0
  82               		.stabs	"UCHAR:t(6,13)=(0,11)",128,0,74,0
  83               		.stabs	"UINT:t(6,14)=(0,4)",128,0,75,0
  84               		.stabs	"USHORT:t(6,15)=(0,9)",128,0,76,0
  85               		.stabs	"ULONG:t(6,16)=(0,5)",128,0,77,0
  86               		.stabs	"CHAR:t(6,17)=(0,2)",128,0,79,0
  87               		.stabs	"INT:t(6,18)=(0,1)",128,0,80,0
  88               		.stabs	"LONG:t(6,19)=(0,3)",128,0,81,0
  89               		.stabn	162,0,0,0
  90               		.stabn	162,0,0,0
  91               		.stabs	"/opt/local/avr/sixcode/uart.h",130,0,0,0
  92               		.stabs	"/opt/local/avr/sixcode/buffer.h",130,0,0,0
  93               		.stabs	"struct_cBuffer:T(8,1)=s8dataptr:(8,2)=*(0,11),0,16;size:(0,9),16,16;datalength:(0,9),32,16
  94               		.stabs	"cBuffer:t(8,3)=(8,1)",128,0,47,0
  95               		.stabn	162,0,0,0
  96               		.stabn	162,0,0,0
  97               		.stabs	"/opt/local/avr/sixcode/rprintf.h",130,0,0,0
  98               		.stabs	"/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/avr/pgmspace.h",130,0,0,0
  99               		.stabs	"/opt/local/lib/gcc/avr/4.0.2/include/stddef.h",130,0,0,0
 100               		.stabs	"size_t:t(11,1)=(0,4)",128,0,214,0
 101               		.stabn	162,0,0,0
 102               		.stabs	"prog_void:t(10,1)=(10,2)=(10,2)",128,0,203,0
 103               		.stabs	"prog_char:t(10,3)=(10,4)=@s8;r(10,4);-128;127;",128,0,204,0
 104               		.stabs	"prog_uchar:t(10,5)=(10,6)=@s8;r(10,6);0;255;",128,0,205,0
 105               		.stabs	"prog_int8_t:t(10,7)=(10,4)",128,0,207,0
 106               		.stabs	"prog_uint8_t:t(10,8)=(10,6)",128,0,208,0
 107               		.stabs	"prog_int16_t:t(10,9)=(10,10)=(0,1)",128,0,209,0
 108               		.stabs	"prog_uint16_t:t(10,11)=(10,12)=(0,4)",128,0,210,0
 109               		.stabs	"prog_int32_t:t(10,13)=(10,14)=(0,3)",128,0,211,0
 110               		.stabs	"prog_uint32_t:t(10,15)=(10,16)=(0,5)",128,0,212,0
 111               		.stabs	"prog_int64_t:t(10,17)=(10,18)=(0,6)",128,0,213,0
 112               		.stabs	"prog_uint64_t:t(10,19)=(10,20)=(0,7)",128,0,214,0
 113               		.stabn	162,0,0,0
 114               		.stabn	162,0,0,0
GAS LISTING /var/tmp//ccsuTKi5.s 			page 3


 115               		.stabs	"/opt/local/avr/sixcode/cmdline.h",130,0,0,0
 116               		.stabs	"CmdlineFuncPtrType:t(12,1)=(12,2)=*(12,3)=f(0,15)",128,0,85,0
 117               		.stabn	162,0,0,0
 118               		.stabs	"/opt/local/avr/sixcode/servo.h",130,0,0,0
 119               		.stabs	"struct_ServoChannel:T(13,1)=s4port:(13,2)=B(6,1),0,8;pin:(13,2),8,8;duty:(13,3)=B(6,3),16,
 120               		.stabs	"ServoChannelType:t(13,4)=(13,1)",128,0,78,0
 121               		.stabn	162,0,0,0
 122               		.stabs	"/opt/local/avr/sixcode/i2c.h",130,0,0,0
 123               		.stabs	" :T(14,1)=eI2C_IDLE:0,I2C_BUSY:1,I2C_MASTER_TX:2,I2C_MASTER_RX:3,I2C_SLAVE_TX:4,I2C_SLAVE_
 124               		.stabs	"eI2cStateType:t(14,2)=(14,1)",128,0,124,0
 125               		.stabn	162,0,0,0
 126               	.global	numTimesThrough
 127               	.global	numTimesThrough
 128               		.section .bss
 129               		.type	numTimesThrough, @object
 130               		.size	numTimesThrough, 4
 131               	numTimesThrough:
 132 0000 0000 0000 		.skip 4,0
 133               	.global	multiplier
 134               		.data
 135               		.type	multiplier, @object
 136               		.size	multiplier, 2
 137               	multiplier:
 138 0000 6400      		.word	100
 139               	.global	leftServoPos
 140               		.type	leftServoPos, @object
 141               		.size	leftServoPos, 1
 142               	leftServoPos:
 143 0002 88        		.byte	-120
 144               	.global	masterBufferLength
 145               		.type	masterBufferLength, @object
 146               		.size	masterBufferLength, 1
 147               	masterBufferLength:
 148 0003 20        		.byte	32
 149               	.global	masterBuffer
 150               		.type	masterBuffer, @object
 151               		.size	masterBuffer, 29
 152               	masterBuffer:
 153 0004 5468 6973 		.string	"This one is the Master board"
 153      206F 6E65 
 153      2069 7320 
 153      7468 6520 
 153      4D61 7374 
 154               	.global	slaveBufferLength
 155               		.type	slaveBufferLength, @object
 156               		.size	slaveBufferLength, 1
 157               	slaveBufferLength:
 158 0021 20        		.byte	32
 159               	.global	slaveBuffer
 160               		.type	slaveBuffer, @object
 161               		.size	slaveBuffer, 33
 162               	slaveBuffer:
 163 0022 5061 7363 		.string	"Pascal is cool!!Pascal is Cool!!"
 163      616C 2069 
 163      7320 636F 
 163      6F6C 2121 
 163      5061 7363 
GAS LISTING /var/tmp//ccsuTKi5.s 			page 4


 164               		.text
 165               		.stabs	"pulseT1Init:F(0,15)",36,0,58,pulseT1Init
 166               	.global	pulseT1Init
 167               		.type	pulseT1Init, @function
 168               	pulseT1Init:
 169               		.stabd	46,0,0
 170               		.stabs	"./pulseb.c",132,0,0,.Ltext1
 171               	.Ltext1:
   1:./pulseb.c    **** /*! \file pulse.c \brief Pulse/frequency generation function library. */
   2:./pulseb.c    **** //*****************************************************************************
   3:./pulseb.c    **** //
   4:./pulseb.c    **** // File Name	: 'pulse.c'
   5:./pulseb.c    **** // Title		: Pulse/frequency generation function library
   6:./pulseb.c    **** // Author		: Pascal Stang - Copyright (C) 2000-2002
   7:./pulseb.c    **** // Created		: 2002-08-19
   8:./pulseb.c    **** // Revised		: 2003-05-29
   9:./pulseb.c    **** // Version		: 0.7
  10:./pulseb.c    **** // Target MCU	: Atmel AVR Series
  11:./pulseb.c    **** // Editor Tabs	: 4
  12:./pulseb.c    **** //
  13:./pulseb.c    **** // This code is distributed under the GNU Public License
  14:./pulseb.c    **** //		which can be found at http://www.gnu.org/licenses/gpl.txt
  15:./pulseb.c    **** //
  16:./pulseb.c    **** //*****************************************************************************
  17:./pulseb.c    **** 
  18:./pulseb.c    **** #ifndef WIN32
  19:./pulseb.c    **** 	#include <avr/io.h>
  20:./pulseb.c    **** 	#include <avr/signal.h>
  21:./pulseb.c    **** 	#include <avr/interrupt.h>
  22:./pulseb.c    **** 	#include <avr/pgmspace.h>
  23:./pulseb.c    **** #endif
  24:./pulseb.c    **** 
  25:./pulseb.c    **** #include "global.h"
  26:./pulseb.c    **** #include "timer.h"
  27:./pulseb.c    **** #include "pulse.h"
  28:./pulseb.c    **** 
  29:./pulseb.c    **** // Global variables
  30:./pulseb.c    **** // pulse generation registers
  31:./pulseb.c    **** volatile static unsigned char  PulseT1AMode;
  32:./pulseb.c    **** volatile static unsigned short PulseT1ACount;
  33:./pulseb.c    **** volatile static unsigned short PulseT1APeriodTics;
  34:./pulseb.c    **** volatile static unsigned char  PulseT1BMode;
  35:./pulseb.c    **** volatile static unsigned short PulseT1BCount;
  36:./pulseb.c    **** volatile static unsigned short PulseT1BPeriodTics;
  37:./pulseb.c    **** volatile static signed 	long	Pulse_Position;
  38:./pulseb.c    **** 
  39:./pulseb.c    **** 
  40:./pulseb.c    **** // pulse mode bit definitions
  41:./pulseb.c    **** // PULSE_MODE_COUNTED
  42:./pulseb.c    **** //		if true, the requested number of pulses are output, then output is turned off
  43:./pulseb.c    **** //		if false, pulses are output continuously
  44:./pulseb.c    **** #define PULSE_MODE_CONTINUOUS	0x00
  45:./pulseb.c    **** #define PULSE_MODE_COUNTED		0x01
  46:./pulseb.c    **** 
  47:./pulseb.c    **** 
  48:./pulseb.c    **** // functions
  49:./pulseb.c    **** 
GAS LISTING /var/tmp//ccsuTKi5.s 			page 5


  50:./pulseb.c    **** void pulseInit(void)
  51:./pulseb.c    **** {
  52:./pulseb.c    **** 	// initialize timer1 for pulse operation
  53:./pulseb.c    **** 	pulseT1Init();
  54:./pulseb.c    **** 	Pulse_Position = 0;
  55:./pulseb.c    **** }
  56:./pulseb.c    **** 
  57:./pulseb.c    **** void pulseT1Init(void)
  58:./pulseb.c    **** {
 172               		.stabn	68,0,58,.LM0-pulseT1Init
 173               	.LM0:
 174               	/* prologue: frame size=0 */
 175               	/* prologue end (size=0) */
  59:./pulseb.c    **** 	// try to make sure that timer1 is in "normal" mode
  60:./pulseb.c    **** 	// most importantly, turn off PWM mode
  61:./pulseb.c    **** 	timer1PWMOff();
 176               		.stabn	68,0,61,.LM1-pulseT1Init
 177               	.LM1:
 178 0000 0E94 0000 		call timer1PWMOff
  62:./pulseb.c    **** 
  63:./pulseb.c    **** 	// set some reasonable initial values
  64:./pulseb.c    **** 	// in case the user forgets to
  65:./pulseb.c    **** 	PulseT1AMode = 0;
 179               		.stabn	68,0,65,.LM2-pulseT1Init
 180               	.LM2:
 181 0004 1092 0000 		sts PulseT1AMode,__zero_reg__
  66:./pulseb.c    **** 	PulseT1BMode = 0;
 182               		.stabn	68,0,66,.LM3-pulseT1Init
 183               	.LM3:
 184 0008 1092 0000 		sts PulseT1BMode,__zero_reg__
  67:./pulseb.c    **** 	PulseT1ACount = 0;
 185               		.stabn	68,0,67,.LM4-pulseT1Init
 186               	.LM4:
 187 000c 1092 0000 		sts (PulseT1ACount)+1,__zero_reg__
 188 0010 1092 0000 		sts PulseT1ACount,__zero_reg__
  68:./pulseb.c    **** 	PulseT1BCount = 0;
 189               		.stabn	68,0,68,.LM5-pulseT1Init
 190               	.LM5:
 191 0014 1092 0000 		sts (PulseT1BCount)+1,__zero_reg__
 192 0018 1092 0000 		sts PulseT1BCount,__zero_reg__
  69:./pulseb.c    **** 	PulseT1APeriodTics = 0x8000;
 193               		.stabn	68,0,69,.LM6-pulseT1Init
 194               	.LM6:
 195 001c 80E0      		ldi r24,lo8(-32768)
 196 001e 90E8      		ldi r25,hi8(-32768)
 197 0020 9093 0000 		sts (PulseT1APeriodTics)+1,r25
 198 0024 8093 0000 		sts PulseT1APeriodTics,r24
  70:./pulseb.c    **** 	PulseT1BPeriodTics = 0x8000;
 199               		.stabn	68,0,70,.LM7-pulseT1Init
 200               	.LM7:
 201 0028 9093 0000 		sts (PulseT1BPeriodTics)+1,r25
 202 002c 8093 0000 		sts PulseT1BPeriodTics,r24
  71:./pulseb.c    **** 
  72:./pulseb.c    **** 	// attach the pulse service routines to
  73:./pulseb.c    **** 	// the timer 1 output compare A and B interrupts
  74:./pulseb.c    **** 	
  75:./pulseb.c    **** 	//  DELETED TIA ATTACH
GAS LISTING /var/tmp//ccsuTKi5.s 			page 6


  76:./pulseb.c    **** 	//timerAttach(TIMER1OUTCOMPAREA_INT,pulseT1AService);
  77:./pulseb.c    **** 	timerAttach(TIMER1OUTCOMPAREB_INT,pulseT1BService);
 203               		.stabn	68,0,77,.LM8-pulseT1Init
 204               	.LM8:
 205 0030 60E0      		ldi r22,lo8(pm(pulseT1BService))
 206 0032 70E0      		ldi r23,hi8(pm(pulseT1BService))
 207 0034 83E0      		ldi r24,lo8(3)
 208 0036 0E94 0000 		call timerAttach
 209               	/* epilogue: frame size=0 */
 210 003a 0895      		ret
 211               	/* epilogue end (size=1) */
 212               	/* function pulseT1Init size 30 (29) */
 213               		.size	pulseT1Init, .-pulseT1Init
 214               	.Lscope0:
 215               		.stabs	"",36,0,0,.Lscope0-pulseT1Init
 216               		.stabd	78,0,0
 217               		.stabs	"pulseInit:F(0,15)",36,0,51,pulseInit
 218               	.global	pulseInit
 219               		.type	pulseInit, @function
 220               	pulseInit:
 221               		.stabd	46,0,0
 222               		.stabn	68,0,51,.LM9-pulseInit
 223               	.LM9:
 224               	/* prologue: frame size=0 */
 225               	/* prologue end (size=0) */
 226               		.stabn	68,0,53,.LM10-pulseInit
 227               	.LM10:
 228 003c 0E94 0000 		call pulseT1Init
 229               		.stabn	68,0,54,.LM11-pulseInit
 230               	.LM11:
 231 0040 1092 0000 		sts Pulse_Position,__zero_reg__
 232 0044 1092 0000 		sts (Pulse_Position)+1,__zero_reg__
 233 0048 1092 0000 		sts (Pulse_Position)+2,__zero_reg__
 234 004c 1092 0000 		sts (Pulse_Position)+3,__zero_reg__
 235               	/* epilogue: frame size=0 */
 236 0050 0895      		ret
 237               	/* epilogue end (size=1) */
 238               	/* function pulseInit size 11 (10) */
 239               		.size	pulseInit, .-pulseInit
 240               	.Lscope1:
 241               		.stabs	"",36,0,0,.Lscope1-pulseInit
 242               		.stabd	78,0,0
 243               		.stabs	"pulseT1Off:F(0,15)",36,0,81,pulseT1Off
 244               	.global	pulseT1Off
 245               		.type	pulseT1Off, @function
 246               	pulseT1Off:
 247               		.stabd	46,0,0
  78:./pulseb.c    **** }
  79:./pulseb.c    **** 
  80:./pulseb.c    **** void pulseT1Off(void)
  81:./pulseb.c    **** {
 248               		.stabn	68,0,81,.LM12-pulseT1Off
 249               	.LM12:
 250               	/* prologue: frame size=0 */
 251               	/* prologue end (size=0) */
  82:./pulseb.c    **** 	// turns pulse outputs off immediately
  83:./pulseb.c    **** 	
GAS LISTING /var/tmp//ccsuTKi5.s 			page 7


  84:./pulseb.c    **** 	// set pulse counters to zero (finished)
  85:./pulseb.c    **** 	PulseT1ACount = 0;
 252               		.stabn	68,0,85,.LM13-pulseT1Off
 253               	.LM13:
 254 0052 1092 0000 		sts (PulseT1ACount)+1,__zero_reg__
 255 0056 1092 0000 		sts PulseT1ACount,__zero_reg__
  86:./pulseb.c    **** 	PulseT1BCount = 0;
 256               		.stabn	68,0,86,.LM14-pulseT1Off
 257               	.LM14:
 258 005a 1092 0000 		sts (PulseT1BCount)+1,__zero_reg__
 259 005e 1092 0000 		sts PulseT1BCount,__zero_reg__
  87:./pulseb.c    **** 	// disconnect OutputCompare action from OC1A pin
  88:./pulseb.c    **** 	cbi(TCCR1A,COM1A1);
 260               		.stabn	68,0,88,.LM15-pulseT1Off
 261               	.LM15:
 262 0062 8FB5      		in r24,79-0x20
 263 0064 8F77      		andi r24,lo8(127)
 264 0066 8FBD      		out 79-0x20,r24
  89:./pulseb.c    **** 	cbi(TCCR1A,COM1A0);
 265               		.stabn	68,0,89,.LM16-pulseT1Off
 266               	.LM16:
 267 0068 8FB5      		in r24,79-0x20
 268 006a 8F7B      		andi r24,lo8(-65)
 269 006c 8FBD      		out 79-0x20,r24
  90:./pulseb.c    **** 	// disconnect OutputCompare action from OC1B pin
  91:./pulseb.c    **** 	cbi(TCCR1A,COM1B1);
 270               		.stabn	68,0,91,.LM17-pulseT1Off
 271               	.LM17:
 272 006e 8FB5      		in r24,79-0x20
 273 0070 8F7D      		andi r24,lo8(-33)
 274 0072 8FBD      		out 79-0x20,r24
  92:./pulseb.c    **** 	cbi(TCCR1A,COM1B0);
 275               		.stabn	68,0,92,.LM18-pulseT1Off
 276               	.LM18:
 277 0074 8FB5      		in r24,79-0x20
 278 0076 8F7E      		andi r24,lo8(-17)
 279 0078 8FBD      		out 79-0x20,r24
  93:./pulseb.c    **** 	// detach the pulse service routines
  94:./pulseb.c    **** 	timerDetach(TIMER1OUTCOMPAREA_INT);
 280               		.stabn	68,0,94,.LM19-pulseT1Off
 281               	.LM19:
 282 007a 82E0      		ldi r24,lo8(2)
 283 007c 0E94 0000 		call timerDetach
  95:./pulseb.c    **** 	timerDetach(TIMER1OUTCOMPAREB_INT);
 284               		.stabn	68,0,95,.LM20-pulseT1Off
 285               	.LM20:
 286 0080 83E0      		ldi r24,lo8(3)
 287 0082 0E94 0000 		call timerDetach
 288               	/* epilogue: frame size=0 */
 289 0086 0895      		ret
 290               	/* epilogue end (size=1) */
 291               	/* function pulseT1Off size 27 (26) */
 292               		.size	pulseT1Off, .-pulseT1Off
 293               	.Lscope2:
 294               		.stabs	"",36,0,0,.Lscope2-pulseT1Off
 295               		.stabd	78,0,0
 296               		.stabs	"pulseT1ASetFreq:F(0,15)",36,0,99,pulseT1ASetFreq
GAS LISTING /var/tmp//ccsuTKi5.s 			page 8


 297               		.stabs	"freqHz:P(6,3)",64,0,98,14
 298               	.global	pulseT1ASetFreq
 299               		.type	pulseT1ASetFreq, @function
 300               	pulseT1ASetFreq:
 301               		.stabd	46,0,0
  96:./pulseb.c    **** }
  97:./pulseb.c    **** 
  98:./pulseb.c    **** void pulseT1ASetFreq(u16 freqHz)
  99:./pulseb.c    **** {
 302               		.stabn	68,0,99,.LM21-pulseT1ASetFreq
 303               	.LM21:
 304               	/* prologue: frame size=0 */
 305 0088 EF92      		push r14
 306 008a FF92      		push r15
 307 008c 0F93      		push r16
 308 008e 1F93      		push r17
 309               	/* prologue end (size=4) */
 310 0090 7C01      		movw r14,r24
 100:./pulseb.c    **** 	// set the frequency of the pulse output
 101:./pulseb.c    **** 	// we need to find the requested period/2 (in timer tics)
 102:./pulseb.c    **** 	// from the frequency (in hertz)
 103:./pulseb.c    **** 
 104:./pulseb.c    **** 	// calculate how many tics in period/2
 105:./pulseb.c    **** 	// this is the (timer tic rate)/(2*requested freq)
 106:./pulseb.c    **** 	PulseT1APeriodTics = ((u32)F_CPU/((u32)timer1GetPrescaler()*2*freqHz));
 311               		.stabn	68,0,106,.LM22-pulseT1ASetFreq
 312               	.LM22:
 313 0092 0E94 0000 		call timer1GetPrescaler
 314 0096 AA27      		clr r26
 315 0098 BB27      		clr r27
 316 009a 0027      		clr r16
 317 009c 1127      		clr r17
 318 009e BC01      		movw r22,r24
 319 00a0 CD01      		movw r24,r26
 320 00a2 A801      		movw r20,r16
 321 00a4 9701      		movw r18,r14
 322 00a6 0E94 0000 		call __mulsi3
 323 00aa 9B01      		movw r18,r22
 324 00ac AC01      		movw r20,r24
 325 00ae 220F      		lsl r18
 326 00b0 331F      		rol r19
 327 00b2 441F      		rol r20
 328 00b4 551F      		rol r21
 329 00b6 60E0      		ldi r22,lo8(16000000)
 330 00b8 74E2      		ldi r23,hi8(16000000)
 331 00ba 84EF      		ldi r24,hlo8(16000000)
 332 00bc 90E0      		ldi r25,hhi8(16000000)
 333 00be 0E94 0000 		call __udivmodsi4
 334 00c2 3093 0000 		sts (PulseT1APeriodTics)+1,r19
 335 00c6 2093 0000 		sts PulseT1APeriodTics,r18
 336               	/* epilogue: frame size=0 */
 337 00ca 1F91      		pop r17
 338 00cc 0F91      		pop r16
 339 00ce FF90      		pop r15
 340 00d0 EF90      		pop r14
 341 00d2 0895      		ret
 342               	/* epilogue end (size=5) */
GAS LISTING /var/tmp//ccsuTKi5.s 			page 9


 343               	/* function pulseT1ASetFreq size 38 (29) */
 344               		.size	pulseT1ASetFreq, .-pulseT1ASetFreq
 345               	.Lscope3:
 346               		.stabs	"",36,0,0,.Lscope3-pulseT1ASetFreq
 347               		.stabd	78,0,0
 348               		.stabs	"pulseT1BSetFreq:F(0,15)",36,0,110,pulseT1BSetFreq
 349               		.stabs	"freqHz:P(6,3)",64,0,109,14
 350               	.global	pulseT1BSetFreq
 351               		.type	pulseT1BSetFreq, @function
 352               	pulseT1BSetFreq:
 353               		.stabd	46,0,0
 107:./pulseb.c    **** }
 108:./pulseb.c    **** 
 109:./pulseb.c    **** void pulseT1BSetFreq(u16 freqHz)
 110:./pulseb.c    **** {
 354               		.stabn	68,0,110,.LM23-pulseT1BSetFreq
 355               	.LM23:
 356               	/* prologue: frame size=0 */
 357 00d4 EF92      		push r14
 358 00d6 FF92      		push r15
 359 00d8 0F93      		push r16
 360 00da 1F93      		push r17
 361               	/* prologue end (size=4) */
 362 00dc 7C01      		movw r14,r24
 111:./pulseb.c    **** 	// set the frequency of the pulse output
 112:./pulseb.c    **** 	// we need to find the requested period/2 (in timer tics)
 113:./pulseb.c    **** 	// from the frequency (in hertz)
 114:./pulseb.c    **** 
 115:./pulseb.c    **** 	// calculate how many tics in period/2
 116:./pulseb.c    **** 	// this is the (timer tic rate)/(2*requested freq)
 117:./pulseb.c    **** 	PulseT1BPeriodTics = ((u32)F_CPU/((u32)timer1GetPrescaler()*2*freqHz));
 363               		.stabn	68,0,117,.LM24-pulseT1BSetFreq
 364               	.LM24:
 365 00de 0E94 0000 		call timer1GetPrescaler
 366 00e2 AA27      		clr r26
 367 00e4 BB27      		clr r27
 368 00e6 0027      		clr r16
 369 00e8 1127      		clr r17
 370 00ea BC01      		movw r22,r24
 371 00ec CD01      		movw r24,r26
 372 00ee A801      		movw r20,r16
 373 00f0 9701      		movw r18,r14
 374 00f2 0E94 0000 		call __mulsi3
 375 00f6 9B01      		movw r18,r22
 376 00f8 AC01      		movw r20,r24
 377 00fa 220F      		lsl r18
 378 00fc 331F      		rol r19
 379 00fe 441F      		rol r20
 380 0100 551F      		rol r21
 381 0102 60E0      		ldi r22,lo8(16000000)
 382 0104 74E2      		ldi r23,hi8(16000000)
 383 0106 84EF      		ldi r24,hlo8(16000000)
 384 0108 90E0      		ldi r25,hhi8(16000000)
 385 010a 0E94 0000 		call __udivmodsi4
 386 010e 3093 0000 		sts (PulseT1BPeriodTics)+1,r19
 387 0112 2093 0000 		sts PulseT1BPeriodTics,r18
 388               	/* epilogue: frame size=0 */
GAS LISTING /var/tmp//ccsuTKi5.s 			page 10


 389 0116 1F91      		pop r17
 390 0118 0F91      		pop r16
 391 011a FF90      		pop r15
 392 011c EF90      		pop r14
 393 011e 0895      		ret
 394               	/* epilogue end (size=5) */
 395               	/* function pulseT1BSetFreq size 38 (29) */
 396               		.size	pulseT1BSetFreq, .-pulseT1BSetFreq
 397               	.Lscope4:
 398               		.stabs	"",36,0,0,.Lscope4-pulseT1BSetFreq
 399               		.stabd	78,0,0
 400               		.stabs	"pulseT1ARun:F(0,15)",36,0,121,pulseT1ARun
 401               		.stabs	"nPulses:P(6,3)",64,0,120,18
 402               	.global	pulseT1ARun
 403               		.type	pulseT1ARun, @function
 404               	pulseT1ARun:
 405               		.stabd	46,0,0
 118:./pulseb.c    **** }
 119:./pulseb.c    **** 
 120:./pulseb.c    **** void pulseT1ARun(u16 nPulses)
 121:./pulseb.c    **** {
 406               		.stabn	68,0,121,.LM25-pulseT1ARun
 407               	.LM25:
 408               	/* prologue: frame size=0 */
 409               	/* prologue end (size=0) */
 410 0120 9C01      		movw r18,r24
 122:./pulseb.c    **** 	// set the number of pulses we want and the mode
 123:./pulseb.c    **** 	if(nPulses)
 411               		.stabn	68,0,123,.LM26-pulseT1ARun
 412               	.LM26:
 413 0122 892B      		or r24,r25
 414 0124 61F0      		breq .L12
 124:./pulseb.c    **** 	{
 125:./pulseb.c    **** 		// if the nPulses is non-zero, use "counted" mode
 126:./pulseb.c    **** 		PulseT1AMode |= PULSE_MODE_COUNTED;
 415               		.stabn	68,0,126,.LM27-pulseT1ARun
 416               	.LM27:
 417 0126 8091 0000 		lds r24,PulseT1AMode
 418 012a 8160      		ori r24,lo8(1)
 419 012c 8093 0000 		sts PulseT1AMode,r24
 127:./pulseb.c    **** 		PulseT1ACount = nPulses<<1;
 420               		.stabn	68,0,127,.LM28-pulseT1ARun
 421               	.LM28:
 422 0130 220F      		lsl r18
 423 0132 331F      		rol r19
 424 0134 3093 0000 		sts (PulseT1ACount)+1,r19
 425 0138 2093 0000 		sts PulseT1ACount,r18
 426 013c 0BC0      		rjmp .L14
 427               	.L12:
 128:./pulseb.c    **** 	}
 129:./pulseb.c    **** 	else
 130:./pulseb.c    **** 	{
 131:./pulseb.c    **** 		// if nPulses is zero, run forever
 132:./pulseb.c    **** 		PulseT1AMode &= ~PULSE_MODE_COUNTED;
 428               		.stabn	68,0,132,.LM29-pulseT1ARun
 429               	.LM29:
 430 013e 8091 0000 		lds r24,PulseT1AMode
GAS LISTING /var/tmp//ccsuTKi5.s 			page 11


 431 0142 8E7F      		andi r24,lo8(-2)
 432 0144 8093 0000 		sts PulseT1AMode,r24
 133:./pulseb.c    **** 		PulseT1ACount = 1<<1;
 433               		.stabn	68,0,133,.LM30-pulseT1ARun
 434               	.LM30:
 435 0148 82E0      		ldi r24,lo8(2)
 436 014a 90E0      		ldi r25,hi8(2)
 437 014c 9093 0000 		sts (PulseT1ACount)+1,r25
 438 0150 8093 0000 		sts PulseT1ACount,r24
 439               	.L14:
 134:./pulseb.c    **** 	}
 135:./pulseb.c    **** 	// set OutputCompare action to toggle OC1A pin
 136:./pulseb.c    **** 	cbi(TCCR1A,COM1A1);
 440               		.stabn	68,0,136,.LM31-pulseT1ARun
 441               	.LM31:
 442 0154 8FB5      		in r24,79-0x20
 443 0156 8F77      		andi r24,lo8(127)
 444 0158 8FBD      		out 79-0x20,r24
 137:./pulseb.c    **** 	sbi(TCCR1A,COM1A0);
 445               		.stabn	68,0,137,.LM32-pulseT1ARun
 446               	.LM32:
 447 015a 8FB5      		in r24,79-0x20
 448 015c 8064      		ori r24,lo8(64)
 449 015e 8FBD      		out 79-0x20,r24
 138:./pulseb.c    **** 
 139:./pulseb.c    **** 	// now the "enabling" stuff
 140:./pulseb.c    **** 
 141:./pulseb.c    **** 	// set the output compare one pulse cycle ahead of current timer position 
 142:./pulseb.c    **** 	// to make sure we don't have to wait until the timer overflows and comes
 143:./pulseb.c    **** 	// back to the current value
 144:./pulseb.c    **** 	// set future output compare time to TCNT1 + PulseT1APeriodTics
 145:./pulseb.c    **** 	//outw(OCR1A, inw(TCNT1) + PulseT1APeriodTics);
 146:./pulseb.c    **** 	OCR1A += PulseT1APeriodTics;
 450               		.stabn	68,0,146,.LM33-pulseT1ARun
 451               	.LM33:
 452 0160 8AB5      		in r24,74-0x20
 453 0162 9BB5      		in r25,(74)+1-0x20
 454 0164 2091 0000 		lds r18,PulseT1APeriodTics
 455 0168 3091 0000 		lds r19,(PulseT1APeriodTics)+1
 456 016c 820F      		add r24,r18
 457 016e 931F      		adc r25,r19
 458 0170 9BBD      		out (74)+1-0x20,r25
 459 0172 8ABD      		out 74-0x20,r24
 147:./pulseb.c    **** 
 148:./pulseb.c    **** 	// enable OutputCompare interrupt
 149:./pulseb.c    **** 	sbi(TIMSK, OCIE1A);
 460               		.stabn	68,0,149,.LM34-pulseT1ARun
 461               	.LM34:
 462 0174 89B7      		in r24,89-0x20
 463 0176 8061      		ori r24,lo8(16)
 464 0178 89BF      		out 89-0x20,r24
 465               	/* epilogue: frame size=0 */
 466 017a 0895      		ret
 467               	/* epilogue end (size=1) */
 468               	/* function pulseT1ARun size 46 (45) */
 469               		.size	pulseT1ARun, .-pulseT1ARun
 470               	.Lscope5:
GAS LISTING /var/tmp//ccsuTKi5.s 			page 12


 471               		.stabs	"",36,0,0,.Lscope5-pulseT1ARun
 472               		.stabd	78,0,0
 473               		.stabs	"pulseT1BRun:F(0,15)",36,0,153,pulseT1BRun
 474               		.stabs	"nPulses:P(6,3)",64,0,152,18
 475               	.global	pulseT1BRun
 476               		.type	pulseT1BRun, @function
 477               	pulseT1BRun:
 478               		.stabd	46,0,0
 150:./pulseb.c    **** }
 151:./pulseb.c    **** 
 152:./pulseb.c    **** void pulseT1BRun(u16 nPulses)
 153:./pulseb.c    **** {
 479               		.stabn	68,0,153,.LM35-pulseT1BRun
 480               	.LM35:
 481               	/* prologue: frame size=0 */
 482               	/* prologue end (size=0) */
 483 017c 9C01      		movw r18,r24
 154:./pulseb.c    **** 	// set the number of pulses we want and the mode
 155:./pulseb.c    **** 	if(nPulses)
 484               		.stabn	68,0,155,.LM36-pulseT1BRun
 485               	.LM36:
 486 017e 892B      		or r24,r25
 487 0180 61F0      		breq .L17
 156:./pulseb.c    **** 	{
 157:./pulseb.c    **** 		// if the nPulses is non-zero, use "counted" mode
 158:./pulseb.c    **** 		PulseT1BMode |= PULSE_MODE_COUNTED;
 488               		.stabn	68,0,158,.LM37-pulseT1BRun
 489               	.LM37:
 490 0182 8091 0000 		lds r24,PulseT1BMode
 491 0186 8160      		ori r24,lo8(1)
 492 0188 8093 0000 		sts PulseT1BMode,r24
 159:./pulseb.c    **** 		PulseT1BCount = nPulses<<1;
 493               		.stabn	68,0,159,.LM38-pulseT1BRun
 494               	.LM38:
 495 018c 220F      		lsl r18
 496 018e 331F      		rol r19
 497 0190 3093 0000 		sts (PulseT1BCount)+1,r19
 498 0194 2093 0000 		sts PulseT1BCount,r18
 499 0198 0BC0      		rjmp .L19
 500               	.L17:
 160:./pulseb.c    **** 	}
 161:./pulseb.c    **** 	else
 162:./pulseb.c    **** 	{
 163:./pulseb.c    **** 		// if nPulses is zero, run forever
 164:./pulseb.c    **** 		PulseT1BMode &= ~PULSE_MODE_COUNTED;
 501               		.stabn	68,0,164,.LM39-pulseT1BRun
 502               	.LM39:
 503 019a 8091 0000 		lds r24,PulseT1BMode
 504 019e 8E7F      		andi r24,lo8(-2)
 505 01a0 8093 0000 		sts PulseT1BMode,r24
 165:./pulseb.c    **** 		PulseT1BCount = 1<<1;
 506               		.stabn	68,0,165,.LM40-pulseT1BRun
 507               	.LM40:
 508 01a4 82E0      		ldi r24,lo8(2)
 509 01a6 90E0      		ldi r25,hi8(2)
 510 01a8 9093 0000 		sts (PulseT1BCount)+1,r25
 511 01ac 8093 0000 		sts PulseT1BCount,r24
GAS LISTING /var/tmp//ccsuTKi5.s 			page 13


 512               	.L19:
 166:./pulseb.c    **** 	}
 167:./pulseb.c    **** 	// set OutputCompare action to toggle OC1B pin
 168:./pulseb.c    **** 	// (note: with all the A's and B's flying around, TCCR1A is not a bug)
 169:./pulseb.c    **** 	cbi(TCCR1A,COM1B1);
 513               		.stabn	68,0,169,.LM41-pulseT1BRun
 514               	.LM41:
 515 01b0 8FB5      		in r24,79-0x20
 516 01b2 8F7D      		andi r24,lo8(-33)
 517 01b4 8FBD      		out 79-0x20,r24
 170:./pulseb.c    **** 	sbi(TCCR1A,COM1B0);
 518               		.stabn	68,0,170,.LM42-pulseT1BRun
 519               	.LM42:
 520 01b6 8FB5      		in r24,79-0x20
 521 01b8 8061      		ori r24,lo8(16)
 522 01ba 8FBD      		out 79-0x20,r24
 171:./pulseb.c    **** 
 172:./pulseb.c    **** 	// now the "enabling" stuff
 173:./pulseb.c    **** 
 174:./pulseb.c    **** 	// set the output compare one pulse cycle ahead of current timer position 
 175:./pulseb.c    **** 	// to make sure we don't have to wait until the timer overflows and comes
 176:./pulseb.c    **** 	// back to the current value
 177:./pulseb.c    **** 	// set future output compare time to TCNT1 + PulseT1APeriodTics
 178:./pulseb.c    **** 	//outw(OCR1B, inw(TCNT1) + PulseT1BPeriodTics);
 179:./pulseb.c    **** 	OCR1B += PulseT1BPeriodTics;
 523               		.stabn	68,0,179,.LM43-pulseT1BRun
 524               	.LM43:
 525 01bc 88B5      		in r24,72-0x20
 526 01be 99B5      		in r25,(72)+1-0x20
 527 01c0 2091 0000 		lds r18,PulseT1BPeriodTics
 528 01c4 3091 0000 		lds r19,(PulseT1BPeriodTics)+1
 529 01c8 820F      		add r24,r18
 530 01ca 931F      		adc r25,r19
 531 01cc 99BD      		out (72)+1-0x20,r25
 532 01ce 88BD      		out 72-0x20,r24
 180:./pulseb.c    **** 
 181:./pulseb.c    **** 	// enable OutputCompare interrupt
 182:./pulseb.c    **** 	sbi(TIMSK, OCIE1B);
 533               		.stabn	68,0,182,.LM44-pulseT1BRun
 534               	.LM44:
 535 01d0 89B7      		in r24,89-0x20
 536 01d2 8860      		ori r24,lo8(8)
 537 01d4 89BF      		out 89-0x20,r24
 538               	/* epilogue: frame size=0 */
 539 01d6 0895      		ret
 540               	/* epilogue end (size=1) */
 541               	/* function pulseT1BRun size 46 (45) */
 542               		.size	pulseT1BRun, .-pulseT1BRun
 543               	.Lscope6:
 544               		.stabs	"",36,0,0,.Lscope6-pulseT1BRun
 545               		.stabd	78,0,0
 546               		.stabs	"pulseT1AStop:F(0,15)",36,0,186,pulseT1AStop
 547               	.global	pulseT1AStop
 548               		.type	pulseT1AStop, @function
 549               	pulseT1AStop:
 550               		.stabd	46,0,0
 183:./pulseb.c    **** }
GAS LISTING /var/tmp//ccsuTKi5.s 			page 14


 184:./pulseb.c    **** 
 185:./pulseb.c    **** void pulseT1AStop(void)
 186:./pulseb.c    **** {
 551               		.stabn	68,0,186,.LM45-pulseT1AStop
 552               	.LM45:
 553               	/* prologue: frame size=0 */
 554               	/* prologue end (size=0) */
 187:./pulseb.c    **** 	// stop output regardless of remaining pulses or mode
 188:./pulseb.c    **** 	// go to "counted" mode
 189:./pulseb.c    **** 	PulseT1AMode |= PULSE_MODE_COUNTED;
 555               		.stabn	68,0,189,.LM46-pulseT1AStop
 556               	.LM46:
 557 01d8 8091 0000 		lds r24,PulseT1AMode
 558 01dc 8160      		ori r24,lo8(1)
 559 01de 8093 0000 		sts PulseT1AMode,r24
 190:./pulseb.c    **** 	// set pulses to zero
 191:./pulseb.c    **** 	PulseT1ACount = 0;
 560               		.stabn	68,0,191,.LM47-pulseT1AStop
 561               	.LM47:
 562 01e2 1092 0000 		sts (PulseT1ACount)+1,__zero_reg__
 563 01e6 1092 0000 		sts PulseT1ACount,__zero_reg__
 564               	/* epilogue: frame size=0 */
 565 01ea 0895      		ret
 566               	/* epilogue end (size=1) */
 567               	/* function pulseT1AStop size 10 (9) */
 568               		.size	pulseT1AStop, .-pulseT1AStop
 569               	.Lscope7:
 570               		.stabs	"",36,0,0,.Lscope7-pulseT1AStop
 571               		.stabd	78,0,0
 572               		.stabs	"pulseT1BStop:F(0,15)",36,0,195,pulseT1BStop
 573               	.global	pulseT1BStop
 574               		.type	pulseT1BStop, @function
 575               	pulseT1BStop:
 576               		.stabd	46,0,0
 192:./pulseb.c    **** }
 193:./pulseb.c    **** 
 194:./pulseb.c    **** void pulseT1BStop(void)
 195:./pulseb.c    **** {
 577               		.stabn	68,0,195,.LM48-pulseT1BStop
 578               	.LM48:
 579               	/* prologue: frame size=0 */
 580               	/* prologue end (size=0) */
 196:./pulseb.c    **** 	// stop output regardless of remaining pulses or mode
 197:./pulseb.c    **** 	// go to "counted" mode
 198:./pulseb.c    **** 	PulseT1BMode |= PULSE_MODE_COUNTED;
 581               		.stabn	68,0,198,.LM49-pulseT1BStop
 582               	.LM49:
 583 01ec 8091 0000 		lds r24,PulseT1BMode
 584 01f0 8160      		ori r24,lo8(1)
 585 01f2 8093 0000 		sts PulseT1BMode,r24
 199:./pulseb.c    **** 	// set pulses to zero
 200:./pulseb.c    **** 	PulseT1BCount = 0;
 586               		.stabn	68,0,200,.LM50-pulseT1BStop
 587               	.LM50:
 588 01f6 1092 0000 		sts (PulseT1BCount)+1,__zero_reg__
 589 01fa 1092 0000 		sts PulseT1BCount,__zero_reg__
 590               	/* epilogue: frame size=0 */
GAS LISTING /var/tmp//ccsuTKi5.s 			page 15


 591 01fe 0895      		ret
 592               	/* epilogue end (size=1) */
 593               	/* function pulseT1BStop size 10 (9) */
 594               		.size	pulseT1BStop, .-pulseT1BStop
 595               	.Lscope8:
 596               		.stabs	"",36,0,0,.Lscope8-pulseT1BStop
 597               		.stabd	78,0,0
 598               		.stabs	"pulseT1ARemaining:F(6,3)",36,0,204,pulseT1ARemaining
 599               	.global	pulseT1ARemaining
 600               		.type	pulseT1ARemaining, @function
 601               	pulseT1ARemaining:
 602               		.stabd	46,0,0
 201:./pulseb.c    **** }
 202:./pulseb.c    **** 
 203:./pulseb.c    **** u16 pulseT1ARemaining(void)
 204:./pulseb.c    **** {
 603               		.stabn	68,0,204,.LM51-pulseT1ARemaining
 604               	.LM51:
 605               	/* prologue: frame size=0 */
 606               	/* prologue end (size=0) */
 205:./pulseb.c    **** 	// return the number of pulses remaining for channel A
 206:./pulseb.c    **** 	// add 1 to make sure we round up, >>1 equivalent to /2
 207:./pulseb.c    **** 	return (PulseT1ACount+1)>>1;
 607               		.stabn	68,0,207,.LM52-pulseT1ARemaining
 608               	.LM52:
 609 0200 8091 0000 		lds r24,PulseT1ACount
 610 0204 9091 0000 		lds r25,(PulseT1ACount)+1
 611 0208 0196      		adiw r24,1
 208:./pulseb.c    **** }
 612               		.stabn	68,0,208,.LM53-pulseT1ARemaining
 613               	.LM53:
 614 020a 9695      		lsr r25
 615 020c 8795      		ror r24
 616               	/* epilogue: frame size=0 */
 617 020e 0895      		ret
 618               	/* epilogue end (size=1) */
 619               	/* function pulseT1ARemaining size 8 (7) */
 620               		.size	pulseT1ARemaining, .-pulseT1ARemaining
 621               	.Lscope9:
 622               		.stabs	"",36,0,0,.Lscope9-pulseT1ARemaining
 623               		.stabd	78,0,0
 624               		.stabs	"pulseT1BRemaining:F(6,3)",36,0,211,pulseT1BRemaining
 625               	.global	pulseT1BRemaining
 626               		.type	pulseT1BRemaining, @function
 627               	pulseT1BRemaining:
 628               		.stabd	46,0,0
 209:./pulseb.c    **** 
 210:./pulseb.c    **** u16 pulseT1BRemaining(void)
 211:./pulseb.c    **** {
 629               		.stabn	68,0,211,.LM54-pulseT1BRemaining
 630               	.LM54:
 631               	/* prologue: frame size=0 */
 632               	/* prologue end (size=0) */
 212:./pulseb.c    **** 	// return the number of pulses remaining for channel A
 213:./pulseb.c    **** 	// add 1 to make sure we round up, >>1 equivalent to /2
 214:./pulseb.c    **** 	return (PulseT1BCount+1)>>1;
 633               		.stabn	68,0,214,.LM55-pulseT1BRemaining
GAS LISTING /var/tmp//ccsuTKi5.s 			page 16


 634               	.LM55:
 635 0210 8091 0000 		lds r24,PulseT1BCount
 636 0214 9091 0000 		lds r25,(PulseT1BCount)+1
 637 0218 0196      		adiw r24,1
 215:./pulseb.c    **** }
 638               		.stabn	68,0,215,.LM56-pulseT1BRemaining
 639               	.LM56:
 640 021a 9695      		lsr r25
 641 021c 8795      		ror r24
 642               	/* epilogue: frame size=0 */
 643 021e 0895      		ret
 644               	/* epilogue end (size=1) */
 645               	/* function pulseT1BRemaining size 8 (7) */
 646               		.size	pulseT1BRemaining, .-pulseT1BRemaining
 647               	.Lscope10:
 648               		.stabs	"",36,0,0,.Lscope10-pulseT1BRemaining
 649               		.stabd	78,0,0
 650               		.stabs	"pulseT1AService:F(0,15)",36,0,218,pulseT1AService
 651               	.global	pulseT1AService
 652               		.type	pulseT1AService, @function
 653               	pulseT1AService:
 654               		.stabd	46,0,0
 216:./pulseb.c    **** 
 217:./pulseb.c    **** void pulseT1AService(void)
 218:./pulseb.c    **** {
 655               		.stabn	68,0,218,.LM57-pulseT1AService
 656               	.LM57:
 657               	/* prologue: frame size=0 */
 658               	/* prologue end (size=0) */
 219:./pulseb.c    **** 	// check if TimerPulseACount is non-zero
 220:./pulseb.c    **** 	//		(i.e. pulses are still requested)
 221:./pulseb.c    **** 	if(PulseT1ACount)
 659               		.stabn	68,0,221,.LM58-pulseT1AService
 660               	.LM58:
 661 0220 8091 0000 		lds r24,PulseT1ACount
 662 0224 9091 0000 		lds r25,(PulseT1ACount)+1
 663 0228 892B      		or r24,r25
 664 022a C1F0      		breq .L30
 222:./pulseb.c    **** 	{
 223:./pulseb.c    **** 		//u16 OCValue;
 224:./pulseb.c    **** 		// read in current value of output compare register OCR1A
 225:./pulseb.c    **** 		//OCValue =  inp(OCR1AL);		// read low byte of OCR1A
 226:./pulseb.c    **** 		//OCValue += inp(OCR1AH)<<8;	// read high byte of OCR1A
 227:./pulseb.c    **** 		// increment OCR1A value by PulseT1APeriodTics
 228:./pulseb.c    **** 		//OCValue += PulseT1APeriodTics;
 229:./pulseb.c    **** 		// set future output compare time to this new value
 230:./pulseb.c    **** 		//outp((OCValue>>8),		OCR1AH);	// write high byte
 231:./pulseb.c    **** 		//outp((OCValue & 0x00FF),OCR1AL);	// write low byte
 232:./pulseb.c    **** 
 233:./pulseb.c    **** 		// the following line should be identical in operation
 234:./pulseb.c    **** 		// to the lines above, but for the moment, I'm not convinced
 235:./pulseb.c    **** 		// this method is bug-free.  At least it's simpler!
 236:./pulseb.c    **** 		//outw(OCR1A, inw(OCR1A) + PulseT1APeriodTics);
 237:./pulseb.c    **** 		// change again
 238:./pulseb.c    **** 		OCR1A += PulseT1APeriodTics;
 665               		.stabn	68,0,238,.LM59-pulseT1AService
 666               	.LM59:
GAS LISTING /var/tmp//ccsuTKi5.s 			page 17


 667 022c 8AB5      		in r24,74-0x20
 668 022e 9BB5      		in r25,(74)+1-0x20
 669 0230 2091 0000 		lds r18,PulseT1APeriodTics
 670 0234 3091 0000 		lds r19,(PulseT1APeriodTics)+1
 671 0238 820F      		add r24,r18
 672 023a 931F      		adc r25,r19
 673 023c 9BBD      		out (74)+1-0x20,r25
 674 023e 8ABD      		out 74-0x20,r24
 239:./pulseb.c    **** 						
 240:./pulseb.c    **** 		// decrement the number of pulses executed
 241:./pulseb.c    **** 		if(PulseT1AMode & PULSE_MODE_COUNTED)
 675               		.stabn	68,0,241,.LM60-pulseT1AService
 676               	.LM60:
 677 0240 8091 0000 		lds r24,PulseT1AMode
 678 0244 80FF      		sbrs r24,0
 679 0246 13C0      		rjmp .L34
 242:./pulseb.c    **** 			PulseT1ACount--;
 680               		.stabn	68,0,242,.LM61-pulseT1AService
 681               	.LM61:
 682 0248 8091 0000 		lds r24,PulseT1ACount
 683 024c 9091 0000 		lds r25,(PulseT1ACount)+1
 684 0250 0197      		sbiw r24,1
 685 0252 9093 0000 		sts (PulseT1ACount)+1,r25
 686 0256 8093 0000 		sts PulseT1ACount,r24
 687 025a 0895      		ret
 688               	.L30:
 243:./pulseb.c    **** 	}
 244:./pulseb.c    **** 	else
 245:./pulseb.c    **** 	{
 246:./pulseb.c    **** 		// pulse count has reached zero
 247:./pulseb.c    **** 		// disable the output compare's action on OC1A pin
 248:./pulseb.c    **** 		cbi(TCCR1A,COM1A1);
 689               		.stabn	68,0,248,.LM62-pulseT1AService
 690               	.LM62:
 691 025c 8FB5      		in r24,79-0x20
 692 025e 8F77      		andi r24,lo8(127)
 693 0260 8FBD      		out 79-0x20,r24
 249:./pulseb.c    **** 		cbi(TCCR1A,COM1A0);
 694               		.stabn	68,0,249,.LM63-pulseT1AService
 695               	.LM63:
 696 0262 8FB5      		in r24,79-0x20
 697 0264 8F7B      		andi r24,lo8(-65)
 698 0266 8FBD      		out 79-0x20,r24
 250:./pulseb.c    **** 		// and disable the output compare's interrupt to stop pulsing
 251:./pulseb.c    **** 		cbi(TIMSK, OCIE1A);
 699               		.stabn	68,0,251,.LM64-pulseT1AService
 700               	.LM64:
 701 0268 89B7      		in r24,89-0x20
 702 026a 8F7E      		andi r24,lo8(-17)
 703 026c 89BF      		out 89-0x20,r24
 704               	.L34:
 705 026e 0895      		ret
 706               	/* epilogue: frame size=0 */
 707               	/* epilogue: noreturn */
 708               	/* epilogue end (size=0) */
 709               	/* function pulseT1AService size 40 (40) */
 710               		.size	pulseT1AService, .-pulseT1AService
GAS LISTING /var/tmp//ccsuTKi5.s 			page 18


 711               	.Lscope11:
 712               		.stabs	"",36,0,0,.Lscope11-pulseT1AService
 713               		.stabd	78,0,0
 714               		.stabs	"pulseT1BService:F(0,15)",36,0,256,pulseT1BService
 715               	.global	pulseT1BService
 716               		.type	pulseT1BService, @function
 717               	pulseT1BService:
 718               		.stabd	46,0,0
 252:./pulseb.c    **** 	}
 253:./pulseb.c    **** }
 254:./pulseb.c    **** 
 255:./pulseb.c    **** void pulseT1BService(void)
 256:./pulseb.c    **** {
 719               		.stabn	68,0,256,.LM65-pulseT1BService
 720               	.LM65:
 721               	/* prologue: frame size=0 */
 722               	/* prologue end (size=0) */
 257:./pulseb.c    **** 	// check if TimerPulseACount is non-zero
 258:./pulseb.c    **** 	//		(i.e. pulses are still requested)
 259:./pulseb.c    **** 	if(PulseT1BCount)
 723               		.stabn	68,0,259,.LM66-pulseT1BService
 724               	.LM66:
 725 0270 8091 0000 		lds r24,PulseT1BCount
 726 0274 9091 0000 		lds r25,(PulseT1BCount)+1
 727 0278 892B      		or r24,r25
 728 027a C9F1      		breq .L36
 260:./pulseb.c    **** 	{
 261:./pulseb.c    **** 		//u16 OCValue;
 262:./pulseb.c    **** 		// read in current value of output compare register OCR1B
 263:./pulseb.c    **** 		//OCValue =  inp(OCR1BL);		// read low byte of OCR1B
 264:./pulseb.c    **** 		//OCValue += inp(OCR1BH)<<8;	// read high byte of OCR1B
 265:./pulseb.c    **** 		// increment OCR1B value by PulseT1BPeriodTics
 266:./pulseb.c    **** 		//OCValue += PulseT1BPeriodTics; 
 267:./pulseb.c    **** 		// set future output compare time to this new value
 268:./pulseb.c    **** 		//outp((OCValue>>8),		OCR1BH);	// write high byte
 269:./pulseb.c    **** 		//outp((OCValue & 0x00FF),OCR1BL);	// write low byte
 270:./pulseb.c    **** 
 271:./pulseb.c    **** 		// the following line should be identical in operation
 272:./pulseb.c    **** 		// to the lines above, but for the moment, I'm not convinced
 273:./pulseb.c    **** 		// this method is bug-free.  At least it's simpler!
 274:./pulseb.c    **** 		//outw(OCR1B, inw(OCR1B) + PulseT1BPeriodTics);
 275:./pulseb.c    **** 		// change again
 276:./pulseb.c    **** 		OCR1B += PulseT1BPeriodTics;
 729               		.stabn	68,0,276,.LM67-pulseT1BService
 730               	.LM67:
 731 027c 88B5      		in r24,72-0x20
 732 027e 99B5      		in r25,(72)+1-0x20
 733 0280 2091 0000 		lds r18,PulseT1BPeriodTics
 734 0284 3091 0000 		lds r19,(PulseT1BPeriodTics)+1
 735 0288 820F      		add r24,r18
 736 028a 931F      		adc r25,r19
 737 028c 99BD      		out (72)+1-0x20,r25
 738 028e 88BD      		out 72-0x20,r24
 277:./pulseb.c    **** 
 278:./pulseb.c    **** 		
 279:./pulseb.c    **** 		// decrement the number of pulses executed
 280:./pulseb.c    **** 		if(PulseT1BMode & PULSE_MODE_COUNTED)
GAS LISTING /var/tmp//ccsuTKi5.s 			page 19


 739               		.stabn	68,0,280,.LM68-pulseT1BService
 740               	.LM68:
 741 0290 8091 0000 		lds r24,PulseT1BMode
 742 0294 80FF      		sbrs r24,0
 743 0296 34C0      		rjmp .L42
 281:./pulseb.c    **** 		{
 282:./pulseb.c    **** 			PulseT1BCount--;
 744               		.stabn	68,0,282,.LM69-pulseT1BService
 745               	.LM69:
 746 0298 8091 0000 		lds r24,PulseT1BCount
 747 029c 9091 0000 		lds r25,(PulseT1BCount)+1
 748 02a0 0197      		sbiw r24,1
 749 02a2 9093 0000 		sts (PulseT1BCount)+1,r25
 750 02a6 8093 0000 		sts PulseT1BCount,r24
 283:./pulseb.c    **** 			if(inb(PORTD) & 0x20)  // should mean 001000000 & result, ie if bit portd5 is set, then add posi
 751               		.stabn	68,0,283,.LM70-pulseT1BService
 752               	.LM70:
 753 02aa 959B      		sbis 50-0x20,5
 754 02ac 0CC0      		rjmp .L40
 284:./pulseb.c    **** 				Pulse_Position++;
 755               		.stabn	68,0,284,.LM71-pulseT1BService
 756               	.LM71:
 757 02ae 8091 0000 		lds r24,Pulse_Position
 758 02b2 9091 0000 		lds r25,(Pulse_Position)+1
 759 02b6 A091 0000 		lds r26,(Pulse_Position)+2
 760 02ba B091 0000 		lds r27,(Pulse_Position)+3
 761 02be 0196      		adiw r24,1
 762 02c0 A11D      		adc r26,__zero_reg__
 763 02c2 B11D      		adc r27,__zero_reg__
 764 02c4 0BC0      		rjmp .L43
 765               	.L40:
 285:./pulseb.c    **** 			else
 286:./pulseb.c    **** 				Pulse_Position--;
 766               		.stabn	68,0,286,.LM72-pulseT1BService
 767               	.LM72:
 768 02c6 8091 0000 		lds r24,Pulse_Position
 769 02ca 9091 0000 		lds r25,(Pulse_Position)+1
 770 02ce A091 0000 		lds r26,(Pulse_Position)+2
 771 02d2 B091 0000 		lds r27,(Pulse_Position)+3
 772 02d6 0197      		sbiw r24,1
 773 02d8 A109      		sbc r26,__zero_reg__
 774 02da B109      		sbc r27,__zero_reg__
 775               	.L43:
 776 02dc 8093 0000 		sts Pulse_Position,r24
 777 02e0 9093 0000 		sts (Pulse_Position)+1,r25
 778 02e4 A093 0000 		sts (Pulse_Position)+2,r26
 779 02e8 B093 0000 		sts (Pulse_Position)+3,r27
 780 02ec 0895      		ret
 781               	.L36:
 287:./pulseb.c    **** 		}
 288:./pulseb.c    **** 		
 289:./pulseb.c    **** 	}
 290:./pulseb.c    **** 	else
 291:./pulseb.c    **** 	{
 292:./pulseb.c    **** 		// pulse count has reached zero
 293:./pulseb.c    **** 		// disable the output compare's action on OC1B pin
 294:./pulseb.c    **** 		cbi(TCCR1A,COM1B1);
GAS LISTING /var/tmp//ccsuTKi5.s 			page 20


 782               		.stabn	68,0,294,.LM73-pulseT1BService
 783               	.LM73:
 784 02ee 8FB5      		in r24,79-0x20
 785 02f0 8F7D      		andi r24,lo8(-33)
 786 02f2 8FBD      		out 79-0x20,r24
 295:./pulseb.c    **** 		cbi(TCCR1A,COM1B0);
 787               		.stabn	68,0,295,.LM74-pulseT1BService
 788               	.LM74:
 789 02f4 8FB5      		in r24,79-0x20
 790 02f6 8F7E      		andi r24,lo8(-17)
 791 02f8 8FBD      		out 79-0x20,r24
 296:./pulseb.c    **** 		// and disable the output compare's interrupt to stop pulsing
 297:./pulseb.c    **** 		cbi(TIMSK, OCIE1B);
 792               		.stabn	68,0,297,.LM75-pulseT1BService
 793               	.LM75:
 794 02fa 89B7      		in r24,89-0x20
 795 02fc 877F      		andi r24,lo8(-9)
 796 02fe 89BF      		out 89-0x20,r24
 797               	.L42:
 798 0300 0895      		ret
 799               	/* epilogue: frame size=0 */
 800               	/* epilogue: noreturn */
 801               	/* epilogue end (size=0) */
 802               	/* function pulseT1BService size 73 (73) */
 803               		.size	pulseT1BService, .-pulseT1BService
 804               	.Lscope12:
 805               		.stabs	"",36,0,0,.Lscope12-pulseT1BService
 806               		.stabd	78,0,0
 807               		.section	.progmem.data,"a",@progbits
 808               		.type	__c.1861, @object
 809               		.size	__c.1861, 18
 810               	__c.1861:
 811 0000 4578 6974 		.string	"Exited program!\r\n"
 811      6564 2070 
 811      726F 6772 
 811      616D 210D 
 811      0A00 
 812               		.type	__c.1856, @object
 813               		.size	__c.1856, 17
 814               	__c.1856:
 815 0012 7469 6D65 		.string	"times through!\r\n"
 815      7320 7468 
 815      726F 7567 
 815      6821 0D0A 
 815      00
 816               		.type	__c.1851, @object
 817               		.size	__c.1851, 44
 818               	__c.1851:
 819 0023 0D0A 5765 		.string	"\r\nWelcome to the Command Line Test Suite!\r\n"
 819      6C63 6F6D 
 819      6520 746F 
 819      2074 6865 
 819      2043 6F6D 
 820               		.data
 821               	.LC0:
 822 0043 6C00      		.string	"l"
 823               	.LC1:
GAS LISTING /var/tmp//ccsuTKi5.s 			page 21


 824 0045 7200      		.string	"r"
 825               	.LC2:
 826 0047 7400      		.string	"t"
 827               	.LC3:
 828 0049 7000      		.string	"p"
 829               	.LC4:
 830 004b 6900      		.string	"i"
 831               	.LC5:
 832 004d 6600      		.string	"f"
 833               	.LC6:
 834 004f 7700      		.string	"w"
 835               	.LC7:
 836 0051 3200      		.string	"2"
 837               	.LC8:
 838 0053 3300      		.string	"3"
 839               	.LC9:
 840 0055 6461 7300 		.string	"das"
 841               	.LC10:
 842 0059 6461 6900 		.string	"dai"
 843               		.text
 844               		.stabs	"goCmdline:F(0,15)",36,0,154,goCmdline
 845               	.global	goCmdline
 846               		.type	goCmdline, @function
 847               	goCmdline:
 848               		.stabd	46,0,0
 849               		.stabs	"cmdlinetest.c",132,0,0,.Ltext2
 850               	.Ltext2:
   1:cmdlinetest.c **** //*****************************************************************************
   2:cmdlinetest.c **** // File Name	: cmdlinetest.c
   3:cmdlinetest.c **** // 
   4:cmdlinetest.c **** // Title		: example usage of cmdline (command line) functions
   5:cmdlinetest.c **** // Revision		: 1.0
   6:cmdlinetest.c **** // Notes		:	
   7:cmdlinetest.c **** // Target MCU	: Atmel AVR series
   8:cmdlinetest.c **** // Editor Tabs	: 4
   9:cmdlinetest.c **** // 
  10:cmdlinetest.c **** // Revision History:
  11:cmdlinetest.c **** // When			Who			Description of change
  12:cmdlinetest.c **** // -----------	-----------	-----------------------
  13:cmdlinetest.c **** // 21-Jul-2003	pstang		Created the program
  14:cmdlinetest.c **** //*****************************************************************************
  15:cmdlinetest.c **** 
  16:cmdlinetest.c **** 
  17:cmdlinetest.c **** //----- Include Files ---------------------------------------------------------
  18:cmdlinetest.c **** #include <avr/io.h>			// include I/O definitions (port names, pin names, etc)
  19:cmdlinetest.c **** #include <avr/interrupt.h>	// include interrupt support
  20:cmdlinetest.c **** 
  21:cmdlinetest.c **** #include "global.h"		// include our global settings
  22:cmdlinetest.c **** #include "uart.h"		// include uart function library
  23:cmdlinetest.c **** #include "rprintf.h"	// include printf function library
  24:cmdlinetest.c **** #include "a2d.h"		// include A/D converter function library
  25:cmdlinetest.c **** #include "timer.h"		// include timer function library (timing, PWM, etc)
  26:cmdlinetest.c **** #include "vt100.h"		// include vt100 terminal support
  27:cmdlinetest.c **** #include "cmdline.h"	// include cmdline function library
  28:cmdlinetest.c **** #include "servo.h"
  29:cmdlinetest.c **** #include "i2c.h"
  30:cmdlinetest.c **** #include "string.h"
GAS LISTING /var/tmp//ccsuTKi5.s 			page 22


  31:cmdlinetest.c **** #include "servoconf.h"
  32:cmdlinetest.c **** #include <pulseb.h>
  33:cmdlinetest.c **** #include <pulseb.c>
  34:cmdlinetest.c **** 
  35:cmdlinetest.c **** //I2C address definitions
  36:cmdlinetest.c **** #define LOCAL_ADDR	0xA0
  37:cmdlinetest.c **** #define TARGET_ADDR	0xA0
  38:cmdlinetest.c **** 
  39:cmdlinetest.c **** // Peripheral initialization
  40:cmdlinetest.c **** 
  41:cmdlinetest.c **** #define TCNT0_INIT (0xFF-CPUCLK/256/TICKRATE)
  42:cmdlinetest.c **** #define LEFT_SERVO_CHAN 	4
  43:cmdlinetest.c **** #define RIGHT_SERVO_CHAN 	3
  44:cmdlinetest.c **** #define THROTTLE_SERVO_CHAN 0
  45:cmdlinetest.c **** #define CAM_PAN_SERVO_CHAN  1
  46:cmdlinetest.c **** #define CAM_TILT_SERVO_CHAN 2
  47:cmdlinetest.c **** 
  48:cmdlinetest.c **** #define SPEED_SERVO	1
  49:cmdlinetest.c **** #undef DEBUG
  50:cmdlinetest.c **** 
  51:cmdlinetest.c **** // Pulse defines
  52:cmdlinetest.c **** #define MULTIPLIER 100
  53:cmdlinetest.c **** 
  54:cmdlinetest.c **** void setLeftServo(void);
  55:cmdlinetest.c **** void setRightServo(void);
  56:cmdlinetest.c **** void setThrottleServo(void);
  57:cmdlinetest.c **** void setCamPanServo(void);
  58:cmdlinetest.c **** void setCamTiltServo(void);
  59:cmdlinetest.c **** void setFeedbackInterval(void);
  60:cmdlinetest.c **** void setGeckoFreq(void);
  61:cmdlinetest.c **** 
  62:cmdlinetest.c **** void 	i2cSetup(void);
  63:cmdlinetest.c **** void  	i2cSlaveReceiveService(u08 receiveDataLength, u08* receiveData);
  64:cmdlinetest.c **** u08 	i2cSlaveTransmitService(u08 receiveDataLength, u08* receiveData);
  65:cmdlinetest.c **** void 	i2cMasterSendDiag(u08 deviceAddr, u08 length, u08* data);
  66:cmdlinetest.c **** 
  67:cmdlinetest.c **** void 	i2cMaster_Receive();
  68:cmdlinetest.c **** void 	i2cMaster_Send();
  69:cmdlinetest.c **** void 	i2cMaster_Auto_Send(u08 message);
  70:cmdlinetest.c **** void 	i2cMaster_Auto_Receive(u08 command);
  71:cmdlinetest.c **** 
  72:cmdlinetest.c **** // I2C buffers
  73:cmdlinetest.c **** u08 slaveBuffer[] = "Pascal is cool!!Pascal is Cool!!";
  74:cmdlinetest.c **** u08 slaveBufferLength = 0x20;
  75:cmdlinetest.c **** 
  76:cmdlinetest.c **** unsigned char masterBuffer[] = "This one is the Master board";
  77:cmdlinetest.c **** unsigned char masterBufferLength = 0x20;
  78:cmdlinetest.c **** // global variables
  79:cmdlinetest.c **** u08 Run;
  80:cmdlinetest.c **** 
  81:cmdlinetest.c **** // functions
  82:cmdlinetest.c **** void goCmdline(void);
  83:cmdlinetest.c **** void dumpArgsStr(void);
  84:cmdlinetest.c **** void dumpArgsInt(void);
  85:cmdlinetest.c **** void dumpArgsHex(void);
  86:cmdlinetest.c **** 
  87:cmdlinetest.c **** u08 leftServoPos = 50 * MULTIPLIER;		//0 seems to be beyond its reach
GAS LISTING /var/tmp//ccsuTKi5.s 			page 23


  88:cmdlinetest.c **** //below for boat only
  89:cmdlinetest.c **** u16	multiplier = MULTIPLIER;
  90:cmdlinetest.c **** 
  91:cmdlinetest.c **** u08 rightServoPos;
  92:cmdlinetest.c **** u08 throttleServoPos;
  93:cmdlinetest.c **** u08 camPanServoPos;
  94:cmdlinetest.c **** u08 camTiltServoPos;
  95:cmdlinetest.c **** 
  96:cmdlinetest.c **** long numTimesThrough = 0;  // number of times through mainloop to send feedback
  97:cmdlinetest.c **** 
  98:cmdlinetest.c **** //----- Begin Code ------------------------------------------------------------
  99:cmdlinetest.c **** int main(void)
 100:cmdlinetest.c **** {
 101:cmdlinetest.c **** 	// initialize our libraries
 102:cmdlinetest.c **** 	// initialize the UART (serial port)
 103:cmdlinetest.c **** 	uartInit();
 104:cmdlinetest.c **** 	uartSetBaudRate(57600);
 105:cmdlinetest.c **** 	// make all rprintf statements use uart for output
 106:cmdlinetest.c **** 	rprintfInit(uartSendByte);
 107:cmdlinetest.c **** 	// turn on and initialize A/D converter
 108:cmdlinetest.c **** 	a2dInit();
 109:cmdlinetest.c **** 	// initialize the timer system
 110:cmdlinetest.c **** 	timerInit();
 111:cmdlinetest.c **** 	// initialize vt100 terminal
 112:cmdlinetest.c **** 	vt100Init();
 113:cmdlinetest.c **** 	// initialize modified pulse library -- pulse on t1b ONLY -- out of D4
 114:cmdlinetest.c **** 	sbi(DDRD, 4);  //pulses -- taken over by OCR1B
 115:cmdlinetest.c **** 	sbi(DDRD, 5);  //dir -- manually controlled
 116:cmdlinetest.c **** 	pulseInit();
 117:cmdlinetest.c **** 	pulseT1BSetFreq(175);	//start at a good frequency
 118:cmdlinetest.c **** 
 119:cmdlinetest.c **** 
 120:cmdlinetest.c **** 	// wait for hardware to power up
 121:cmdlinetest.c **** 	timerPause(100);
 122:cmdlinetest.c **** 
 123:cmdlinetest.c **** 	//////////////////////////////////////////////////I2C/////////////////////////////
 124:cmdlinetest.c **** 	i2cSetup();
 125:cmdlinetest.c **** 	
 126:cmdlinetest.c **** 	
 127:cmdlinetest.c **** 	//////////////////////////////////////////////////Servos//////////////////////////
 128:cmdlinetest.c **** 	servoInit();
 129:cmdlinetest.c **** 	// setup servo output channel-to-I/Opin mapping
 130:cmdlinetest.c **** 	// format is servoSetChannelIO( CHANNEL#, PORT, PIN );
 131:cmdlinetest.c **** 	servoSetChannelIO(0, _SFR_IO_ADDR(PORTC), PC2);
 132:cmdlinetest.c **** 	servoSetChannelIO(1, _SFR_IO_ADDR(PORTC), PC3);
 133:cmdlinetest.c **** 	servoSetChannelIO(2, _SFR_IO_ADDR(PORTC), PC4);
 134:cmdlinetest.c **** 	servoSetChannelIO(3, _SFR_IO_ADDR(PORTC), PC5);
 135:cmdlinetest.c **** 	servoSetChannelIO(4, _SFR_IO_ADDR(PORTC), PC6);
 136:cmdlinetest.c **** 	servoSetChannelIO(5, _SFR_IO_ADDR(PORTC), PC7);
 137:cmdlinetest.c **** 	// set port pins to output
 138:cmdlinetest.c **** 	outb(DDRC, 0xFC);
 139:cmdlinetest.c **** 	
 140:cmdlinetest.c **** 
 141:cmdlinetest.c **** 
 142:cmdlinetest.c **** 
 143:cmdlinetest.c **** 	//////////////////////////////////////////////////////////////////////////////////
 144:cmdlinetest.c **** 	rprintf("**********************powerup*************************");
GAS LISTING /var/tmp//ccsuTKi5.s 			page 24


 145:cmdlinetest.c **** 	
 146:cmdlinetest.c **** 
 147:cmdlinetest.c **** 	// start command line
 148:cmdlinetest.c **** 	goCmdline();
 149:cmdlinetest.c **** 
 150:cmdlinetest.c **** 	return 0;
 151:cmdlinetest.c **** }
 152:cmdlinetest.c **** 
 153:cmdlinetest.c **** void goCmdline(void)
 154:cmdlinetest.c **** {
 851               		.stabn	68,0,154,.LM76-goCmdline
 852               	.LM76:
 853               	/* prologue: frame size=1 */
 854 0302 EF92      		push r14
 855 0304 FF92      		push r15
 856 0306 0F93      		push r16
 857 0308 1F93      		push r17
 858 030a CF93      		push r28
 859 030c DF93      		push r29
 860 030e CDB7      		in r28,__SP_L__
 861 0310 DEB7      		in r29,__SP_H__
 862 0312 2197      		sbiw r28,1
 863 0314 0FB6      		in __tmp_reg__,__SREG__
 864 0316 F894      		cli
 865 0318 DEBF      		out __SP_H__,r29
 866 031a 0FBE      		out __SREG__,__tmp_reg__
 867 031c CDBF      		out __SP_L__,r28
 868               	/* prologue end (size=14) */
 155:cmdlinetest.c **** 	u08 c;
 156:cmdlinetest.c **** 	long timesThrough =0;
 157:cmdlinetest.c **** 	// print welcome message
 158:cmdlinetest.c **** 	vt100ClearScreen();
 869               		.stabn	68,0,158,.LM77-goCmdline
 870               	.LM77:
 871 031e 0E94 0000 		call vt100ClearScreen
 159:cmdlinetest.c **** 	vt100SetCursorPos(1,0);
 872               		.stabn	68,0,159,.LM78-goCmdline
 873               	.LM78:
 874 0322 60E0      		ldi r22,lo8(0)
 875 0324 81E0      		ldi r24,lo8(1)
 876 0326 0E94 0000 		call vt100SetCursorPos
 160:cmdlinetest.c **** 	rprintfProgStrM("\r\nWelcome to the Command Line Test Suite!\r\n");
 877               		.stabn	68,0,160,.LM79-goCmdline
 878               	.LM79:
 879 032a 80E0      		ldi r24,lo8(__c.1851)
 880 032c 90E0      		ldi r25,hi8(__c.1851)
 881 032e 0E94 0000 		call rprintfProgStr
 161:cmdlinetest.c **** 
 162:cmdlinetest.c **** 	// initialize cmdline system
 163:cmdlinetest.c **** 	cmdlineInit();
 882               		.stabn	68,0,163,.LM80-goCmdline
 883               	.LM80:
 884 0332 0E94 0000 		call cmdlineInit
 164:cmdlinetest.c **** 
 165:cmdlinetest.c **** 	// direct cmdline output to uart (serial port)
 166:cmdlinetest.c **** 	cmdlineSetOutputFunc(uartSendByte);
 885               		.stabn	68,0,166,.LM81-goCmdline
GAS LISTING /var/tmp//ccsuTKi5.s 			page 25


 886               	.LM81:
 887 0336 80E0      		ldi r24,lo8(pm(uartSendByte))
 888 0338 90E0      		ldi r25,hi8(pm(uartSendByte))
 889 033a 0E94 0000 		call cmdlineSetOutputFunc
 167:cmdlinetest.c **** 
 168:cmdlinetest.c **** 	// add commands to the command database
 169:cmdlinetest.c **** 
 170:cmdlinetest.c **** 
 171:cmdlinetest.c **** 	cmdlineAddCommand("l",		setLeftServo);
 890               		.stabn	68,0,171,.LM82-goCmdline
 891               	.LM82:
 892 033e 60E0      		ldi r22,lo8(pm(setLeftServo))
 893 0340 70E0      		ldi r23,hi8(pm(setLeftServo))
 894 0342 80E0      		ldi r24,lo8(.LC0)
 895 0344 90E0      		ldi r25,hi8(.LC0)
 896 0346 0E94 0000 		call cmdlineAddCommand
 172:cmdlinetest.c **** 	cmdlineAddCommand("r",		setRightServo);
 897               		.stabn	68,0,172,.LM83-goCmdline
 898               	.LM83:
 899 034a 60E0      		ldi r22,lo8(pm(setRightServo))
 900 034c 70E0      		ldi r23,hi8(pm(setRightServo))
 901 034e 80E0      		ldi r24,lo8(.LC1)
 902 0350 90E0      		ldi r25,hi8(.LC1)
 903 0352 0E94 0000 		call cmdlineAddCommand
 173:cmdlinetest.c ****     cmdlineAddCommand("t", 		setThrottleServo);
 904               		.stabn	68,0,173,.LM84-goCmdline
 905               	.LM84:
 906 0356 60E0      		ldi r22,lo8(pm(setThrottleServo))
 907 0358 70E0      		ldi r23,hi8(pm(setThrottleServo))
 908 035a 80E0      		ldi r24,lo8(.LC2)
 909 035c 90E0      		ldi r25,hi8(.LC2)
 910 035e 0E94 0000 		call cmdlineAddCommand
 174:cmdlinetest.c **** 	cmdlineAddCommand("p", 		setCamPanServo);
 911               		.stabn	68,0,174,.LM85-goCmdline
 912               	.LM85:
 913 0362 60E0      		ldi r22,lo8(pm(setCamPanServo))
 914 0364 70E0      		ldi r23,hi8(pm(setCamPanServo))
 915 0366 80E0      		ldi r24,lo8(.LC3)
 916 0368 90E0      		ldi r25,hi8(.LC3)
 917 036a 0E94 0000 		call cmdlineAddCommand
 175:cmdlinetest.c **** 	cmdlineAddCommand("i", 		setCamTiltServo);
 918               		.stabn	68,0,175,.LM86-goCmdline
 919               	.LM86:
 920 036e 60E0      		ldi r22,lo8(pm(setCamTiltServo))
 921 0370 70E0      		ldi r23,hi8(pm(setCamTiltServo))
 922 0372 80E0      		ldi r24,lo8(.LC4)
 923 0374 90E0      		ldi r25,hi8(.LC4)
 924 0376 0E94 0000 		call cmdlineAddCommand
 176:cmdlinetest.c **** 	cmdlineAddCommand("f", 		setFeedbackInterval);
 925               		.stabn	68,0,176,.LM87-goCmdline
 926               	.LM87:
 927 037a 60E0      		ldi r22,lo8(pm(setFeedbackInterval))
 928 037c 70E0      		ldi r23,hi8(pm(setFeedbackInterval))
 929 037e 80E0      		ldi r24,lo8(.LC5)
 930 0380 90E0      		ldi r25,hi8(.LC5)
 931 0382 0E94 0000 		call cmdlineAddCommand
 177:cmdlinetest.c **** 	cmdlineAddCommand("w",		setGeckoFreq);
GAS LISTING /var/tmp//ccsuTKi5.s 			page 26


 932               		.stabn	68,0,177,.LM88-goCmdline
 933               	.LM88:
 934 0386 60E0      		ldi r22,lo8(pm(setGeckoFreq))
 935 0388 70E0      		ldi r23,hi8(pm(setGeckoFreq))
 936 038a 80E0      		ldi r24,lo8(.LC6)
 937 038c 90E0      		ldi r25,hi8(.LC6)
 938 038e 0E94 0000 		call cmdlineAddCommand
 178:cmdlinetest.c **** 
 179:cmdlinetest.c **** 	cmdlineAddCommand("2", 		i2cMaster_Send);
 939               		.stabn	68,0,179,.LM89-goCmdline
 940               	.LM89:
 941 0392 60E0      		ldi r22,lo8(pm(i2cMaster_Send))
 942 0394 70E0      		ldi r23,hi8(pm(i2cMaster_Send))
 943 0396 80E0      		ldi r24,lo8(.LC7)
 944 0398 90E0      		ldi r25,hi8(.LC7)
 945 039a 0E94 0000 		call cmdlineAddCommand
 180:cmdlinetest.c **** 	cmdlineAddCommand("3", 		i2cMaster_Receive);
 946               		.stabn	68,0,180,.LM90-goCmdline
 947               	.LM90:
 948 039e 60E0      		ldi r22,lo8(pm(i2cMaster_Receive))
 949 03a0 70E0      		ldi r23,hi8(pm(i2cMaster_Receive))
 950 03a2 80E0      		ldi r24,lo8(.LC8)
 951 03a4 90E0      		ldi r25,hi8(.LC8)
 952 03a6 0E94 0000 		call cmdlineAddCommand
 181:cmdlinetest.c **** 	cmdlineAddCommand("das",	dumpArgsStr);
 953               		.stabn	68,0,181,.LM91-goCmdline
 954               	.LM91:
 955 03aa 60E0      		ldi r22,lo8(pm(dumpArgsStr))
 956 03ac 70E0      		ldi r23,hi8(pm(dumpArgsStr))
 957 03ae 80E0      		ldi r24,lo8(.LC9)
 958 03b0 90E0      		ldi r25,hi8(.LC9)
 959 03b2 0E94 0000 		call cmdlineAddCommand
 182:cmdlinetest.c **** 	cmdlineAddCommand("dai",	dumpArgsInt);
 960               		.stabn	68,0,182,.LM92-goCmdline
 961               	.LM92:
 962 03b6 60E0      		ldi r22,lo8(pm(dumpArgsInt))
 963 03b8 70E0      		ldi r23,hi8(pm(dumpArgsInt))
 964 03ba 80E0      		ldi r24,lo8(.LC10)
 965 03bc 90E0      		ldi r25,hi8(.LC10)
 966 03be 0E94 0000 		call cmdlineAddCommand
 183:cmdlinetest.c **** 	// send a CR to cmdline input to stimulate a prompt
 184:cmdlinetest.c **** 	cmdlineInputFunc('\r');
 967               		.stabn	68,0,184,.LM93-goCmdline
 968               	.LM93:
 969 03c2 8DE0      		ldi r24,lo8(13)
 970 03c4 0E94 0000 		call cmdlineInputFunc
 185:cmdlinetest.c **** 
 186:cmdlinetest.c **** 	// set state to run
 187:cmdlinetest.c **** 	Run = TRUE;
 971               		.stabn	68,0,187,.LM94-goCmdline
 972               	.LM94:
 973 03c8 8FEF      		ldi r24,lo8(-1)
 974 03ca 8093 0000 		sts Run,r24
 975 03ce EE24      		clr r14
 976 03d0 FF24      		clr r15
 977 03d2 8701      		movw r16,r14
 978 03d4 2FC0      		rjmp .L59
GAS LISTING /var/tmp//ccsuTKi5.s 			page 27


 979               	.L46:
 188:cmdlinetest.c **** 
 189:cmdlinetest.c **** 	// main loop
 190:cmdlinetest.c **** 	while(Run)
 191:cmdlinetest.c **** 	{
 192:cmdlinetest.c **** 		// pass characters received on the uart (serial port)
 193:cmdlinetest.c **** 		// into the cmdline processor
 194:cmdlinetest.c **** 		while(uartReceiveByte(&c)) cmdlineInputFunc(c);
 980               		.stabn	68,0,194,.LM95-goCmdline
 981               	.LM95:
 982 03d6 8981      		ldd r24,Y+1
 983 03d8 0E94 0000 		call cmdlineInputFunc
 984               	.L57:
 985 03dc CE01      		movw r24,r28
 986 03de 0196      		adiw r24,1
 987 03e0 0E94 0000 		call uartReceiveByte
 988 03e4 8823      		tst r24
 989 03e6 B9F7      		brne .L46
 195:cmdlinetest.c **** 
 196:cmdlinetest.c **** 		// run the cmdline execution functions
 197:cmdlinetest.c **** 		cmdlineMainLoop();
 990               		.stabn	68,0,197,.LM96-goCmdline
 991               	.LM96:
 992 03e8 0E94 0000 		call cmdlineMainLoop
 198:cmdlinetest.c **** 		timesThrough++;
 993               		.stabn	68,0,198,.LM97-goCmdline
 994               	.LM97:
 995 03ec 0894      		sec
 996 03ee E11C      		adc r14,__zero_reg__
 997 03f0 F11C      		adc r15,__zero_reg__
 998 03f2 011D      		adc r16,__zero_reg__
 999 03f4 111D      		adc r17,__zero_reg__
 199:cmdlinetest.c **** 		if(numTimesThrough != 0)
 1000               		.stabn	68,0,199,.LM98-goCmdline
 1001               	.LM98:
 1002 03f6 8091 0000 		lds r24,numTimesThrough
 1003 03fa 9091 0000 		lds r25,(numTimesThrough)+1
 1004 03fe A091 0000 		lds r26,(numTimesThrough)+2
 1005 0402 B091 0000 		lds r27,(numTimesThrough)+3
 1006 0406 0097      		sbiw r24,0
 1007 0408 A105      		cpc r26,__zero_reg__
 1008 040a B105      		cpc r27,__zero_reg__
 1009 040c 99F0      		breq .L59
 200:cmdlinetest.c **** 		{
 201:cmdlinetest.c **** 			if((timesThrough >= numTimesThrough)) 
 1010               		.stabn	68,0,201,.LM99-goCmdline
 1011               	.LM99:
 1012 040e E816      		cp r14,r24
 1013 0410 F906      		cpc r15,r25
 1014 0412 0A07      		cpc r16,r26
 1015 0414 1B07      		cpc r17,r27
 1016 0416 74F0      		brlt .L59
 202:cmdlinetest.c **** 			{
 203:cmdlinetest.c **** 				rprintf("times through!\r\n");
 1017               		.stabn	68,0,203,.LM100-goCmdline
 1018               	.LM100:
 1019 0418 80E0      		ldi r24,lo8(__c.1856)
GAS LISTING /var/tmp//ccsuTKi5.s 			page 28


 1020 041a 90E0      		ldi r25,hi8(__c.1856)
 1021 041c 9F93      		push r25
 1022 041e 8F93      		push r24
 1023 0420 81E0      		ldi r24,lo8(1)
 1024 0422 8F93      		push r24
 1025 0424 0E94 0000 		call rprintf1RamRom
 1026 0428 EE24      		clr r14
 1027 042a FF24      		clr r15
 1028 042c 8701      		movw r16,r14
 1029 042e 0F90      		pop __tmp_reg__
 1030 0430 0F90      		pop __tmp_reg__
 1031 0432 0F90      	 	pop __tmp_reg__
 1032               	.L59:
 1033               		.stabn	68,0,190,.LM101-goCmdline
 1034               	.LM101:
 1035 0434 8091 0000 		lds r24,Run
 1036 0438 8823      		tst r24
 1037 043a 81F6      		brne .L57
 204:cmdlinetest.c **** 				timesThrough = 0;
 205:cmdlinetest.c **** 			}
 206:cmdlinetest.c **** 		}
 207:cmdlinetest.c **** 	}
 208:cmdlinetest.c **** 
 209:cmdlinetest.c **** 	rprintfCRLF();
 1038               		.stabn	68,0,209,.LM102-goCmdline
 1039               	.LM102:
 1040 043c 0E94 0000 		call rprintfCRLF
 210:cmdlinetest.c **** 	rprintf("Exited program!\r\n");
 1041               		.stabn	68,0,210,.LM103-goCmdline
 1042               	.LM103:
 1043 0440 80E0      		ldi r24,lo8(__c.1861)
 1044 0442 90E0      		ldi r25,hi8(__c.1861)
 1045 0444 9F93      		push r25
 1046 0446 8F93      		push r24
 1047 0448 81E0      		ldi r24,lo8(1)
 1048 044a 8F93      		push r24
 1049 044c 0E94 0000 		call rprintf1RamRom
 1050 0450 0F90      		pop __tmp_reg__
 1051 0452 0F90      		pop __tmp_reg__
 1052 0454 0F90      	 	pop __tmp_reg__
 1053               	/* epilogue: frame size=1 */
 1054 0456 2196      		adiw r28,1
 1055 0458 0FB6      		in __tmp_reg__,__SREG__
 1056 045a F894      		cli
 1057 045c DEBF      		out __SP_H__,r29
 1058 045e 0FBE      		out __SREG__,__tmp_reg__
 1059 0460 CDBF      		out __SP_L__,r28
 1060 0462 DF91      		pop r29
 1061 0464 CF91      		pop r28
 1062 0466 1F91      		pop r17
 1063 0468 0F91      		pop r16
 1064 046a FF90      		pop r15
 1065 046c EF90      		pop r14
 1066 046e 0895      		ret
 1067               	/* epilogue end (size=13) */
 1068               	/* function goCmdline size 183 (156) */
 1069               		.size	goCmdline, .-goCmdline
GAS LISTING /var/tmp//ccsuTKi5.s 			page 29


 1070               		.stabs	"c:(6,1)",128,0,155,1
 1071               		.stabs	"timesThrough:r(0,3)",64,0,156,14
 1072               		.stabn	192,0,0,goCmdline-goCmdline
 1073               		.stabn	224,0,0,.Lscope13-goCmdline
 1074               	.Lscope13:
 1075               		.stabs	"",36,0,0,.Lscope13-goCmdline
 1076               		.stabd	78,0,0
 1077               		.stabs	"exitFunction:F(0,15)",36,0,214,exitFunction
 1078               	.global	exitFunction
 1079               		.type	exitFunction, @function
 1080               	exitFunction:
 1081               		.stabd	46,0,0
 211:cmdlinetest.c **** }
 212:cmdlinetest.c **** 
 213:cmdlinetest.c **** void exitFunction(void)
 214:cmdlinetest.c **** {
 1082               		.stabn	68,0,214,.LM104-exitFunction
 1083               	.LM104:
 1084               	/* prologue: frame size=0 */
 1085               	/* prologue end (size=0) */
 215:cmdlinetest.c **** 	// to exit, we set Run to FALSE
 216:cmdlinetest.c **** 	Run = FALSE;
 1086               		.stabn	68,0,216,.LM105-exitFunction
 1087               	.LM105:
 1088 0470 1092 0000 		sts Run,__zero_reg__
 1089               	/* epilogue: frame size=0 */
 1090 0474 0895      		ret
 1091               	/* epilogue end (size=1) */
 1092               	/* function exitFunction size 3 (2) */
 1093               		.size	exitFunction, .-exitFunction
 1094               	.Lscope14:
 1095               		.stabs	"",36,0,0,.Lscope14-exitFunction
 1096               		.stabd	78,0,0
 1097               		.section	.progmem.data
 1098               		.type	__c.1881, @object
 1099               		.size	__c.1881, 54
 1100               	__c.1881:
 1101 004f 6475 6D70 		.string	"dumpargs3 - dumps command arguments as hex integers\r\n"
 1101      6172 6773 
 1101      3320 2D20 
 1101      6475 6D70 
 1101      7320 636F 
 1102               		.type	__c.1879, @object
 1103               		.size	__c.1879, 58
 1104               	__c.1879:
 1105 0085 6475 6D70 		.string	"dumpargs2 - dumps command arguments as decimal integers\r\n"
 1105      6172 6773 
 1105      3220 2D20 
 1105      6475 6D70 
 1105      7320 636F 
 1106               		.type	__c.1877, @object
 1107               		.size	__c.1877, 49
 1108               	__c.1877:
 1109 00bf 6475 6D70 		.string	"dumpargs1 - dumps command arguments as strings\r\n"
 1109      6172 6773 
 1109      3120 2D20 
 1109      6475 6D70 
GAS LISTING /var/tmp//ccsuTKi5.s 			page 30


 1109      7320 636F 
 1110               		.type	__c.1875, @object
 1111               		.size	__c.1875, 42
 1112               	__c.1875:
 1113 00f0 6865 6C70 		.string	"help      - displays available commands\r\n"
 1113      2020 2020 
 1113      2020 2D20 
 1113      6469 7370 
 1113      6C61 7973 
 1114               		.type	__c.1873, @object
 1115               		.size	__c.1873, 26
 1116               	__c.1873:
 1117 011a 4176 6169 		.string	"Available commands are:\r\n"
 1117      6C61 626C 
 1117      6520 636F 
 1117      6D6D 616E 
 1117      6473 2061 
 1118               		.text
 1119               		.stabs	"helpFunction:F(0,15)",36,0,220,helpFunction
 1120               	.global	helpFunction
 1121               		.type	helpFunction, @function
 1122               	helpFunction:
 1123               		.stabd	46,0,0
 217:cmdlinetest.c **** }
 218:cmdlinetest.c **** 
 219:cmdlinetest.c **** void helpFunction(void)
 220:cmdlinetest.c **** {
 1124               		.stabn	68,0,220,.LM106-helpFunction
 1125               	.LM106:
 1126               	/* prologue: frame size=0 */
 1127 0476 1F93      		push r17
 1128               	/* prologue end (size=1) */
 221:cmdlinetest.c **** 	rprintfCRLF();
 1129               		.stabn	68,0,221,.LM107-helpFunction
 1130               	.LM107:
 1131 0478 0E94 0000 		call rprintfCRLF
 222:cmdlinetest.c **** 
 223:cmdlinetest.c **** 	rprintf("Available commands are:\r\n");
 1132               		.stabn	68,0,223,.LM108-helpFunction
 1133               	.LM108:
 1134 047c 80E0      		ldi r24,lo8(__c.1873)
 1135 047e 90E0      		ldi r25,hi8(__c.1873)
 1136 0480 9F93      		push r25
 1137 0482 8F93      		push r24
 1138 0484 11E0      		ldi r17,lo8(1)
 1139 0486 1F93      		push r17
 1140 0488 0E94 0000 		call rprintf1RamRom
 224:cmdlinetest.c **** 	rprintf("help      - displays available commands\r\n");
 1141               		.stabn	68,0,224,.LM109-helpFunction
 1142               	.LM109:
 1143 048c 80E0      		ldi r24,lo8(__c.1875)
 1144 048e 90E0      		ldi r25,hi8(__c.1875)
 1145 0490 9F93      		push r25
 1146 0492 8F93      		push r24
 1147 0494 1F93      		push r17
 1148 0496 0E94 0000 		call rprintf1RamRom
 225:cmdlinetest.c **** 	rprintf("dumpargs1 - dumps command arguments as strings\r\n");
GAS LISTING /var/tmp//ccsuTKi5.s 			page 31


 1149               		.stabn	68,0,225,.LM110-helpFunction
 1150               	.LM110:
 1151 049a 80E0      		ldi r24,lo8(__c.1877)
 1152 049c 90E0      		ldi r25,hi8(__c.1877)
 1153 049e 9F93      		push r25
 1154 04a0 8F93      		push r24
 1155 04a2 1F93      		push r17
 1156 04a4 0E94 0000 		call rprintf1RamRom
 226:cmdlinetest.c **** 	rprintf("dumpargs2 - dumps command arguments as decimal integers\r\n");
 1157               		.stabn	68,0,226,.LM111-helpFunction
 1158               	.LM111:
 1159 04a8 80E0      		ldi r24,lo8(__c.1879)
 1160 04aa 90E0      		ldi r25,hi8(__c.1879)
 1161 04ac 9F93      		push r25
 1162 04ae 8F93      		push r24
 1163 04b0 1F93      		push r17
 1164 04b2 0E94 0000 		call rprintf1RamRom
 227:cmdlinetest.c **** 	rprintf("dumpargs3 - dumps command arguments as hex integers\r\n");
 1165               		.stabn	68,0,227,.LM112-helpFunction
 1166               	.LM112:
 1167 04b6 80E0      		ldi r24,lo8(__c.1881)
 1168 04b8 90E0      		ldi r25,hi8(__c.1881)
 1169 04ba 9F93      		push r25
 1170 04bc 8F93      		push r24
 1171 04be 1F93      		push r17
 1172 04c0 0E94 0000 		call rprintf1RamRom
 228:cmdlinetest.c **** 
 229:cmdlinetest.c **** 	rprintfCRLF();
 1173               		.stabn	68,0,229,.LM113-helpFunction
 1174               	.LM113:
 1175 04c4 0E94 0000 		call rprintfCRLF
 1176 04c8 8DB7      		in r24,__SP_L__
 1177 04ca 9EB7      		in r25,__SP_H__
 1178 04cc 0F96      		adiw r24,15
 1179 04ce 0FB6      		in __tmp_reg__,__SREG__
 1180 04d0 F894      		cli
 1181 04d2 9EBF      		out __SP_H__,r25
 1182 04d4 0FBE      		out __SREG__,__tmp_reg__
 1183 04d6 8DBF      		out __SP_L__,r24
 1184               	/* epilogue: frame size=0 */
 1185 04d8 1F91      		pop r17
 1186 04da 0895      		ret
 1187               	/* epilogue end (size=2) */
 1188               	/* function helpFunction size 51 (48) */
 1189               		.size	helpFunction, .-helpFunction
 1190               	.Lscope15:
 1191               		.stabs	"",36,0,0,.Lscope15-helpFunction
 1192               		.stabd	78,0,0
 1193               		.section	.progmem.data
 1194               		.type	__c.1894, @object
 1195               		.size	__c.1894, 7
 1196               	__c.1894:
 1197 0134 4172 6733 		.string	"Arg3: "
 1197      3A20 00
 1198               		.type	__c.1892, @object
 1199               		.size	__c.1892, 7
 1200               	__c.1892:
GAS LISTING /var/tmp//ccsuTKi5.s 			page 32


 1201 013b 4172 6732 		.string	"Arg2: "
 1201      3A20 00
 1202               		.type	__c.1890, @object
 1203               		.size	__c.1890, 7
 1204               	__c.1890:
 1205 0142 4172 6731 		.string	"Arg1: "
 1205      3A20 00
 1206               		.type	__c.1888, @object
 1207               		.size	__c.1888, 7
 1208               	__c.1888:
 1209 0149 4172 6730 		.string	"Arg0: "
 1209      3A20 00
 1210               		.type	__c.1886, @object
 1211               		.size	__c.1886, 28
 1212               	__c.1886:
 1213 0150 4475 6D70 		.string	"Dump arguments as strings\r\n"
 1213      2061 7267 
 1213      756D 656E 
 1213      7473 2061 
 1213      7320 7374 
 1214               		.text
 1215               		.stabs	"dumpArgsStr:F(0,15)",36,0,233,dumpArgsStr
 1216               	.global	dumpArgsStr
 1217               		.type	dumpArgsStr, @function
 1218               	dumpArgsStr:
 1219               		.stabd	46,0,0
 230:cmdlinetest.c **** }
 231:cmdlinetest.c **** 
 232:cmdlinetest.c **** void dumpArgsStr(void)
 233:cmdlinetest.c **** {
 1220               		.stabn	68,0,233,.LM114-dumpArgsStr
 1221               	.LM114:
 1222               	/* prologue: frame size=0 */
 1223               	/* prologue end (size=0) */
 234:cmdlinetest.c **** 	rprintfCRLF();
 1224               		.stabn	68,0,234,.LM115-dumpArgsStr
 1225               	.LM115:
 1226 04dc 0E94 0000 		call rprintfCRLF
 235:cmdlinetest.c **** 	rprintf("Dump arguments as strings\r\n");
 1227               		.stabn	68,0,235,.LM116-dumpArgsStr
 1228               	.LM116:
 1229 04e0 80E0      		ldi r24,lo8(__c.1886)
 1230 04e2 90E0      		ldi r25,hi8(__c.1886)
 1231 04e4 9F93      		push r25
 1232 04e6 8F93      		push r24
 1233 04e8 81E0      		ldi r24,lo8(1)
 1234 04ea 8F93      		push r24
 1235 04ec 0E94 0000 		call rprintf1RamRom
 236:cmdlinetest.c **** 
 237:cmdlinetest.c **** 	rprintfProgStrM("Arg0: "); rprintfStr(cmdlineGetArgStr(0)); rprintfCRLF();
 1236               		.stabn	68,0,237,.LM117-dumpArgsStr
 1237               	.LM117:
 1238 04f0 80E0      		ldi r24,lo8(__c.1888)
 1239 04f2 90E0      		ldi r25,hi8(__c.1888)
 1240 04f4 0E94 0000 		call rprintfProgStr
 1241 04f8 80E0      		ldi r24,lo8(0)
 1242 04fa 0E94 0000 		call cmdlineGetArgStr
GAS LISTING /var/tmp//ccsuTKi5.s 			page 33


 1243 04fe 0E94 0000 		call rprintfStr
 1244 0502 0E94 0000 		call rprintfCRLF
 238:cmdlinetest.c **** 	rprintfProgStrM("Arg1: "); rprintfStr(cmdlineGetArgStr(1)); rprintfCRLF();
 1245               		.stabn	68,0,238,.LM118-dumpArgsStr
 1246               	.LM118:
 1247 0506 80E0      		ldi r24,lo8(__c.1890)
 1248 0508 90E0      		ldi r25,hi8(__c.1890)
 1249 050a 0E94 0000 		call rprintfProgStr
 1250 050e 81E0      		ldi r24,lo8(1)
 1251 0510 0E94 0000 		call cmdlineGetArgStr
 1252 0514 0E94 0000 		call rprintfStr
 1253 0518 0E94 0000 		call rprintfCRLF
 239:cmdlinetest.c **** 	rprintfProgStrM("Arg2: "); rprintfStr(cmdlineGetArgStr(2)); rprintfCRLF();
 1254               		.stabn	68,0,239,.LM119-dumpArgsStr
 1255               	.LM119:
 1256 051c 80E0      		ldi r24,lo8(__c.1892)
 1257 051e 90E0      		ldi r25,hi8(__c.1892)
 1258 0520 0E94 0000 		call rprintfProgStr
 1259 0524 82E0      		ldi r24,lo8(2)
 1260 0526 0E94 0000 		call cmdlineGetArgStr
 1261 052a 0E94 0000 		call rprintfStr
 1262 052e 0E94 0000 		call rprintfCRLF
 240:cmdlinetest.c **** 	rprintfProgStrM("Arg3: "); rprintfStr(cmdlineGetArgStr(3)); rprintfCRLF();
 1263               		.stabn	68,0,240,.LM120-dumpArgsStr
 1264               	.LM120:
 1265 0532 80E0      		ldi r24,lo8(__c.1894)
 1266 0534 90E0      		ldi r25,hi8(__c.1894)
 1267 0536 0E94 0000 		call rprintfProgStr
 1268 053a 83E0      		ldi r24,lo8(3)
 1269 053c 0E94 0000 		call cmdlineGetArgStr
 1270 0540 0E94 0000 		call rprintfStr
 1271 0544 0E94 0000 		call rprintfCRLF
 241:cmdlinetest.c **** 	rprintfCRLF();
 1272               		.stabn	68,0,241,.LM121-dumpArgsStr
 1273               	.LM121:
 1274 0548 0E94 0000 		call rprintfCRLF
 1275 054c 0F90      		pop __tmp_reg__
 1276 054e 0F90      		pop __tmp_reg__
 1277 0550 0F90      	 	pop __tmp_reg__
 1278               	/* epilogue: frame size=0 */
 1279 0552 0895      		ret
 1280               	/* epilogue end (size=1) */
 1281               	/* function dumpArgsStr size 60 (59) */
 1282               		.size	dumpArgsStr, .-dumpArgsStr
 1283               	.Lscope16:
 1284               		.stabs	"",36,0,0,.Lscope16-dumpArgsStr
 1285               		.stabd	78,0,0
 1286               		.section	.progmem.data
 1287               		.type	__c.1913, @object
 1288               		.size	__c.1913, 14
 1289               	__c.1913:
 1290 016c 4172 6733 		.string	"Arg3 as int: "
 1290      2061 7320 
 1290      696E 743A 
 1290      2000 
 1291               		.type	__c.1911, @object
 1292               		.size	__c.1911, 14
GAS LISTING /var/tmp//ccsuTKi5.s 			page 34


 1293               	__c.1911:
 1294 017a 4172 6732 		.string	"Arg2 as int: "
 1294      2061 7320 
 1294      696E 743A 
 1294      2000 
 1295               		.type	__c.1909, @object
 1296               		.size	__c.1909, 14
 1297               	__c.1909:
 1298 0188 4172 6731 		.string	"Arg1 as int: "
 1298      2061 7320 
 1298      696E 743A 
 1298      2000 
 1299               		.type	__c.1907, @object
 1300               		.size	__c.1907, 29
 1301               	__c.1907:
 1302 0196 4475 6D70 		.string	"Dump arguments as integers\r\n"
 1302      2061 7267 
 1302      756D 656E 
 1302      7473 2061 
 1302      7320 696E 
 1303               		.text
 1304               		.stabs	"dumpArgsInt:F(0,15)",36,0,245,dumpArgsInt
 1305               	.global	dumpArgsInt
 1306               		.type	dumpArgsInt, @function
 1307               	dumpArgsInt:
 1308               		.stabd	46,0,0
 242:cmdlinetest.c **** }
 243:cmdlinetest.c **** 
 244:cmdlinetest.c **** void dumpArgsInt(void)
 245:cmdlinetest.c **** {
 1309               		.stabn	68,0,245,.LM122-dumpArgsInt
 1310               	.LM122:
 1311               	/* prologue: frame size=0 */
 1312 0554 DF92      		push r13
 1313 0556 EF92      		push r14
 1314 0558 FF92      		push r15
 1315 055a 0F93      		push r16
 1316 055c 1F93      		push r17
 1317               	/* prologue end (size=5) */
 246:cmdlinetest.c **** 	rprintfCRLF();
 1318               		.stabn	68,0,246,.LM123-dumpArgsInt
 1319               	.LM123:
 1320 055e 0E94 0000 		call rprintfCRLF
 247:cmdlinetest.c **** 	rprintf("Dump arguments as integers\r\n");
 1321               		.stabn	68,0,247,.LM124-dumpArgsInt
 1322               	.LM124:
 1323 0562 80E0      		ldi r24,lo8(__c.1907)
 1324 0564 90E0      		ldi r25,hi8(__c.1907)
 1325 0566 9F93      		push r25
 1326 0568 8F93      		push r24
 1327 056a E1E0      		ldi r30,lo8(1)
 1328 056c DE2E      		mov r13,r30
 1329 056e DF92      		push r13
 1330 0570 0E94 0000 		call rprintf1RamRom
 248:cmdlinetest.c **** 
 249:cmdlinetest.c **** 	// printf %d will work but only if your numbers are less than 16-bit values
 250:cmdlinetest.c **** 	//rprintf("Arg1 as int: %d\r\n", cmdlineGetArgInt(1));
GAS LISTING /var/tmp//ccsuTKi5.s 			page 35


 251:cmdlinetest.c **** 	//rprintf("Arg2 as int: %d\r\n", cmdlineGetArgInt(2));
 252:cmdlinetest.c **** 	//rprintf("Arg3 as int: %d\r\n", cmdlineGetArgInt(3));
 253:cmdlinetest.c **** 
 254:cmdlinetest.c **** 	// printfNum is good for longs too
 255:cmdlinetest.c **** 	rprintf("Arg1 as int: "); rprintfNum(10, 10, TRUE, ' ', cmdlineGetArgInt(1)); rprintfCRLF();
 1331               		.stabn	68,0,255,.LM125-dumpArgsInt
 1332               	.LM125:
 1333 0574 80E0      		ldi r24,lo8(__c.1909)
 1334 0576 90E0      		ldi r25,hi8(__c.1909)
 1335 0578 9F93      		push r25
 1336 057a 8F93      		push r24
 1337 057c DF92      		push r13
 1338 057e 0E94 0000 		call rprintf1RamRom
 1339 0582 81E0      		ldi r24,lo8(1)
 1340 0584 0E94 0000 		call cmdlineGetArgInt
 1341 0588 7B01      		movw r14,r22
 1342 058a 8C01      		movw r16,r24
 1343 058c 20E2      		ldi r18,lo8(32)
 1344 058e 4FEF      		ldi r20,lo8(-1)
 1345 0590 6AE0      		ldi r22,lo8(10)
 1346 0592 8AE0      		ldi r24,lo8(10)
 1347 0594 0E94 0000 		call rprintfNum
 1348 0598 0E94 0000 		call rprintfCRLF
 256:cmdlinetest.c **** 	rprintf("Arg2 as int: "); rprintfNum(10, 10, TRUE, ' ', cmdlineGetArgInt(2)); rprintfCRLF();
 1349               		.stabn	68,0,256,.LM126-dumpArgsInt
 1350               	.LM126:
 1351 059c 80E0      		ldi r24,lo8(__c.1911)
 1352 059e 90E0      		ldi r25,hi8(__c.1911)
 1353 05a0 9F93      		push r25
 1354 05a2 8F93      		push r24
 1355 05a4 DF92      		push r13
 1356 05a6 0E94 0000 		call rprintf1RamRom
 1357 05aa 82E0      		ldi r24,lo8(2)
 1358 05ac 0E94 0000 		call cmdlineGetArgInt
 1359 05b0 7B01      		movw r14,r22
 1360 05b2 8C01      		movw r16,r24
 1361 05b4 20E2      		ldi r18,lo8(32)
 1362 05b6 4FEF      		ldi r20,lo8(-1)
 1363 05b8 6AE0      		ldi r22,lo8(10)
 1364 05ba 8AE0      		ldi r24,lo8(10)
 1365 05bc 0E94 0000 		call rprintfNum
 1366 05c0 0E94 0000 		call rprintfCRLF
 257:cmdlinetest.c **** 	rprintf("Arg3 as int: "); rprintfNum(10, 10, TRUE, ' ', cmdlineGetArgInt(3)); rprintfCRLF();
 1367               		.stabn	68,0,257,.LM127-dumpArgsInt
 1368               	.LM127:
 1369 05c4 80E0      		ldi r24,lo8(__c.1913)
 1370 05c6 90E0      		ldi r25,hi8(__c.1913)
 1371 05c8 9F93      		push r25
 1372 05ca 8F93      		push r24
 1373 05cc DF92      		push r13
 1374 05ce 0E94 0000 		call rprintf1RamRom
 1375 05d2 83E0      		ldi r24,lo8(3)
 1376 05d4 0E94 0000 		call cmdlineGetArgInt
 1377 05d8 7B01      		movw r14,r22
 1378 05da 8C01      		movw r16,r24
 1379 05dc 20E2      		ldi r18,lo8(32)
 1380 05de 4FEF      		ldi r20,lo8(-1)
GAS LISTING /var/tmp//ccsuTKi5.s 			page 36


 1381 05e0 6AE0      		ldi r22,lo8(10)
 1382 05e2 8AE0      		ldi r24,lo8(10)
 1383 05e4 0E94 0000 		call rprintfNum
 1384 05e8 0E94 0000 		call rprintfCRLF
 258:cmdlinetest.c **** 	rprintfCRLF();
 1385               		.stabn	68,0,258,.LM128-dumpArgsInt
 1386               	.LM128:
 1387 05ec 0E94 0000 		call rprintfCRLF
 1388 05f0 8DB7      		in r24,__SP_L__
 1389 05f2 9EB7      		in r25,__SP_H__
 1390 05f4 0C96      		adiw r24,12
 1391 05f6 0FB6      		in __tmp_reg__,__SREG__
 1392 05f8 F894      		cli
 1393 05fa 9EBF      		out __SP_H__,r25
 1394 05fc 0FBE      		out __SREG__,__tmp_reg__
 1395 05fe 8DBF      		out __SP_L__,r24
 1396               	/* epilogue: frame size=0 */
 1397 0600 1F91      		pop r17
 1398 0602 0F91      		pop r16
 1399 0604 FF90      		pop r15
 1400 0606 EF90      		pop r14
 1401 0608 DF90      		pop r13
 1402 060a 0895      		ret
 1403               	/* epilogue end (size=6) */
 1404               	/* function dumpArgsInt size 92 (81) */
 1405               		.size	dumpArgsInt, .-dumpArgsInt
 1406               	.Lscope17:
 1407               		.stabs	"",36,0,0,.Lscope17-dumpArgsInt
 1408               		.stabd	78,0,0
 1409               		.section	.progmem.data
 1410               		.type	__c.1927, @object
 1411               		.size	__c.1927, 14
 1412               	__c.1927:
 1413 01b3 4172 6733 		.string	"Arg3 as hex: "
 1413      2061 7320 
 1413      6865 783A 
 1413      2000 
 1414               		.type	__c.1925, @object
 1415               		.size	__c.1925, 14
 1416               	__c.1925:
 1417 01c1 4172 6732 		.string	"Arg2 as hex: "
 1417      2061 7320 
 1417      6865 783A 
 1417      2000 
 1418               		.type	__c.1923, @object
 1419               		.size	__c.1923, 14
 1420               	__c.1923:
 1421 01cf 4172 6731 		.string	"Arg1 as hex: "
 1421      2061 7320 
 1421      6865 783A 
 1421      2000 
 1422               		.type	__c.1921, @object
 1423               		.size	__c.1921, 33
 1424               	__c.1921:
 1425 01dd 4475 6D70 		.string	"Dump arguments as hex integers\r\n"
 1425      2061 7267 
 1425      756D 656E 
GAS LISTING /var/tmp//ccsuTKi5.s 			page 37


 1425      7473 2061 
 1425      7320 6865 
 1426               		.text
 1427               		.stabs	"dumpArgsHex:F(0,15)",36,0,262,dumpArgsHex
 1428               	.global	dumpArgsHex
 1429               		.type	dumpArgsHex, @function
 1430               	dumpArgsHex:
 1431               		.stabd	46,0,0
 259:cmdlinetest.c **** }
 260:cmdlinetest.c **** 
 261:cmdlinetest.c **** void dumpArgsHex(void)
 262:cmdlinetest.c **** {
 1432               		.stabn	68,0,262,.LM129-dumpArgsHex
 1433               	.LM129:
 1434               	/* prologue: frame size=0 */
 1435 060c DF92      		push r13
 1436 060e EF92      		push r14
 1437 0610 FF92      		push r15
 1438 0612 0F93      		push r16
 1439 0614 1F93      		push r17
 1440               	/* prologue end (size=5) */
 263:cmdlinetest.c **** 	rprintfCRLF();
 1441               		.stabn	68,0,263,.LM130-dumpArgsHex
 1442               	.LM130:
 1443 0616 0E94 0000 		call rprintfCRLF
 264:cmdlinetest.c **** 	rprintf("Dump arguments as hex integers\r\n");
 1444               		.stabn	68,0,264,.LM131-dumpArgsHex
 1445               	.LM131:
 1446 061a 80E0      		ldi r24,lo8(__c.1921)
 1447 061c 90E0      		ldi r25,hi8(__c.1921)
 1448 061e 9F93      		push r25
 1449 0620 8F93      		push r24
 1450 0622 F1E0      		ldi r31,lo8(1)
 1451 0624 DF2E      		mov r13,r31
 1452 0626 DF92      		push r13
 1453 0628 0E94 0000 		call rprintf1RamRom
 265:cmdlinetest.c **** 
 266:cmdlinetest.c **** 	rprintf("Arg1 as hex: "); rprintfNum(16, 8, FALSE, ' ', cmdlineGetArgHex(1)); rprintfCRLF();
 1454               		.stabn	68,0,266,.LM132-dumpArgsHex
 1455               	.LM132:
 1456 062c 80E0      		ldi r24,lo8(__c.1923)
 1457 062e 90E0      		ldi r25,hi8(__c.1923)
 1458 0630 9F93      		push r25
 1459 0632 8F93      		push r24
 1460 0634 DF92      		push r13
 1461 0636 0E94 0000 		call rprintf1RamRom
 1462 063a 81E0      		ldi r24,lo8(1)
 1463 063c 0E94 0000 		call cmdlineGetArgHex
 1464 0640 7B01      		movw r14,r22
 1465 0642 8C01      		movw r16,r24
 1466 0644 20E2      		ldi r18,lo8(32)
 1467 0646 40E0      		ldi r20,lo8(0)
 1468 0648 68E0      		ldi r22,lo8(8)
 1469 064a 80E1      		ldi r24,lo8(16)
 1470 064c 0E94 0000 		call rprintfNum
 1471 0650 0E94 0000 		call rprintfCRLF
 267:cmdlinetest.c **** 	rprintf("Arg2 as hex: "); rprintfNum(16, 8, FALSE, ' ', cmdlineGetArgHex(2)); rprintfCRLF();
GAS LISTING /var/tmp//ccsuTKi5.s 			page 38


 1472               		.stabn	68,0,267,.LM133-dumpArgsHex
 1473               	.LM133:
 1474 0654 80E0      		ldi r24,lo8(__c.1925)
 1475 0656 90E0      		ldi r25,hi8(__c.1925)
 1476 0658 9F93      		push r25
 1477 065a 8F93      		push r24
 1478 065c DF92      		push r13
 1479 065e 0E94 0000 		call rprintf1RamRom
 1480 0662 82E0      		ldi r24,lo8(2)
 1481 0664 0E94 0000 		call cmdlineGetArgHex
 1482 0668 7B01      		movw r14,r22
 1483 066a 8C01      		movw r16,r24
 1484 066c 20E2      		ldi r18,lo8(32)
 1485 066e 40E0      		ldi r20,lo8(0)
 1486 0670 68E0      		ldi r22,lo8(8)
 1487 0672 80E1      		ldi r24,lo8(16)
 1488 0674 0E94 0000 		call rprintfNum
 1489 0678 0E94 0000 		call rprintfCRLF
 268:cmdlinetest.c **** 	rprintf("Arg3 as hex: "); rprintfNum(16, 8, FALSE, ' ', cmdlineGetArgHex(3)); rprintfCRLF();
 1490               		.stabn	68,0,268,.LM134-dumpArgsHex
 1491               	.LM134:
 1492 067c 80E0      		ldi r24,lo8(__c.1927)
 1493 067e 90E0      		ldi r25,hi8(__c.1927)
 1494 0680 9F93      		push r25
 1495 0682 8F93      		push r24
 1496 0684 DF92      		push r13
 1497 0686 0E94 0000 		call rprintf1RamRom
 1498 068a 83E0      		ldi r24,lo8(3)
 1499 068c 0E94 0000 		call cmdlineGetArgHex
 1500 0690 7B01      		movw r14,r22
 1501 0692 8C01      		movw r16,r24
 1502 0694 20E2      		ldi r18,lo8(32)
 1503 0696 40E0      		ldi r20,lo8(0)
 1504 0698 68E0      		ldi r22,lo8(8)
 1505 069a 80E1      		ldi r24,lo8(16)
 1506 069c 0E94 0000 		call rprintfNum
 1507 06a0 0E94 0000 		call rprintfCRLF
 269:cmdlinetest.c **** 	rprintfCRLF();
 1508               		.stabn	68,0,269,.LM135-dumpArgsHex
 1509               	.LM135:
 1510 06a4 0E94 0000 		call rprintfCRLF
 1511 06a8 8DB7      		in r24,__SP_L__
 1512 06aa 9EB7      		in r25,__SP_H__
 1513 06ac 0C96      		adiw r24,12
 1514 06ae 0FB6      		in __tmp_reg__,__SREG__
 1515 06b0 F894      		cli
 1516 06b2 9EBF      		out __SP_H__,r25
 1517 06b4 0FBE      		out __SREG__,__tmp_reg__
 1518 06b6 8DBF      		out __SP_L__,r24
 1519               	/* epilogue: frame size=0 */
 1520 06b8 1F91      		pop r17
 1521 06ba 0F91      		pop r16
 1522 06bc FF90      		pop r15
 1523 06be EF90      		pop r14
 1524 06c0 DF90      		pop r13
 1525 06c2 0895      		ret
 1526               	/* epilogue end (size=6) */
GAS LISTING /var/tmp//ccsuTKi5.s 			page 39


 1527               	/* function dumpArgsHex size 92 (81) */
 1528               		.size	dumpArgsHex, .-dumpArgsHex
 1529               	.Lscope18:
 1530               		.stabs	"",36,0,0,.Lscope18-dumpArgsHex
 1531               		.stabd	78,0,0
 1532               		.stabs	"i2cSetup:F(0,15)",36,0,273,i2cSetup
 1533               	.global	i2cSetup
 1534               		.type	i2cSetup, @function
 1535               	i2cSetup:
 1536               		.stabd	46,0,0
 270:cmdlinetest.c **** }
 271:cmdlinetest.c **** 
 272:cmdlinetest.c **** void i2cSetup(void)
 273:cmdlinetest.c **** {
 1537               		.stabn	68,0,273,.LM136-i2cSetup
 1538               	.LM136:
 1539               	/* prologue: frame size=0 */
 1540               	/* prologue end (size=0) */
 274:cmdlinetest.c **** 	// initialize i2c function library
 275:cmdlinetest.c **** 	i2cInit();
 1541               		.stabn	68,0,275,.LM137-i2cSetup
 1542               	.LM137:
 1543 06c4 0E94 0000 		call i2cInit
 276:cmdlinetest.c **** 	// set local device address and allow response to general call
 277:cmdlinetest.c **** 	i2cSetLocalDeviceAddr(LOCAL_ADDR, TRUE);
 1544               		.stabn	68,0,277,.LM138-i2cSetup
 1545               	.LM138:
 1546 06c8 6FEF      		ldi r22,lo8(-1)
 1547 06ca 80EA      		ldi r24,lo8(-96)
 1548 06cc 0E94 0000 		call i2cSetLocalDeviceAddr
 278:cmdlinetest.c **** 	// set the Slave Receive Handler function
 279:cmdlinetest.c **** 	// (this function will run whenever a master somewhere else on the bus
 280:cmdlinetest.c **** 	//  writes data to us as a slave)
 281:cmdlinetest.c **** 	i2cSetSlaveReceiveHandler( i2cSlaveReceiveService );
 1549               		.stabn	68,0,281,.LM139-i2cSetup
 1550               	.LM139:
 1551 06d0 80E0      		ldi r24,lo8(pm(i2cSlaveReceiveService))
 1552 06d2 90E0      		ldi r25,hi8(pm(i2cSlaveReceiveService))
 1553 06d4 0E94 0000 		call i2cSetSlaveReceiveHandler
 282:cmdlinetest.c **** 	// set the Slave Transmit Handler function
 283:cmdlinetest.c **** 	// (this function will run whenever a master somewhere else on the bus
 284:cmdlinetest.c **** 	//  attempts to read data from us as a slave)
 285:cmdlinetest.c **** 	i2cSetSlaveTransmitHandler( i2cSlaveTransmitService );
 1554               		.stabn	68,0,285,.LM140-i2cSetup
 1555               	.LM140:
 1556 06d8 80E0      		ldi r24,lo8(pm(i2cSlaveTransmitService))
 1557 06da 90E0      		ldi r25,hi8(pm(i2cSlaveTransmitService))
 1558 06dc 0E94 0000 		call i2cSetSlaveTransmitHandler
 1559               	/* epilogue: frame size=0 */
 1560 06e0 0895      		ret
 1561               	/* epilogue end (size=1) */
 1562               	/* function i2cSetup size 15 (14) */
 1563               		.size	i2cSetup, .-i2cSetup
 1564               	.Lscope19:
 1565               		.stabs	"",36,0,0,.Lscope19-i2cSetup
 1566               		.stabd	78,0,0
 1567               		.section	.progmem.data
GAS LISTING /var/tmp//ccsuTKi5.s 			page 40


 1568               		.type	__c.1837, @object
 1569               		.size	__c.1837, 55
 1570               	__c.1837:
 1571 01fe 2A2A 2A2A 		.string	"**********************powerup*************************"
 1571      2A2A 2A2A 
 1571      2A2A 2A2A 
 1571      2A2A 2A2A 
 1571      2A2A 2A2A 
 1572               		.text
 1573               		.stabs	"main:F(0,1)",36,0,100,main
 1574               	.global	main
 1575               		.type	main, @function
 1576               	main:
 1577               		.stabd	46,0,0
 1578               		.stabn	68,0,100,.LM141-main
 1579               	.LM141:
 1580               	/* prologue: frame size=0 */
 1581 06e2 C0E0      		ldi r28,lo8(__stack - 0)
 1582 06e4 D0E0      		ldi r29,hi8(__stack - 0)
 1583 06e6 DEBF      		out __SP_H__,r29
 1584 06e8 CDBF      		out __SP_L__,r28
 1585               	/* prologue end (size=4) */
 1586               		.stabn	68,0,103,.LM142-main
 1587               	.LM142:
 1588 06ea 0E94 0000 		call uartInit
 1589               		.stabn	68,0,104,.LM143-main
 1590               	.LM143:
 1591 06ee 60E0      		ldi r22,lo8(57600)
 1592 06f0 71EE      		ldi r23,hi8(57600)
 1593 06f2 80E0      		ldi r24,hlo8(57600)
 1594 06f4 90E0      		ldi r25,hhi8(57600)
 1595 06f6 0E94 0000 		call uartSetBaudRate
 1596               		.stabn	68,0,106,.LM144-main
 1597               	.LM144:
 1598 06fa 80E0      		ldi r24,lo8(pm(uartSendByte))
 1599 06fc 90E0      		ldi r25,hi8(pm(uartSendByte))
 1600 06fe 0E94 0000 		call rprintfInit
 1601               		.stabn	68,0,108,.LM145-main
 1602               	.LM145:
 1603 0702 0E94 0000 		call a2dInit
 1604               		.stabn	68,0,110,.LM146-main
 1605               	.LM146:
 1606 0706 0E94 0000 		call timerInit
 1607               		.stabn	68,0,112,.LM147-main
 1608               	.LM147:
 1609 070a 0E94 0000 		call vt100Init
 1610               		.stabn	68,0,114,.LM148-main
 1611               	.LM148:
 1612 070e 8C9A      		sbi 49-0x20,4
 1613               		.stabn	68,0,115,.LM149-main
 1614               	.LM149:
 1615 0710 8D9A      		sbi 49-0x20,5
 1616               		.stabn	68,0,116,.LM150-main
 1617               	.LM150:
 1618 0712 0E94 0000 		call pulseInit
 1619               		.stabn	68,0,117,.LM151-main
 1620               	.LM151:
GAS LISTING /var/tmp//ccsuTKi5.s 			page 41


 1621 0716 8FEA      		ldi r24,lo8(175)
 1622 0718 90E0      		ldi r25,hi8(175)
 1623 071a 0E94 0000 		call pulseT1BSetFreq
 1624               		.stabn	68,0,121,.LM152-main
 1625               	.LM152:
 1626 071e 84E6      		ldi r24,lo8(100)
 1627 0720 90E0      		ldi r25,hi8(100)
 1628 0722 0E94 0000 		call timerPause
 1629               		.stabn	68,0,124,.LM153-main
 1630               	.LM153:
 1631 0726 0E94 0000 		call i2cSetup
 1632               		.stabn	68,0,128,.LM154-main
 1633               	.LM154:
 1634 072a 0E94 0000 		call servoInit
 1635               		.stabn	68,0,131,.LM155-main
 1636               	.LM155:
 1637 072e 42E0      		ldi r20,lo8(2)
 1638 0730 65E1      		ldi r22,lo8(21)
 1639 0732 80E0      		ldi r24,lo8(0)
 1640 0734 0E94 0000 		call servoSetChannelIO
 1641               		.stabn	68,0,132,.LM156-main
 1642               	.LM156:
 1643 0738 43E0      		ldi r20,lo8(3)
 1644 073a 65E1      		ldi r22,lo8(21)
 1645 073c 81E0      		ldi r24,lo8(1)
 1646 073e 0E94 0000 		call servoSetChannelIO
 1647               		.stabn	68,0,133,.LM157-main
 1648               	.LM157:
 1649 0742 44E0      		ldi r20,lo8(4)
 1650 0744 65E1      		ldi r22,lo8(21)
 1651 0746 82E0      		ldi r24,lo8(2)
 1652 0748 0E94 0000 		call servoSetChannelIO
 1653               		.stabn	68,0,134,.LM158-main
 1654               	.LM158:
 1655 074c 45E0      		ldi r20,lo8(5)
 1656 074e 65E1      		ldi r22,lo8(21)
 1657 0750 83E0      		ldi r24,lo8(3)
 1658 0752 0E94 0000 		call servoSetChannelIO
 1659               		.stabn	68,0,135,.LM159-main
 1660               	.LM159:
 1661 0756 46E0      		ldi r20,lo8(6)
 1662 0758 65E1      		ldi r22,lo8(21)
 1663 075a 84E0      		ldi r24,lo8(4)
 1664 075c 0E94 0000 		call servoSetChannelIO
 1665               		.stabn	68,0,136,.LM160-main
 1666               	.LM160:
 1667 0760 47E0      		ldi r20,lo8(7)
 1668 0762 65E1      		ldi r22,lo8(21)
 1669 0764 85E0      		ldi r24,lo8(5)
 1670 0766 0E94 0000 		call servoSetChannelIO
 1671               		.stabn	68,0,138,.LM161-main
 1672               	.LM161:
 1673 076a 8CEF      		ldi r24,lo8(-4)
 1674 076c 84BB      		out 52-0x20,r24
 1675               		.stabn	68,0,144,.LM162-main
 1676               	.LM162:
 1677 076e 80E0      		ldi r24,lo8(__c.1837)
GAS LISTING /var/tmp//ccsuTKi5.s 			page 42


 1678 0770 90E0      		ldi r25,hi8(__c.1837)
 1679 0772 9F93      		push r25
 1680 0774 8F93      		push r24
 1681 0776 81E0      		ldi r24,lo8(1)
 1682 0778 8F93      		push r24
 1683 077a 0E94 0000 		call rprintf1RamRom
 1684               		.stabn	68,0,148,.LM163-main
 1685               	.LM163:
 1686 077e 0E94 0000 		call goCmdline
 1687 0782 0F90      		pop __tmp_reg__
 1688 0784 0F90      		pop __tmp_reg__
 1689 0786 0F90      	 	pop __tmp_reg__
 1690               		.stabn	68,0,151,.LM164-main
 1691               	.LM164:
 1692 0788 80E0      		ldi r24,lo8(0)
 1693 078a 90E0      		ldi r25,hi8(0)
 1694               	/* epilogue: frame size=0 */
 1695 078c 0C94 0000 		jmp exit
 1696               	/* epilogue end (size=2) */
 1697               	/* function main size 87 (81) */
 1698               		.size	main, .-main
 1699               	.Lscope20:
 1700               		.stabs	"",36,0,0,.Lscope20-main
 1701               		.stabd	78,0,0
 1702               		.stabs	"i2cSlaveReceiveService:F(0,15)",36,0,289,i2cSlaveReceiveService
 1703               		.stabs	"receiveDataLength:P(6,1)",64,0,288,25
 1704               		.stabs	"receiveData:P(0,16)=*(6,1)",64,0,288,26
 1705               	.global	i2cSlaveReceiveService
 1706               		.type	i2cSlaveReceiveService, @function
 1707               	i2cSlaveReceiveService:
 1708               		.stabd	46,0,0
 286:cmdlinetest.c **** }
 287:cmdlinetest.c **** // slave operations
 288:cmdlinetest.c **** void i2cSlaveReceiveService(u08 receiveDataLength, u08* receiveData)
 289:cmdlinetest.c **** {
 1709               		.stabn	68,0,289,.LM165-i2cSlaveReceiveService
 1710               	.LM165:
 1711               	/* prologue: frame size=0 */
 1712               	/* prologue end (size=0) */
 1713 0790 982F      		mov r25,r24
 1714 0792 DB01      		movw r26,r22
 1715 0794 20E0      		ldi r18,lo8(0)
 1716 0796 30E0      		ldi r19,hi8(0)
 1717 0798 07C0      		rjmp .L75
 1718               	.L76:
 290:cmdlinetest.c **** 	u08 i;
 291:cmdlinetest.c **** 
 292:cmdlinetest.c **** 	// this function will run when a master somewhere else on the bus
 293:cmdlinetest.c **** 	// addresses us and wishes to write data to us
 294:cmdlinetest.c **** 
 295:cmdlinetest.c **** 	// copy the received data to a local buffer
 296:cmdlinetest.c **** 	for(i=0; i<receiveDataLength; i++)
 297:cmdlinetest.c **** 	{
 298:cmdlinetest.c **** 		slaveBuffer[i] = *receiveData++;
 1719               		.stabn	68,0,298,.LM166-i2cSlaveReceiveService
 1720               	.LM166:
 1721 079a FF27      		clr r31
GAS LISTING /var/tmp//ccsuTKi5.s 			page 43


 1722 079c E050      		subi r30,lo8(-(slaveBuffer))
 1723 079e F040      		sbci r31,hi8(-(slaveBuffer))
 1724 07a0 8D91      		ld r24,X+
 1725 07a2 8083      		st Z,r24
 1726 07a4 2F5F      		subi r18,lo8(-(1))
 1727 07a6 3F4F      		sbci r19,hi8(-(1))
 1728               	.L75:
 1729 07a8 E22F      		mov r30,r18
 1730               		.stabn	68,0,296,.LM167-i2cSlaveReceiveService
 1731               	.LM167:
 1732 07aa 2917      		cp r18,r25
 1733 07ac B0F3      		brlo .L76
 299:cmdlinetest.c **** 	}
 300:cmdlinetest.c **** 	slaveBufferLength = receiveDataLength;
 1734               		.stabn	68,0,300,.LM168-i2cSlaveReceiveService
 1735               	.LM168:
 1736 07ae 9093 0000 		sts slaveBufferLength,r25
 1737               	/* epilogue: frame size=0 */
 1738 07b2 0895      		ret
 1739               	/* epilogue end (size=1) */
 1740               	/* function i2cSlaveReceiveService size 18 (17) */
 1741               		.size	i2cSlaveReceiveService, .-i2cSlaveReceiveService
 1742               		.stabs	"i:r(6,1)",64,0,290,30
 1743               		.stabn	192,0,0,i2cSlaveReceiveService-i2cSlaveReceiveService
 1744               		.stabn	224,0,0,.Lscope21-i2cSlaveReceiveService
 1745               	.Lscope21:
 1746               		.stabs	"",36,0,0,.Lscope21-i2cSlaveReceiveService
 1747               		.stabd	78,0,0
 1748               		.stabs	"i2cSlaveTransmitService:F(6,1)",36,0,309,i2cSlaveTransmitService
 1749               		.stabs	"transmitDataLengthMax:P(6,1)",64,0,308,24
 1750               		.stabs	"transmitData:P(0,16)",64,0,308,22
 1751               	.global	i2cSlaveTransmitService
 1752               		.type	i2cSlaveTransmitService, @function
 1753               	i2cSlaveTransmitService:
 1754               		.stabd	46,0,0
 301:cmdlinetest.c **** 	// print the buffer
 302:cmdlinetest.c **** //	for(i=0;i<slaveBufferLength;i++)
 303:cmdlinetest.c **** //	{
 304:cmdlinetest.c **** //		putchar(slaveBuffer[i]);
 305:cmdlinetest.c **** //	}
 306:cmdlinetest.c **** }
 307:cmdlinetest.c **** 
 308:cmdlinetest.c **** u08 i2cSlaveTransmitService(u08 transmitDataLengthMax, u08* transmitData)
 309:cmdlinetest.c **** {
 1755               		.stabn	68,0,309,.LM169-i2cSlaveTransmitService
 1756               	.LM169:
 1757               	/* prologue: frame size=0 */
 1758               	/* prologue end (size=0) */
 310:cmdlinetest.c **** 	u08 i;
 311:cmdlinetest.c **** 
 312:cmdlinetest.c **** 	// this function will run when a master somewhere else on the bus
 313:cmdlinetest.c **** 	// addresses us and wishes to read data from us
 314:cmdlinetest.c **** 
 315:cmdlinetest.c **** 	cbi(PORTB, PB7);
 1759               		.stabn	68,0,315,.LM170-i2cSlaveTransmitService
 1760               	.LM170:
 1761 07b4 C798      		cbi 56-0x20,7
GAS LISTING /var/tmp//ccsuTKi5.s 			page 44


 1762 07b6 DB01      		movw r26,r22
 1763 07b8 05C0      		rjmp .L80
 1764               	.L81:
 316:cmdlinetest.c **** 
 317:cmdlinetest.c **** 	// copy the local buffer to the transmit buffer
 318:cmdlinetest.c **** 	for(i=0; i<slaveBufferLength; i++)
 319:cmdlinetest.c **** 	{
 320:cmdlinetest.c **** 		*transmitData++ = slaveBuffer[i];
 1765               		.stabn	68,0,320,.LM171-i2cSlaveTransmitService
 1766               	.LM171:
 1767 07ba FF27      		clr r31
 1768 07bc E050      		subi r30,lo8(-(slaveBuffer))
 1769 07be F040      		sbci r31,hi8(-(slaveBuffer))
 1770 07c0 8081      		ld r24,Z
 1771 07c2 8D93      		st X+,r24
 1772               	.L80:
 1773 07c4 EA2F      		mov r30,r26
 1774 07c6 E61B      		sub r30,r22
 1775               		.stabn	68,0,318,.LM172-i2cSlaveTransmitService
 1776               	.LM172:
 1777 07c8 9091 0000 		lds r25,slaveBufferLength
 1778 07cc E917      		cp r30,r25
 1779 07ce A8F3      		brlo .L81
 321:cmdlinetest.c **** 	}
 322:cmdlinetest.c **** 
 323:cmdlinetest.c **** 	slaveBuffer[0]++;
 1780               		.stabn	68,0,323,.LM173-i2cSlaveTransmitService
 1781               	.LM173:
 1782 07d0 8091 0000 		lds r24,slaveBuffer
 1783 07d4 8F5F      		subi r24,lo8(-(1))
 1784 07d6 8093 0000 		sts slaveBuffer,r24
 324:cmdlinetest.c **** 
 325:cmdlinetest.c **** 	return slaveBufferLength;
 326:cmdlinetest.c **** }
 1785               		.stabn	68,0,326,.LM174-i2cSlaveTransmitService
 1786               	.LM174:
 1787 07da 892F      		mov r24,r25
 1788 07dc 9927      		clr r25
 1789               	/* epilogue: frame size=0 */
 1790 07de 0895      		ret
 1791               	/* epilogue end (size=1) */
 1792               	/* function i2cSlaveTransmitService size 22 (21) */
 1793               		.size	i2cSlaveTransmitService, .-i2cSlaveTransmitService
 1794               		.stabs	"i:r(6,1)",64,0,310,30
 1795               		.stabn	192,0,0,i2cSlaveTransmitService-i2cSlaveTransmitService
 1796               		.stabn	224,0,0,.Lscope22-i2cSlaveTransmitService
 1797               	.Lscope22:
 1798               		.stabs	"",36,0,0,.Lscope22-i2cSlaveTransmitService
 1799               		.stabd	78,0,0
 1800               		.stabs	"i2cMasterSendDiag:F(0,15)",36,0,329,i2cMasterSendDiag
 1801               		.stabs	"deviceAddr:P(6,1)",64,0,328,17
 1802               		.stabs	"length:P(6,1)",64,0,328,16
 1803               		.stabs	"data:P(0,16)",64,0,328,28
 1804               	.global	i2cMasterSendDiag
 1805               		.type	i2cMasterSendDiag, @function
 1806               	i2cMasterSendDiag:
 1807               		.stabd	46,0,0
GAS LISTING /var/tmp//ccsuTKi5.s 			page 45


 327:cmdlinetest.c **** 
 328:cmdlinetest.c **** void i2cMasterSendDiag(u08 deviceAddr, u08 length, u08* data)
 329:cmdlinetest.c **** {
 1808               		.stabn	68,0,329,.LM175-i2cMasterSendDiag
 1809               	.LM175:
 1810               	/* prologue: frame size=0 */
 1811 07e0 0F93      		push r16
 1812 07e2 1F93      		push r17
 1813 07e4 CF93      		push r28
 1814 07e6 DF93      		push r29
 1815               	/* prologue end (size=4) */
 1816 07e8 182F      		mov r17,r24
 1817 07ea 062F      		mov r16,r22
 1818 07ec EA01      		movw r28,r20
 330:cmdlinetest.c **** 	// this function is equivalent to the i2cMasterSendNI() in the I2C library
 331:cmdlinetest.c **** 	// except it will print information about transmission progress to the terminal
 332:cmdlinetest.c **** 
 333:cmdlinetest.c **** 	// disable TWI interrupt
 334:cmdlinetest.c **** 	cbi(TWCR, TWIE);
 1819               		.stabn	68,0,334,.LM176-i2cMasterSendDiag
 1820               	.LM176:
 1821 07ee 86B7      		in r24,86-0x20
 1822 07f0 8E7F      		andi r24,lo8(-2)
 1823 07f2 86BF      		out 86-0x20,r24
 335:cmdlinetest.c **** 
 336:cmdlinetest.c **** 	// send start condition
 337:cmdlinetest.c **** 	i2cSendStart();
 1824               		.stabn	68,0,337,.LM177-i2cMasterSendDiag
 1825               	.LM177:
 1826 07f4 0E94 0000 		call i2cSendStart
 338:cmdlinetest.c **** 	i2cWaitForComplete();
 1827               		.stabn	68,0,338,.LM178-i2cMasterSendDiag
 1828               	.LM178:
 1829 07f8 0E94 0000 		call i2cWaitForComplete
 339:cmdlinetest.c **** 	//rprintf(("STA-")));
 340:cmdlinetest.c **** 
 341:cmdlinetest.c **** 	// send device address with write
 342:cmdlinetest.c **** 	i2cSendByte( deviceAddr&0xFE );
 1830               		.stabn	68,0,342,.LM179-i2cMasterSendDiag
 1831               	.LM179:
 1832 07fc 812F      		mov r24,r17
 1833 07fe 8E7F      		andi r24,lo8(-2)
 1834 0800 0E94 0000 		call i2cSendByte
 343:cmdlinetest.c **** 	i2cWaitForComplete();
 1835               		.stabn	68,0,343,.LM180-i2cMasterSendDiag
 1836               	.LM180:
 1837 0804 0E94 0000 		call i2cWaitForComplete
 1838 0808 10E0      		ldi r17,lo8(0)
 1839 080a 06C0      		rjmp .L85
 1840               	.L86:
 344:cmdlinetest.c **** 	//rprintf(("SLA+W-")));
 345:cmdlinetest.c **** 	
 346:cmdlinetest.c **** 	// send data
 347:cmdlinetest.c **** 	while(length)
 348:cmdlinetest.c **** 	{
 349:cmdlinetest.c **** 		i2cSendByte( *data++ );
 1841               		.stabn	68,0,349,.LM181-i2cMasterSendDiag
GAS LISTING /var/tmp//ccsuTKi5.s 			page 46


 1842               	.LM181:
 1843 080c 8991      		ld r24,Y+
 1844 080e 0E94 0000 		call i2cSendByte
 350:cmdlinetest.c **** 		i2cWaitForComplete();
 1845               		.stabn	68,0,350,.LM182-i2cMasterSendDiag
 1846               	.LM182:
 1847 0812 0E94 0000 		call i2cWaitForComplete
 1848 0816 1150      		subi r17,lo8(-(-1))
 1849               	.L85:
 1850               		.stabn	68,0,347,.LM183-i2cMasterSendDiag
 1851               	.LM183:
 1852 0818 802F      		mov r24,r16
 1853 081a 8195      		neg r24
 1854 081c 1817      		cp r17,r24
 1855 081e B1F7      		brne .L86
 351:cmdlinetest.c **** 		//rprintf(("DATA-")));
 352:cmdlinetest.c **** 		length--;
 353:cmdlinetest.c **** 	}
 354:cmdlinetest.c **** 	
 355:cmdlinetest.c **** 	// transmit stop condition
 356:cmdlinetest.c **** 	// leave with TWEA on for slave receiving
 357:cmdlinetest.c **** 	i2cSendStop();
 1856               		.stabn	68,0,357,.LM184-i2cMasterSendDiag
 1857               	.LM184:
 1858 0820 0E94 0000 		call i2cSendStop
 1859               	.L88:
 358:cmdlinetest.c **** 	while( !(inb(TWCR) & BV(TWSTO)) );
 1860               		.stabn	68,0,358,.LM185-i2cMasterSendDiag
 1861               	.LM185:
 1862 0824 06B6      		in __tmp_reg__,86-0x20
 1863 0826 04FE      		sbrs __tmp_reg__,4
 1864 0828 FDCF      		rjmp .L88
 359:cmdlinetest.c **** 	//rprintf(("STO")));
 360:cmdlinetest.c **** 
 361:cmdlinetest.c **** 	// enable TWI interrupt
 362:cmdlinetest.c **** 	sbi(TWCR, TWIE);
 1865               		.stabn	68,0,362,.LM186-i2cMasterSendDiag
 1866               	.LM186:
 1867 082a 86B7      		in r24,86-0x20
 1868 082c 8160      		ori r24,lo8(1)
 1869 082e 86BF      		out 86-0x20,r24
 1870               	/* epilogue: frame size=0 */
 1871 0830 DF91      		pop r29
 1872 0832 CF91      		pop r28
 1873 0834 1F91      		pop r17
 1874 0836 0F91      		pop r16
 1875 0838 0895      		ret
 1876               	/* epilogue end (size=5) */
 1877               	/* function i2cMasterSendDiag size 45 (36) */
 1878               		.size	i2cMasterSendDiag, .-i2cMasterSendDiag
 1879               	.Lscope23:
 1880               		.stabs	"",36,0,0,.Lscope23-i2cMasterSendDiag
 1881               		.stabd	78,0,0
 1882               		.stabs	"i2cMaster_Send:F(0,15)",36,0,366,i2cMaster_Send
 1883               	.global	i2cMaster_Send
 1884               		.type	i2cMaster_Send, @function
 1885               	i2cMaster_Send:
GAS LISTING /var/tmp//ccsuTKi5.s 			page 47


 1886               		.stabd	46,0,0
 363:cmdlinetest.c **** }
 364:cmdlinetest.c **** 
 365:cmdlinetest.c **** void i2cMaster_Send(void)
 366:cmdlinetest.c **** {
 1887               		.stabn	68,0,366,.LM187-i2cMaster_Send
 1888               	.LM187:
 1889               	/* prologue: frame size=20 */
 1890 083a 0F93      		push r16
 1891 083c 1F93      		push r17
 1892 083e CF93      		push r28
 1893 0840 DF93      		push r29
 1894 0842 CDB7      		in r28,__SP_L__
 1895 0844 DEB7      		in r29,__SP_H__
 1896 0846 6497      		sbiw r28,20
 1897 0848 0FB6      		in __tmp_reg__,__SREG__
 1898 084a F894      		cli
 1899 084c DEBF      		out __SP_H__,r29
 1900 084e 0FBE      		out __SREG__,__tmp_reg__
 1901 0850 CDBF      		out __SP_L__,r28
 1902               	/* prologue end (size=12) */
 367:cmdlinetest.c **** 	u08 sendData[20];
 368:cmdlinetest.c **** 	strcpy(sendData, cmdlineGetArgStr(1));
 1903               		.stabn	68,0,368,.LM188-i2cMaster_Send
 1904               	.LM188:
 1905 0852 81E0      		ldi r24,lo8(1)
 1906 0854 0E94 0000 		call cmdlineGetArgStr
 1907 0858 8E01      		movw r16,r28
 1908 085a 0F5F      		subi r16,lo8(-(1))
 1909 085c 1F4F      		sbci r17,hi8(-(1))
 1910 085e BC01      		movw r22,r24
 1911 0860 C801      		movw r24,r16
 1912 0862 0E94 0000 		call strcpy
 369:cmdlinetest.c **** 	i2cMasterSend(TARGET_ADDR, 0x02, sendData);
 1913               		.stabn	68,0,369,.LM189-i2cMaster_Send
 1914               	.LM189:
 1915 0866 A801      		movw r20,r16
 1916 0868 62E0      		ldi r22,lo8(2)
 1917 086a 80EA      		ldi r24,lo8(-96)
 1918 086c 0E94 0000 		call i2cMasterSend
 1919               	/* epilogue: frame size=20 */
 1920 0870 6496      		adiw r28,20
 1921 0872 0FB6      		in __tmp_reg__,__SREG__
 1922 0874 F894      		cli
 1923 0876 DEBF      		out __SP_H__,r29
 1924 0878 0FBE      		out __SREG__,__tmp_reg__
 1925 087a CDBF      		out __SP_L__,r28
 1926 087c DF91      		pop r29
 1927 087e CF91      		pop r28
 1928 0880 1F91      		pop r17
 1929 0882 0F91      		pop r16
 1930 0884 0895      		ret
 1931               	/* epilogue end (size=11) */
 1932               	/* function i2cMaster_Send size 38 (15) */
 1933               		.size	i2cMaster_Send, .-i2cMaster_Send
 1934               		.stabs	"sendData:(0,17)=ar(0,18)=r(0,18);0;0177777;;0;19;(6,1)",128,0,367,1
 1935               		.stabn	192,0,0,i2cMaster_Send-i2cMaster_Send
GAS LISTING /var/tmp//ccsuTKi5.s 			page 48


 1936               		.stabn	224,0,0,.Lscope24-i2cMaster_Send
 1937               	.Lscope24:
 1938               		.stabs	"",36,0,0,.Lscope24-i2cMaster_Send
 1939               		.stabd	78,0,0
 1940               		.stabs	"i2cMaster_Auto_Send:F(0,15)",36,0,373,i2cMaster_Auto_Send
 1941               		.stabs	"message:P(6,1)",64,0,372,24
 1942               	.global	i2cMaster_Auto_Send
 1943               		.type	i2cMaster_Auto_Send, @function
 1944               	i2cMaster_Auto_Send:
 1945               		.stabd	46,0,0
 370:cmdlinetest.c **** //	putchar(sendData[0]);
 371:cmdlinetest.c **** }
 372:cmdlinetest.c **** void i2cMaster_Auto_Send(u08 message)
 373:cmdlinetest.c **** {
 1946               		.stabn	68,0,373,.LM190-i2cMaster_Auto_Send
 1947               	.LM190:
 1948               	/* prologue: frame size=2 */
 1949 0886 CF93      		push r28
 1950 0888 DF93      		push r29
 1951 088a CDB7      		in r28,__SP_L__
 1952 088c DEB7      		in r29,__SP_H__
 1953 088e 2297      		sbiw r28,2
 1954 0890 0FB6      		in __tmp_reg__,__SREG__
 1955 0892 F894      		cli
 1956 0894 DEBF      		out __SP_H__,r29
 1957 0896 0FBE      		out __SREG__,__tmp_reg__
 1958 0898 CDBF      		out __SP_L__,r28
 1959               	/* prologue end (size=10) */
 374:cmdlinetest.c **** 	u08 sendData[2];
 375:cmdlinetest.c **** 	sendData[0] = message;
 1960               		.stabn	68,0,375,.LM191-i2cMaster_Auto_Send
 1961               	.LM191:
 1962 089a 8983      		std Y+1,r24
 376:cmdlinetest.c **** 	sendData[1] = '\0';
 1963               		.stabn	68,0,376,.LM192-i2cMaster_Auto_Send
 1964               	.LM192:
 1965 089c 1A82      		std Y+2,__zero_reg__
 377:cmdlinetest.c **** 	i2cMasterSend(TARGET_ADDR, 0x02, sendData);
 1966               		.stabn	68,0,377,.LM193-i2cMaster_Auto_Send
 1967               	.LM193:
 1968 089e AE01      		movw r20,r28
 1969 08a0 4F5F      		subi r20,lo8(-(1))
 1970 08a2 5F4F      		sbci r21,hi8(-(1))
 1971 08a4 62E0      		ldi r22,lo8(2)
 1972 08a6 80EA      		ldi r24,lo8(-96)
 1973 08a8 0E94 0000 		call i2cMasterSend
 1974               	/* epilogue: frame size=2 */
 1975 08ac 2296      		adiw r28,2
 1976 08ae 0FB6      		in __tmp_reg__,__SREG__
 1977 08b0 F894      		cli
 1978 08b2 DEBF      		out __SP_H__,r29
 1979 08b4 0FBE      		out __SREG__,__tmp_reg__
 1980 08b6 CDBF      		out __SP_L__,r28
 1981 08b8 DF91      		pop r29
 1982 08ba CF91      		pop r28
 1983 08bc 0895      		ret
 1984               	/* epilogue end (size=9) */
GAS LISTING /var/tmp//ccsuTKi5.s 			page 49


 1985               	/* function i2cMaster_Auto_Send size 28 (9) */
 1986               		.size	i2cMaster_Auto_Send, .-i2cMaster_Auto_Send
 1987               		.stabs	"sendData:(0,19)=ar(0,18);0;1;(6,1)",128,0,374,1
 1988               		.stabn	192,0,0,i2cMaster_Auto_Send-i2cMaster_Auto_Send
 1989               		.stabn	224,0,0,.Lscope25-i2cMaster_Auto_Send
 1990               	.Lscope25:
 1991               		.stabs	"",36,0,0,.Lscope25-i2cMaster_Auto_Send
 1992               		.stabd	78,0,0
 1993               		.section	.progmem.data
 1994               		.type	__c.2000, @object
 1995               		.size	__c.2000, 2
 1996               	__c.2000:
 1997 0235 2C00      		.string	","
 1998               		.text
 1999               		.stabs	"i2cMaster_Receive:F(0,15)",36,0,380,i2cMaster_Receive
 2000               	.global	i2cMaster_Receive
 2001               		.type	i2cMaster_Receive, @function
 2002               	i2cMaster_Receive:
 2003               		.stabd	46,0,0
 378:cmdlinetest.c **** }
 379:cmdlinetest.c **** void i2cMaster_Receive(void)
 380:cmdlinetest.c **** {	
 2004               		.stabn	68,0,380,.LM194-i2cMaster_Receive
 2005               	.LM194:
 2006               	/* prologue: frame size=20 */
 2007 08be 0F93      		push r16
 2008 08c0 1F93      		push r17
 2009 08c2 CF93      		push r28
 2010 08c4 DF93      		push r29
 2011 08c6 CDB7      		in r28,__SP_L__
 2012 08c8 DEB7      		in r29,__SP_H__
 2013 08ca 6497      		sbiw r28,20
 2014 08cc 0FB6      		in __tmp_reg__,__SREG__
 2015 08ce F894      		cli
 2016 08d0 DEBF      		out __SP_H__,r29
 2017 08d2 0FBE      		out __SREG__,__tmp_reg__
 2018 08d4 CDBF      		out __SP_L__,r28
 2019               	/* prologue end (size=12) */
 381:cmdlinetest.c **** 	u08 command[20];
 382:cmdlinetest.c **** 	strcpy(command, cmdlineGetArgStr(1));
 2020               		.stabn	68,0,382,.LM195-i2cMaster_Receive
 2021               	.LM195:
 2022 08d6 81E0      		ldi r24,lo8(1)
 2023 08d8 0E94 0000 		call cmdlineGetArgStr
 2024 08dc BC01      		movw r22,r24
 2025 08de CE01      		movw r24,r28
 2026 08e0 0196      		adiw r24,1
 2027 08e2 0E94 0000 		call strcpy
 383:cmdlinetest.c **** 	
 384:cmdlinetest.c **** 	i2cMasterReceive(TARGET_ADDR, slaveBufferLength, slaveBuffer);
 2028               		.stabn	68,0,384,.LM196-i2cMaster_Receive
 2029               	.LM196:
 2030 08e6 00E0      		ldi r16,lo8(slaveBuffer)
 2031 08e8 10E0      		ldi r17,hi8(slaveBuffer)
 2032 08ea A801      		movw r20,r16
 2033 08ec 6091 0000 		lds r22,slaveBufferLength
 2034 08f0 80EA      		ldi r24,lo8(-96)
GAS LISTING /var/tmp//ccsuTKi5.s 			page 50


 2035 08f2 0E94 0000 		call i2cMasterReceive
 385:cmdlinetest.c **** 	slaveBuffer[0x19] = 0;
 2036               		.stabn	68,0,385,.LM197-i2cMaster_Receive
 2037               	.LM197:
 2038 08f6 1092 0000 		sts slaveBuffer+25,__zero_reg__
 386:cmdlinetest.c **** 	//rprintfStr(command);
 387:cmdlinetest.c **** 	//rprintf(" ");
 388:cmdlinetest.c **** 	rprintfStr(slaveBuffer);
 2039               		.stabn	68,0,388,.LM198-i2cMaster_Receive
 2040               	.LM198:
 2041 08fa C801      		movw r24,r16
 2042 08fc 0E94 0000 		call rprintfStr
 389:cmdlinetest.c **** 	rprintf(",");
 2043               		.stabn	68,0,389,.LM199-i2cMaster_Receive
 2044               	.LM199:
 2045 0900 80E0      		ldi r24,lo8(__c.2000)
 2046 0902 90E0      		ldi r25,hi8(__c.2000)
 2047 0904 9F93      		push r25
 2048 0906 8F93      		push r24
 2049 0908 81E0      		ldi r24,lo8(1)
 2050 090a 8F93      		push r24
 2051 090c 0E94 0000 		call rprintf1RamRom
 2052 0910 0F90      		pop __tmp_reg__
 2053 0912 0F90      		pop __tmp_reg__
 2054 0914 0F90      	 	pop __tmp_reg__
 2055               	/* epilogue: frame size=20 */
 2056 0916 6496      		adiw r28,20
 2057 0918 0FB6      		in __tmp_reg__,__SREG__
 2058 091a F894      		cli
 2059 091c DEBF      		out __SP_H__,r29
 2060 091e 0FBE      		out __SREG__,__tmp_reg__
 2061 0920 CDBF      		out __SP_L__,r28
 2062 0922 DF91      		pop r29
 2063 0924 CF91      		pop r28
 2064 0926 1F91      		pop r17
 2065 0928 0F91      		pop r16
 2066 092a 0895      		ret
 2067               	/* epilogue end (size=11) */
 2068               	/* function i2cMaster_Receive size 55 (32) */
 2069               		.size	i2cMaster_Receive, .-i2cMaster_Receive
 2070               		.stabs	"command:(0,17)",128,0,381,1
 2071               		.stabn	192,0,0,i2cMaster_Receive-i2cMaster_Receive
 2072               		.stabn	224,0,0,.Lscope26-i2cMaster_Receive
 2073               	.Lscope26:
 2074               		.stabs	"",36,0,0,.Lscope26-i2cMaster_Receive
 2075               		.stabd	78,0,0
 2076               		.section	.progmem.data
 2077               		.type	__c.2010, @object
 2078               		.size	__c.2010, 2
 2079               	__c.2010:
 2080 0237 2C00      		.string	","
 2081               		.text
 2082               		.stabs	"i2cMaster_Auto_Receive:F(0,15)",36,0,393,i2cMaster_Auto_Receive
 2083               		.stabs	"command:P(6,1)",64,0,392,24
 2084               	.global	i2cMaster_Auto_Receive
 2085               		.type	i2cMaster_Auto_Receive, @function
 2086               	i2cMaster_Auto_Receive:
GAS LISTING /var/tmp//ccsuTKi5.s 			page 51


 2087               		.stabd	46,0,0
 390:cmdlinetest.c **** 	
 391:cmdlinetest.c **** }
 392:cmdlinetest.c **** void i2cMaster_Auto_Receive(u08 command)
 393:cmdlinetest.c **** {
 2088               		.stabn	68,0,393,.LM200-i2cMaster_Auto_Receive
 2089               	.LM200:
 2090               	/* prologue: frame size=0 */
 2091 092c 0F93      		push r16
 2092 092e 1F93      		push r17
 2093               	/* prologue end (size=2) */
 394:cmdlinetest.c **** 	i2cMasterReceive(TARGET_ADDR, slaveBufferLength, slaveBuffer);
 2094               		.stabn	68,0,394,.LM201-i2cMaster_Auto_Receive
 2095               	.LM201:
 2096 0930 00E0      		ldi r16,lo8(slaveBuffer)
 2097 0932 10E0      		ldi r17,hi8(slaveBuffer)
 2098 0934 A801      		movw r20,r16
 2099 0936 6091 0000 		lds r22,slaveBufferLength
 2100 093a 80EA      		ldi r24,lo8(-96)
 2101 093c 0E94 0000 		call i2cMasterReceive
 395:cmdlinetest.c **** 	
 396:cmdlinetest.c **** 	slaveBuffer[0x19] = 0;
 2102               		.stabn	68,0,396,.LM202-i2cMaster_Auto_Receive
 2103               	.LM202:
 2104 0940 1092 0000 		sts slaveBuffer+25,__zero_reg__
 397:cmdlinetest.c **** 	//rprintfStr(command);
 398:cmdlinetest.c **** 	//rprintf(" ");
 399:cmdlinetest.c **** 	rprintfStr(slaveBuffer);
 2105               		.stabn	68,0,399,.LM203-i2cMaster_Auto_Receive
 2106               	.LM203:
 2107 0944 C801      		movw r24,r16
 2108 0946 0E94 0000 		call rprintfStr
 400:cmdlinetest.c **** 	rprintf(",");
 2109               		.stabn	68,0,400,.LM204-i2cMaster_Auto_Receive
 2110               	.LM204:
 2111 094a 80E0      		ldi r24,lo8(__c.2010)
 2112 094c 90E0      		ldi r25,hi8(__c.2010)
 2113 094e 9F93      		push r25
 2114 0950 8F93      		push r24
 2115 0952 81E0      		ldi r24,lo8(1)
 2116 0954 8F93      		push r24
 2117 0956 0E94 0000 		call rprintf1RamRom
 2118 095a 0F90      		pop __tmp_reg__
 2119 095c 0F90      		pop __tmp_reg__
 2120 095e 0F90      	 	pop __tmp_reg__
 2121               	/* epilogue: frame size=0 */
 2122 0960 1F91      		pop r17
 2123 0962 0F91      		pop r16
 2124 0964 0895      		ret
 2125               	/* epilogue end (size=3) */
 2126               	/* function i2cMaster_Auto_Receive size 29 (24) */
 2127               		.size	i2cMaster_Auto_Receive, .-i2cMaster_Auto_Receive
 2128               	.Lscope27:
 2129               		.stabs	"",36,0,0,.Lscope27-i2cMaster_Auto_Receive
 2130               		.stabd	78,0,0
 2131               		.stabs	"setLeftServo:F(0,15)",36,0,415,setLeftServo
 2132               	.global	setLeftServo
GAS LISTING /var/tmp//ccsuTKi5.s 			page 52


 2133               		.type	setLeftServo, @function
 2134               	setLeftServo:
 2135               		.stabd	46,0,0
 401:cmdlinetest.c **** }
 402:cmdlinetest.c **** 
 403:cmdlinetest.c **** 	//BELOW is the original left servo code -- would be right for plane, not for boat
 404:cmdlinetest.c **** /*
 405:cmdlinetest.c **** void setLeftServo(void)
 406:cmdlinetest.c **** {	
 407:cmdlinetest.c **** 	leftServoPos = (unsigned char) cmdlineGetArgInt(1);
 408:cmdlinetest.c **** 	servoSetPosition(LEFT_SERVO_CHAN, leftServoPos);
 409:cmdlinetest.c **** #ifdef DEBUG	
 410:cmdlinetest.c **** 		rprintf("e0\r\n");
 411:cmdlinetest.c **** #endif DEBUG
 412:cmdlinetest.c **** }
 413:cmdlinetest.c **** */
 414:cmdlinetest.c **** void setLeftServo(void)
 415:cmdlinetest.c **** {	
 2136               		.stabn	68,0,415,.LM205-setLeftServo
 2137               	.LM205:
 2138               	/* prologue: frame size=0 */
 2139 0966 CF92      		push r12
 2140 0968 DF92      		push r13
 2141 096a EF92      		push r14
 2142 096c FF92      		push r15
 2143 096e 0F93      		push r16
 2144 0970 1F93      		push r17
 2145               	/* prologue end (size=6) */
 416:cmdlinetest.c **** 	signed long leftServo_Dest;
 417:cmdlinetest.c **** 	//using global signed long Pulse_Position
 418:cmdlinetest.c **** 	signed long thePosition = Pulse_Position>>1;
 2146               		.stabn	68,0,418,.LM206-setLeftServo
 2147               	.LM206:
 2148 0972 E090 0000 		lds r14,Pulse_Position
 2149 0976 F090 0000 		lds r15,(Pulse_Position)+1
 2150 097a 0091 0000 		lds r16,(Pulse_Position)+2
 2151 097e 1091 0000 		lds r17,(Pulse_Position)+3
 419:cmdlinetest.c ****  	leftServo_Dest = multiplier*((signed int) cmdlineGetArgInt(1));  //get the new desired position
 2152               		.stabn	68,0,419,.LM207-setLeftServo
 2153               	.LM207:
 2154 0982 C090 0000 		lds r12,multiplier
 2155 0986 D090 0000 		lds r13,(multiplier)+1
 2156 098a 81E0      		ldi r24,lo8(1)
 2157 098c 0E94 0000 		call cmdlineGetArgInt
 2158 0990 C69E      		mul r12,r22
 2159 0992 C001      		movw r24,r0
 2160 0994 C79E      		mul r12,r23
 2161 0996 900D      		add r25,r0
 2162 0998 D69E      		mul r13,r22
 2163 099a 900D      		add r25,r0
 2164 099c 1124      		clr r1
 2165 099e AA27      		clr r26
 2166 09a0 BB27      		clr r27
 420:cmdlinetest.c **** 	leftServo_Dest = leftServo_Dest - thePosition;  //
 2167               		.stabn	68,0,420,.LM208-setLeftServo
 2168               	.LM208:
 2169 09a2 1595      		asr r17
GAS LISTING /var/tmp//ccsuTKi5.s 			page 53


 2170 09a4 0795      		ror r16
 2171 09a6 F794      		ror r15
 2172 09a8 E794      		ror r14
 2173 09aa 8E19      		sub r24,r14
 2174 09ac 9F09      		sbc r25,r15
 2175 09ae A00B      		sbc r26,r16
 2176 09b0 B10B      		sbc r27,r17
 421:cmdlinetest.c **** 	//pulseT1BStop();  // stop here so it doesn't reset pulse count to zero
 422:cmdlinetest.c **** 	
 423:cmdlinetest.c **** 	//debug
 424:cmdlinetest.c **** 	//rprintf("leftServo_Dest b4 compare = %d\r\n",leftServo_Dest);
 425:cmdlinetest.c **** 
 426:cmdlinetest.c **** 	if(leftServo_Dest < 0)
 2177               		.stabn	68,0,426,.LM209-setLeftServo
 2178               	.LM209:
 2179 09b2 B7FF      		sbrs r27,7
 2180 09b4 09C0      		rjmp .L102
 427:cmdlinetest.c **** 	{
 428:cmdlinetest.c **** 		leftServo_Dest*=-1;
 429:cmdlinetest.c **** 		cbi(PORTD, 5);
 2181               		.stabn	68,0,429,.LM210-setLeftServo
 2182               	.LM210:
 2183 09b6 9598      		cbi 50-0x20,5
 430:cmdlinetest.c **** 		pulseT1BRun(leftServo_Dest);
 2184               		.stabn	68,0,430,.LM211-setLeftServo
 2185               	.LM211:
 2186 09b8 B095      		com r27
 2187 09ba A095      		com r26
 2188 09bc 9095      		com r25
 2189 09be 8195      		neg r24
 2190 09c0 9F4F      		sbci r25,lo8(-1)
 2191 09c2 AF4F      		sbci r26,lo8(-1)
 2192 09c4 BF4F      		sbci r27,lo8(-1)
 2193 09c6 01C0      		rjmp .L106
 2194               	.L102:
 431:cmdlinetest.c **** 	}
 432:cmdlinetest.c **** 	else
 433:cmdlinetest.c **** 	{
 434:cmdlinetest.c **** 		sbi(PORTD, 5);
 2195               		.stabn	68,0,434,.LM212-setLeftServo
 2196               	.LM212:
 2197 09c8 959A      		sbi 50-0x20,5
 2198               	.L106:
 435:cmdlinetest.c **** 		pulseT1BRun(leftServo_Dest);
 2199               		.stabn	68,0,435,.LM213-setLeftServo
 2200               	.LM213:
 2201 09ca 0E94 0000 		call pulseT1BRun
 2202               	/* epilogue: frame size=0 */
 2203 09ce 1F91      		pop r17
 2204 09d0 0F91      		pop r16
 2205 09d2 FF90      		pop r15
 2206 09d4 EF90      		pop r14
 2207 09d6 DF90      		pop r13
 2208 09d8 CF90      		pop r12
 2209 09da 0895      		ret
 2210               	/* epilogue end (size=7) */
 2211               	/* function setLeftServo size 59 (46) */
GAS LISTING /var/tmp//ccsuTKi5.s 			page 54


 2212               		.size	setLeftServo, .-setLeftServo
 2213               	.Lscope28:
 2214               		.stabs	"",36,0,0,.Lscope28-setLeftServo
 2215               		.stabd	78,0,0
 2216               		.stabs	"setRightServo:F(0,15)",36,0,450,setRightServo
 2217               	.global	setRightServo
 2218               		.type	setRightServo, @function
 2219               	setRightServo:
 2220               		.stabd	46,0,0
 436:cmdlinetest.c **** 	}
 437:cmdlinetest.c **** 	//debug
 438:cmdlinetest.c **** 	/*
 439:cmdlinetest.c **** 	rprintf("Asked to go to %d\r\n",cmdlineGetArgInt(1));
 440:cmdlinetest.c **** 	rprintf("Pulse_Position = %d\r\n",thePosition);
 441:cmdlinetest.c **** 	rprintf("leftServo_Dest after compare = %d\r\n",leftServo_Dest);
 442:cmdlinetest.c **** 	*/
 443:cmdlinetest.c **** 	
 444:cmdlinetest.c **** #ifdef DEBUG	
 445:cmdlinetest.c **** 		rprintf("e0\r\n");
 446:cmdlinetest.c **** #endif DEBUG
 447:cmdlinetest.c **** }
 448:cmdlinetest.c **** 
 449:cmdlinetest.c **** void setRightServo(void)
 450:cmdlinetest.c **** {	
 2221               		.stabn	68,0,450,.LM214-setRightServo
 2222               	.LM214:
 2223               	/* prologue: frame size=0 */
 2224               	/* prologue end (size=0) */
 451:cmdlinetest.c **** 	rightServoPos = (unsigned char) cmdlineGetArgInt(1);
 2225               		.stabn	68,0,451,.LM215-setRightServo
 2226               	.LM215:
 2227 09dc 81E0      		ldi r24,lo8(1)
 2228 09de 0E94 0000 		call cmdlineGetArgInt
 2229 09e2 6093 0000 		sts rightServoPos,r22
 452:cmdlinetest.c **** 	servoSetPosition(RIGHT_SERVO_CHAN, rightServoPos);
 2230               		.stabn	68,0,452,.LM216-setRightServo
 2231               	.LM216:
 2232 09e6 83E0      		ldi r24,lo8(3)
 2233 09e8 0E94 0000 		call servoSetPosition
 2234               	/* epilogue: frame size=0 */
 2235 09ec 0895      		ret
 2236               	/* epilogue end (size=1) */
 2237               	/* function setRightServo size 9 (8) */
 2238               		.size	setRightServo, .-setRightServo
 2239               	.Lscope29:
 2240               		.stabs	"",36,0,0,.Lscope29-setRightServo
 2241               		.stabd	78,0,0
 2242               		.stabs	"setThrottleServo:F(0,15)",36,0,459,setThrottleServo
 2243               	.global	setThrottleServo
 2244               		.type	setThrottleServo, @function
 2245               	setThrottleServo:
 2246               		.stabd	46,0,0
 453:cmdlinetest.c **** #ifdef DEBUG
 454:cmdlinetest.c **** 		rprintf("e0\r\n");
 455:cmdlinetest.c **** #endif DEBUG
 456:cmdlinetest.c **** }
 457:cmdlinetest.c **** 
GAS LISTING /var/tmp//ccsuTKi5.s 			page 55


 458:cmdlinetest.c **** void setThrottleServo(void)
 459:cmdlinetest.c **** {
 2247               		.stabn	68,0,459,.LM217-setThrottleServo
 2248               	.LM217:
 2249               	/* prologue: frame size=0 */
 2250               	/* prologue end (size=0) */
 460:cmdlinetest.c **** 	throttleServoPos = (unsigned char) cmdlineGetArgInt(1);
 2251               		.stabn	68,0,460,.LM218-setThrottleServo
 2252               	.LM218:
 2253 09ee 81E0      		ldi r24,lo8(1)
 2254 09f0 0E94 0000 		call cmdlineGetArgInt
 2255 09f4 6093 0000 		sts throttleServoPos,r22
 461:cmdlinetest.c **** 	servoSetPosition(THROTTLE_SERVO_CHAN, throttleServoPos);
 2256               		.stabn	68,0,461,.LM219-setThrottleServo
 2257               	.LM219:
 2258 09f8 80E0      		ldi r24,lo8(0)
 2259 09fa 0E94 0000 		call servoSetPosition
 2260               	/* epilogue: frame size=0 */
 2261 09fe 0895      		ret
 2262               	/* epilogue end (size=1) */
 2263               	/* function setThrottleServo size 9 (8) */
 2264               		.size	setThrottleServo, .-setThrottleServo
 2265               	.Lscope30:
 2266               		.stabs	"",36,0,0,.Lscope30-setThrottleServo
 2267               		.stabd	78,0,0
 2268               		.stabs	"setFeedbackInterval:F(0,15)",36,0,467,setFeedbackInterval
 2269               	.global	setFeedbackInterval
 2270               		.type	setFeedbackInterval, @function
 2271               	setFeedbackInterval:
 2272               		.stabd	46,0,0
 462:cmdlinetest.c **** #ifdef DEBUG
 463:cmdlinetest.c **** 		rprintf("e0\r\n");
 464:cmdlinetest.c **** #endif DEBUG
 465:cmdlinetest.c **** }
 466:cmdlinetest.c **** void setFeedbackInterval(void)
 467:cmdlinetest.c **** {
 2273               		.stabn	68,0,467,.LM220-setFeedbackInterval
 2274               	.LM220:
 2275               	/* prologue: frame size=0 */
 2276               	/* prologue end (size=0) */
 468:cmdlinetest.c **** 	numTimesThrough = cmdlineGetArgInt(1);
 2277               		.stabn	68,0,468,.LM221-setFeedbackInterval
 2278               	.LM221:
 2279 0a00 81E0      		ldi r24,lo8(1)
 2280 0a02 0E94 0000 		call cmdlineGetArgInt
 2281 0a06 6093 0000 		sts numTimesThrough,r22
 2282 0a0a 7093 0000 		sts (numTimesThrough)+1,r23
 2283 0a0e 8093 0000 		sts (numTimesThrough)+2,r24
 2284 0a12 9093 0000 		sts (numTimesThrough)+3,r25
 2285               	/* epilogue: frame size=0 */
 2286 0a16 0895      		ret
 2287               	/* epilogue end (size=1) */
 2288               	/* function setFeedbackInterval size 12 (11) */
 2289               		.size	setFeedbackInterval, .-setFeedbackInterval
 2290               	.Lscope31:
 2291               		.stabs	"",36,0,0,.Lscope31-setFeedbackInterval
 2292               		.stabd	78,0,0
GAS LISTING /var/tmp//ccsuTKi5.s 			page 56


 2293               		.stabs	"setCamPanServo:F(0,15)",36,0,472,setCamPanServo
 2294               	.global	setCamPanServo
 2295               		.type	setCamPanServo, @function
 2296               	setCamPanServo:
 2297               		.stabd	46,0,0
 469:cmdlinetest.c **** }
 470:cmdlinetest.c **** 
 471:cmdlinetest.c **** void setCamPanServo(void)
 472:cmdlinetest.c **** {
 2298               		.stabn	68,0,472,.LM222-setCamPanServo
 2299               	.LM222:
 2300               	/* prologue: frame size=0 */
 2301               	/* prologue end (size=0) */
 473:cmdlinetest.c **** 	int rawPan;
 474:cmdlinetest.c **** 	
 475:cmdlinetest.c **** 	rawPan = cmdlineGetArgInt(1);
 2302               		.stabn	68,0,475,.LM223-setCamPanServo
 2303               	.LM223:
 2304 0a18 81E0      		ldi r24,lo8(1)
 2305 0a1a 0E94 0000 		call cmdlineGetArgInt
 476:cmdlinetest.c **** 	
 477:cmdlinetest.c **** 	if( (0<= rawPan) && (rawPan <= 2) )
 2306               		.stabn	68,0,477,.LM224-setCamPanServo
 2307               	.LM224:
 2308 0a1e 6330      		cpi r22,3
 2309 0a20 7105      		cpc r23,__zero_reg__
 2310 0a22 80F4      		brsh .L118
 478:cmdlinetest.c **** 	{
 479:cmdlinetest.c **** 		camPanServoPos = camPanServoPos + (rawPan - 1);
 2311               		.stabn	68,0,479,.LM225-setCamPanServo
 2312               	.LM225:
 2313 0a24 8091 0000 		lds r24,camPanServoPos
 2314 0a28 860F      		add r24,r22
 2315 0a2a 8150      		subi r24,lo8(-(-1))
 2316 0a2c 8093 0000 		sts camPanServoPos,r24
 480:cmdlinetest.c **** 		if(camPanServoPos < 1) camPanServoPos = 1;
 2317               		.stabn	68,0,480,.LM226-setCamPanServo
 2318               	.LM226:
 2319 0a30 8823      		tst r24
 2320 0a32 19F4      		brne .L116
 2321 0a34 81E0      		ldi r24,lo8(1)
 2322 0a36 8093 0000 		sts camPanServoPos,r24
 2323               	.L116:
 481:cmdlinetest.c **** 		if(camPanServoPos > 255) camPanServoPos = 255;
 482:cmdlinetest.c **** 	
 483:cmdlinetest.c **** 		servoSetPosition(CAM_PAN_SERVO_CHAN, (char)camPanServoPos);
 2324               		.stabn	68,0,483,.LM227-setCamPanServo
 2325               	.LM227:
 2326 0a3a 6091 0000 		lds r22,camPanServoPos
 2327 0a3e 81E0      		ldi r24,lo8(1)
 2328 0a40 0E94 0000 		call servoSetPosition
 2329               	.L118:
 2330 0a44 0895      		ret
 2331               	/* epilogue: frame size=0 */
 2332               	/* epilogue: noreturn */
 2333               	/* epilogue end (size=0) */
 2334               	/* function setCamPanServo size 23 (23) */
GAS LISTING /var/tmp//ccsuTKi5.s 			page 57


 2335               		.size	setCamPanServo, .-setCamPanServo
 2336               		.stabs	"rawPan:r(0,1)",64,0,473,22
 2337               		.stabn	192,0,0,setCamPanServo-setCamPanServo
 2338               		.stabn	224,0,0,.Lscope32-setCamPanServo
 2339               	.Lscope32:
 2340               		.stabs	"",36,0,0,.Lscope32-setCamPanServo
 2341               		.stabd	78,0,0
 2342               		.stabs	"setCamTiltServo:F(0,15)",36,0,492,setCamTiltServo
 2343               	.global	setCamTiltServo
 2344               		.type	setCamTiltServo, @function
 2345               	setCamTiltServo:
 2346               		.stabd	46,0,0
 484:cmdlinetest.c **** #ifdef DEBUG
 485:cmdlinetest.c **** 			rprintf("e0\r\n");
 486:cmdlinetest.c **** #endif DEBUG
 487:cmdlinetest.c **** 
 488:cmdlinetest.c **** 	}
 489:cmdlinetest.c **** }
 490:cmdlinetest.c **** 
 491:cmdlinetest.c **** void setCamTiltServo(void)
 492:cmdlinetest.c **** {
 2347               		.stabn	68,0,492,.LM228-setCamTiltServo
 2348               	.LM228:
 2349               	/* prologue: frame size=0 */
 2350               	/* prologue end (size=0) */
 493:cmdlinetest.c **** 	int rawTilt;
 494:cmdlinetest.c **** 	
 495:cmdlinetest.c **** 	rawTilt = cmdlineGetArgInt(1);
 2351               		.stabn	68,0,495,.LM229-setCamTiltServo
 2352               	.LM229:
 2353 0a46 81E0      		ldi r24,lo8(1)
 2354 0a48 0E94 0000 		call cmdlineGetArgInt
 496:cmdlinetest.c **** 	if(( 0 <= rawTilt) && (rawTilt <= 2) )
 2355               		.stabn	68,0,496,.LM230-setCamTiltServo
 2356               	.LM230:
 2357 0a4c 6330      		cpi r22,3
 2358 0a4e 7105      		cpc r23,__zero_reg__
 2359 0a50 80F4      		brsh .L124
 497:cmdlinetest.c **** 	{
 498:cmdlinetest.c **** 		camTiltServoPos = camTiltServoPos + (rawTilt - 1);
 2360               		.stabn	68,0,498,.LM231-setCamTiltServo
 2361               	.LM231:
 2362 0a52 8091 0000 		lds r24,camTiltServoPos
 2363 0a56 860F      		add r24,r22
 2364 0a58 8150      		subi r24,lo8(-(-1))
 2365 0a5a 8093 0000 		sts camTiltServoPos,r24
 499:cmdlinetest.c **** 		if(camTiltServoPos < 1) camTiltServoPos = 1;
 2366               		.stabn	68,0,499,.LM232-setCamTiltServo
 2367               	.LM232:
 2368 0a5e 8823      		tst r24
 2369 0a60 19F4      		brne .L122
 2370 0a62 81E0      		ldi r24,lo8(1)
 2371 0a64 8093 0000 		sts camTiltServoPos,r24
 2372               	.L122:
 500:cmdlinetest.c **** 		if(camTiltServoPos > 255) camTiltServoPos = 255;
 501:cmdlinetest.c **** 	
 502:cmdlinetest.c **** 		servoSetPosition(CAM_TILT_SERVO_CHAN, (char)camTiltServoPos);
GAS LISTING /var/tmp//ccsuTKi5.s 			page 58


 2373               		.stabn	68,0,502,.LM233-setCamTiltServo
 2374               	.LM233:
 2375 0a68 6091 0000 		lds r22,camTiltServoPos
 2376 0a6c 82E0      		ldi r24,lo8(2)
 2377 0a6e 0E94 0000 		call servoSetPosition
 2378               	.L124:
 2379 0a72 0895      		ret
 2380               	/* epilogue: frame size=0 */
 2381               	/* epilogue: noreturn */
 2382               	/* epilogue end (size=0) */
 2383               	/* function setCamTiltServo size 23 (23) */
 2384               		.size	setCamTiltServo, .-setCamTiltServo
 2385               		.stabs	"rawTilt:r(0,1)",64,0,493,22
 2386               		.stabn	192,0,0,setCamTiltServo-setCamTiltServo
 2387               		.stabn	224,0,0,.Lscope33-setCamTiltServo
 2388               	.Lscope33:
 2389               		.stabs	"",36,0,0,.Lscope33-setCamTiltServo
 2390               		.stabd	78,0,0
 2391               		.stabs	"setGeckoFreq:F(0,15)",36,0,511,setGeckoFreq
 2392               	.global	setGeckoFreq
 2393               		.type	setGeckoFreq, @function
 2394               	setGeckoFreq:
 2395               		.stabd	46,0,0
 503:cmdlinetest.c **** #ifdef DEBUG	
 504:cmdlinetest.c **** 			rprintf("e0\r\n");
 505:cmdlinetest.c **** #endif DEBUG
 506:cmdlinetest.c **** 
 507:cmdlinetest.c **** 	}
 508:cmdlinetest.c **** }
 509:cmdlinetest.c **** 
 510:cmdlinetest.c **** void setGeckoFreq(void)
 511:cmdlinetest.c **** {
 2396               		.stabn	68,0,511,.LM234-setGeckoFreq
 2397               	.LM234:
 2398               	/* prologue: frame size=0 */
 2399               	/* prologue end (size=0) */
 512:cmdlinetest.c **** 	pulseT1BSetFreq((u16) cmdlineGetArgInt(1));
 2400               		.stabn	68,0,512,.LM235-setGeckoFreq
 2401               	.LM235:
 2402 0a74 81E0      		ldi r24,lo8(1)
 2403 0a76 0E94 0000 		call cmdlineGetArgInt
 2404 0a7a DC01      		movw r26,r24
 2405 0a7c CB01      		movw r24,r22
 2406 0a7e 0E94 0000 		call pulseT1BSetFreq
 513:cmdlinetest.c **** 	multiplier = cmdlineGetArgInt(2);
 2407               		.stabn	68,0,513,.LM236-setGeckoFreq
 2408               	.LM236:
 2409 0a82 82E0      		ldi r24,lo8(2)
 2410 0a84 0E94 0000 		call cmdlineGetArgInt
 2411 0a88 7093 0000 		sts (multiplier)+1,r23
 2412 0a8c 6093 0000 		sts multiplier,r22
 2413               	/* epilogue: frame size=0 */
 2414 0a90 0895      		ret
 2415               	/* epilogue end (size=1) */
 2416               	/* function setGeckoFreq size 15 (14) */
 2417               		.size	setGeckoFreq, .-setGeckoFreq
 2418               	.Lscope34:
GAS LISTING /var/tmp//ccsuTKi5.s 			page 59


 2419               		.stabs	"",36,0,0,.Lscope34-setGeckoFreq
 2420               		.stabd	78,0,0
 2421               		.stabs	"PulseT1AMode:S(0,20)=B(0,11)",40,0,31,PulseT1AMode
 2422               		.stabs	"PulseT1ACount:S(0,21)=B(0,9)",40,0,32,PulseT1ACount
 2423               		.stabs	"PulseT1APeriodTics:S(0,21)",40,0,33,PulseT1APeriodTics
 2424               		.stabs	"PulseT1BMode:S(0,20)",40,0,34,PulseT1BMode
 2425               		.stabs	"PulseT1BCount:S(0,21)",40,0,35,PulseT1BCount
 2426               		.stabs	"PulseT1BPeriodTics:S(0,21)",40,0,36,PulseT1BPeriodTics
 2427               		.stabs	"Pulse_Position:S(0,22)=B(0,3)",40,0,37,Pulse_Position
 2428               		.stabs	"slaveBuffer:G(0,23)=ar(0,18);0;32;(6,1)",32,0,73,0
 2429               		.stabs	"slaveBufferLength:G(6,1)",32,0,74,0
 2430               		.stabs	"masterBuffer:G(0,24)=ar(0,18);0;28;(0,11)",32,0,76,0
 2431               		.stabs	"masterBufferLength:G(0,11)",32,0,77,0
 2432               		.stabs	"Run:G(6,1)",32,0,79,0
 2433               		.stabs	"leftServoPos:G(6,1)",32,0,87,0
 2434               		.stabs	"multiplier:G(6,3)",32,0,89,0
 2435               		.stabs	"rightServoPos:G(6,1)",32,0,91,0
 2436               		.stabs	"throttleServoPos:G(6,1)",32,0,92,0
 2437               		.stabs	"camPanServoPos:G(6,1)",32,0,93,0
 2438               		.stabs	"camTiltServoPos:G(6,1)",32,0,94,0
 2439               		.stabs	"numTimesThrough:G(0,3)",32,0,96,0
 2440               		.comm camTiltServoPos,1,1
 2441               		.comm camPanServoPos,1,1
 2442               		.comm throttleServoPos,1,1
 2443               		.comm rightServoPos,1,1
 2444               		.comm Run,1,1
 2445               		.lcomm Pulse_Position,4
 2446               		.lcomm PulseT1BPeriodTics,2
 2447               		.lcomm PulseT1BCount,2
 2448               		.lcomm PulseT1BMode,1
 2449               		.lcomm PulseT1APeriodTics,2
 2450               		.lcomm PulseT1ACount,2
 2451               		.lcomm PulseT1AMode,1
 2452               		.stabs	"",100,0,0,.Letext0
 2453               	.Letext0:
 2454               	/* File "cmdlinetest.c": code 1353 = 0x0549 (1167), prologues  83, epilogues 103 */
GAS LISTING /var/tmp//ccsuTKi5.s 			page 60


DEFINED SYMBOLS
                            *ABS*:00000000 cmdlinetest.c
/var/tmp//ccsuTKi5.s:3      *ABS*:0000003f __SREG__
/var/tmp//ccsuTKi5.s:4      *ABS*:0000003e __SP_H__
/var/tmp//ccsuTKi5.s:5      *ABS*:0000003d __SP_L__
/var/tmp//ccsuTKi5.s:6      *ABS*:00000000 __tmp_reg__
/var/tmp//ccsuTKi5.s:7      *ABS*:00000001 __zero_reg__
/var/tmp//ccsuTKi5.s:131    .bss:00000000 numTimesThrough
/var/tmp//ccsuTKi5.s:137    .data:00000000 multiplier
/var/tmp//ccsuTKi5.s:142    .data:00000002 leftServoPos
/var/tmp//ccsuTKi5.s:147    .data:00000003 masterBufferLength
/var/tmp//ccsuTKi5.s:152    .data:00000004 masterBuffer
/var/tmp//ccsuTKi5.s:157    .data:00000021 slaveBufferLength
/var/tmp//ccsuTKi5.s:162    .data:00000022 slaveBuffer
/var/tmp//ccsuTKi5.s:168    .text:00000000 pulseT1Init
/var/tmp//ccsuTKi5.s:2450   .bss:00000011 PulseT1AMode
/var/tmp//ccsuTKi5.s:2447   .bss:0000000c PulseT1BMode
/var/tmp//ccsuTKi5.s:2449   .bss:0000000f PulseT1ACount
/var/tmp//ccsuTKi5.s:2446   .bss:0000000a PulseT1BCount
/var/tmp//ccsuTKi5.s:2448   .bss:0000000d PulseT1APeriodTics
/var/tmp//ccsuTKi5.s:2445   .bss:00000008 PulseT1BPeriodTics
/var/tmp//ccsuTKi5.s:717    .text:00000270 pulseT1BService
/var/tmp//ccsuTKi5.s:220    .text:0000003c pulseInit
                             .bss:00000004 Pulse_Position
/var/tmp//ccsuTKi5.s:246    .text:00000052 pulseT1Off
/var/tmp//ccsuTKi5.s:300    .text:00000088 pulseT1ASetFreq
/var/tmp//ccsuTKi5.s:352    .text:000000d4 pulseT1BSetFreq
/var/tmp//ccsuTKi5.s:404    .text:00000120 pulseT1ARun
/var/tmp//ccsuTKi5.s:477    .text:0000017c pulseT1BRun
/var/tmp//ccsuTKi5.s:549    .text:000001d8 pulseT1AStop
/var/tmp//ccsuTKi5.s:575    .text:000001ec pulseT1BStop
/var/tmp//ccsuTKi5.s:601    .text:00000200 pulseT1ARemaining
/var/tmp//ccsuTKi5.s:627    .text:00000210 pulseT1BRemaining
/var/tmp//ccsuTKi5.s:653    .text:00000220 pulseT1AService
/var/tmp//ccsuTKi5.s:810    .progmem.data:00000000 __c.1861
/var/tmp//ccsuTKi5.s:814    .progmem.data:00000012 __c.1856
/var/tmp//ccsuTKi5.s:818    .progmem.data:00000023 __c.1851
/var/tmp//ccsuTKi5.s:847    .text:00000302 goCmdline
/var/tmp//ccsuTKi5.s:2134   .text:00000966 setLeftServo
/var/tmp//ccsuTKi5.s:2219   .text:000009dc setRightServo
/var/tmp//ccsuTKi5.s:2245   .text:000009ee setThrottleServo
/var/tmp//ccsuTKi5.s:2296   .text:00000a18 setCamPanServo
/var/tmp//ccsuTKi5.s:2345   .text:00000a46 setCamTiltServo
/var/tmp//ccsuTKi5.s:2271   .text:00000a00 setFeedbackInterval
/var/tmp//ccsuTKi5.s:2394   .text:00000a74 setGeckoFreq
/var/tmp//ccsuTKi5.s:1885   .text:0000083a i2cMaster_Send
/var/tmp//ccsuTKi5.s:2002   .text:000008be i2cMaster_Receive
/var/tmp//ccsuTKi5.s:1218   .text:000004dc dumpArgsStr
/var/tmp//ccsuTKi5.s:1307   .text:00000554 dumpArgsInt
                            *COM*:00000001 Run
/var/tmp//ccsuTKi5.s:1080   .text:00000470 exitFunction
/var/tmp//ccsuTKi5.s:1100   .progmem.data:0000004f __c.1881
/var/tmp//ccsuTKi5.s:1104   .progmem.data:00000085 __c.1879
/var/tmp//ccsuTKi5.s:1108   .progmem.data:000000bf __c.1877
/var/tmp//ccsuTKi5.s:1112   .progmem.data:000000f0 __c.1875
/var/tmp//ccsuTKi5.s:1116   .progmem.data:0000011a __c.1873
/var/tmp//ccsuTKi5.s:1122   .text:00000476 helpFunction
GAS LISTING /var/tmp//ccsuTKi5.s 			page 61


/var/tmp//ccsuTKi5.s:1196   .progmem.data:00000134 __c.1894
/var/tmp//ccsuTKi5.s:1200   .progmem.data:0000013b __c.1892
/var/tmp//ccsuTKi5.s:1204   .progmem.data:00000142 __c.1890
/var/tmp//ccsuTKi5.s:1208   .progmem.data:00000149 __c.1888
/var/tmp//ccsuTKi5.s:1212   .progmem.data:00000150 __c.1886
/var/tmp//ccsuTKi5.s:1289   .progmem.data:0000016c __c.1913
/var/tmp//ccsuTKi5.s:1293   .progmem.data:0000017a __c.1911
/var/tmp//ccsuTKi5.s:1297   .progmem.data:00000188 __c.1909
/var/tmp//ccsuTKi5.s:1301   .progmem.data:00000196 __c.1907
/var/tmp//ccsuTKi5.s:1412   .progmem.data:000001b3 __c.1927
/var/tmp//ccsuTKi5.s:1416   .progmem.data:000001c1 __c.1925
/var/tmp//ccsuTKi5.s:1420   .progmem.data:000001cf __c.1923
/var/tmp//ccsuTKi5.s:1424   .progmem.data:000001dd __c.1921
/var/tmp//ccsuTKi5.s:1430   .text:0000060c dumpArgsHex
/var/tmp//ccsuTKi5.s:1535   .text:000006c4 i2cSetup
/var/tmp//ccsuTKi5.s:1707   .text:00000790 i2cSlaveReceiveService
/var/tmp//ccsuTKi5.s:1753   .text:000007b4 i2cSlaveTransmitService
/var/tmp//ccsuTKi5.s:1570   .progmem.data:000001fe __c.1837
/var/tmp//ccsuTKi5.s:1576   .text:000006e2 main
/var/tmp//ccsuTKi5.s:1806   .text:000007e0 i2cMasterSendDiag
/var/tmp//ccsuTKi5.s:1944   .text:00000886 i2cMaster_Auto_Send
/var/tmp//ccsuTKi5.s:1996   .progmem.data:00000235 __c.2000
/var/tmp//ccsuTKi5.s:2079   .progmem.data:00000237 __c.2010
/var/tmp//ccsuTKi5.s:2086   .text:0000092c i2cMaster_Auto_Receive
                            *COM*:00000001 rightServoPos
                            *COM*:00000001 throttleServoPos
                            *COM*:00000001 camPanServoPos
                            *COM*:00000001 camTiltServoPos

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
timer1PWMOff
timerAttach
timerDetach
timer1GetPrescaler
__mulsi3
__udivmodsi4
vt100ClearScreen
vt100SetCursorPos
rprintfProgStr
cmdlineInit
uartSendByte
cmdlineSetOutputFunc
cmdlineAddCommand
cmdlineInputFunc
uartReceiveByte
cmdlineMainLoop
rprintf1RamRom
rprintfCRLF
cmdlineGetArgStr
rprintfStr
cmdlineGetArgInt
rprintfNum
cmdlineGetArgHex
i2cInit
i2cSetLocalDeviceAddr
GAS LISTING /var/tmp//ccsuTKi5.s 			page 62


i2cSetSlaveReceiveHandler
i2cSetSlaveTransmitHandler
__stack
uartInit
uartSetBaudRate
rprintfInit
a2dInit
timerInit
vt100Init
timerPause
servoInit
servoSetChannelIO
exit
i2cSendStart
i2cWaitForComplete
i2cSendByte
i2cSendStop
strcpy
i2cMasterSend
i2cMasterReceive
servoSetPosition
