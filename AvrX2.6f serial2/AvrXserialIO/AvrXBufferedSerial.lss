
AvrXBufferedSerial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001262  00000000  00000000  00000094  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00001262  000012f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000db  0080006a  0080006a  00001300  2**2
                  ALLOC
  3 .noinit       00000000  00800145  00800145  00001300  2**0
                  CONTENTS
  4 .eeprom       00000000  00810000  00810000  00001300  2**0
                  CONTENTS
  5 .stab         00004b48  00000000  00000000  00001300  2**2
                  CONTENTS, READONLY, DEBUGGING
  6 .stabstr      00002594  00000000  00000000  00005e48  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4d 00 	jmp	0x9a
       4:	0c 94 68 00 	jmp	0xd0
       8:	0c 94 68 00 	jmp	0xd0
       c:	0c 94 68 00 	jmp	0xd0
      10:	0c 94 68 00 	jmp	0xd0
      14:	0c 94 68 00 	jmp	0xd0
      18:	0c 94 68 00 	jmp	0xd0
      1c:	0c 94 68 00 	jmp	0xd0
      20:	0c 94 68 00 	jmp	0xd0
      24:	0c 94 68 00 	jmp	0xd0
      28:	0c 94 68 00 	jmp	0xd0
      2c:	0c 94 6a 00 	jmp	0xd4
      30:	0c 94 68 00 	jmp	0xd0
      34:	0c 94 82 01 	jmp	0x304
      38:	0c 94 8e 01 	jmp	0x31c
      3c:	0c 94 68 00 	jmp	0xd0
      40:	0c 94 68 00 	jmp	0xd0
      44:	0c 94 68 00 	jmp	0xd0
      48:	0c 94 68 00 	jmp	0xd0
      4c:	0c 94 68 00 	jmp	0xd0
      50:	0c 94 68 00 	jmp	0xd0

00000054 <__ctors_end>:
      54:	de 00       	.word	0x00de	; ????
      56:	9f 00       	.word	0x009f	; ????
      58:	6a 00       	.word	0x006a	; ????
      5a:	01 54       	subi	r16, 0x41	; 65

0000005b <__c.0>:
      5b:	54 79 70 65 20 73 6f 6d 65 74 68 69 6e 67 20 77     Type something w
      6b:	69 74 68 69 6e 20 35 20 73 65 63 6f 6e 64 73 0d     ithin 5 seconds.
	...

0000007c <__c.1>:
      7c:	59 6f 75 20 74 79 70 65 64 20 69 6e 20 22 00        You typed in ".

0000008b <__c.2>:
      8b:	54 72 79 20 61 67 61 69 6e 2e 2e 2e 20 00 00        Try again... ..

0000009a <__init>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf e5       	ldi	r28, 0x5F	; 95
      a0:	d8 e0       	ldi	r29, 0x08	; 8
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_copy_data>:
      a6:	10 e0       	ldi	r17, 0x00	; 0
      a8:	a0 e6       	ldi	r26, 0x60	; 96
      aa:	b0 e0       	ldi	r27, 0x00	; 0
      ac:	e2 e6       	ldi	r30, 0x62	; 98
      ae:	f2 e1       	ldi	r31, 0x12	; 18
      b0:	02 c0       	rjmp	.+4      	; 0xb6

000000b2 <.do_copy_data_loop>:
      b2:	05 90       	lpm	r0, Z+
      b4:	0d 92       	st	X+, r0

000000b6 <.do_copy_data_start>:
      b6:	aa 36       	cpi	r26, 0x6A	; 106
      b8:	b1 07       	cpc	r27, r17
      ba:	d9 f7       	brne	.-10     	; 0xb2

000000bc <__do_clear_bss>:
      bc:	11 e0       	ldi	r17, 0x01	; 1
      be:	aa e6       	ldi	r26, 0x6A	; 106
      c0:	b0 e0       	ldi	r27, 0x00	; 0
      c2:	01 c0       	rjmp	.+2      	; 0xc6

000000c4 <.do_clear_bss_loop>:
      c4:	1d 92       	st	X+, r1

000000c6 <.do_clear_bss_start>:
      c6:	a5 34       	cpi	r26, 0x45	; 69
      c8:	b1 07       	cpc	r27, r17
      ca:	e1 f7       	brne	.-8      	; 0xc4
      cc:	0c 94 37 01 	jmp	0x26e

000000d0 <__bad_interrupt>:
      d0:	0c 94 00 00 	jmp	0x0

000000d4 <__vector_11>:
 . switch back to interrupted context.
 */
AVRX_SIGINT(SIG_OVERFLOW0)
{
    IntProlog();                // Switch to kernel stack/context
      d4:	0e 94 1a 07 	call	0xe34
    TCNT0 += TCNT0_INIT;		// Add to pre-load to account for any missed clocks
      d8:	82 b7       	in	r24, 0x32	; 50
      da:	8f 53       	subi	r24, 0x3F	; 63
      dc:	82 bf       	out	0x32, r24	; 50
    AvrXTimerHandler();         // Call Time queue manager
      de:	0e 94 b4 08 	call	0x1168
    Epilog();                   // Return to tasks
      e2:	0e 94 66 07 	call	0xecc

000000e6 <myputs>:
}

// Super simple string printers...

// PutString from RAM
void myputs(int (*putch)(char), const uint8_t * psz)
{
      e6:	0f 93       	push	r16
      e8:	1f 93       	push	r17
      ea:	cf 93       	push	r28
      ec:	df 93       	push	r29
      ee:	8c 01       	movw	r16, r24
      f0:	eb 01       	movw	r28, r22
	while (*psz != 0)
		(*putch)(*psz++);
      f2:	88 81       	ld	r24, Y
      f4:	88 23       	and	r24, r24
      f6:	31 f0       	breq	.+12     	; 0x104
      f8:	89 91       	ld	r24, Y+
      fa:	f8 01       	movw	r30, r16
      fc:	09 95       	icall
      fe:	88 81       	ld	r24, Y
     100:	88 23       	and	r24, r24
     102:	d1 f7       	brne	.-12     	; 0xf8
     104:	df 91       	pop	r29
     106:	cf 91       	pop	r28
     108:	1f 91       	pop	r17
     10a:	0f 91       	pop	r16
     10c:	08 95       	ret

0000010e <myputs_P>:
}

// PutString from FLASH
void myputs_P(int (*putch)(char), const uint8_t * psz)
{
     10e:	0f 93       	push	r16
     110:	1f 93       	push	r17
     112:	cf 93       	push	r28
     114:	df 93       	push	r29
     116:	8c 01       	movw	r16, r24
     118:	eb 01       	movw	r28, r22
	while (__LPM(psz) != 0)
		(*putch)(__LPM(psz++));
     11a:	fb 01       	movw	r30, r22
     11c:	84 91       	lpm	r24, Z
     11e:	88 23       	and	r24, r24
     120:	49 f0       	breq	.+18     	; 0x134
     122:	fe 01       	movw	r30, r28
     124:	21 96       	adiw	r28, 0x01	; 1
     126:	84 91       	lpm	r24, Z
     128:	f8 01       	movw	r30, r16
     12a:	09 95       	icall
     12c:	fe 01       	movw	r30, r28
     12e:	84 91       	lpm	r24, Z
     130:	88 23       	and	r24, r24
     132:	b9 f7       	brne	.-18     	; 0x122
     134:	df 91       	pop	r29
     136:	cf 91       	pop	r28
     138:	1f 91       	pop	r17
     13a:	0f 91       	pop	r16
     13c:	08 95       	ret

0000013e <task0>:
}

#if (USART_CHANNELS & CHANNEL_0)

// This task uses GCC Libc stdio facility and needs an additional 60-80 bytes of stack
// for processing the strings.  Longer strings probably need more stack.

AVRX_GCC_TASKDEF(task0, 76, 1)
{
     13e:	cf 93       	push	r28
     140:	df 93       	push	r29
     142:	cd b7       	in	r28, 0x3d	; 61
     144:	de b7       	in	r29, 0x3e	; 62
     146:	26 97       	sbiw	r28, 0x06	; 6
     148:	0f b6       	in	r0, 0x3f	; 63
     14a:	f8 94       	cli
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	0f be       	out	0x3f, r0	; 63
     150:	cd bf       	out	0x3d, r28	; 61
	TimerControlBlock timer;

//	InitSerial0(BAUD(115200));	// Note: this only works with 12mhz or baud rate crystal
	InitSerial0(BAUD(57600));
     152:	81 e2       	ldi	r24, 0x21	; 33
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	0e 94 4e 01 	call	0x29c
    fdevopen(put_char0, get_c0, 0);		// Set up standard I/O
     15a:	40 e0       	ldi	r20, 0x00	; 0
     15c:	50 e0       	ldi	r21, 0x00	; 0
     15e:	68 e7       	ldi	r22, 0x78	; 120
     160:	71 e0       	ldi	r23, 0x01	; 1
     162:	8f e6       	ldi	r24, 0x6F	; 111
     164:	91 e0       	ldi	r25, 0x01	; 1
     166:	0e 94 2c 02 	call	0x458
	while(1)
	{
		int c;
		BOOL bGotACharacter = FALSE;
     16a:	ff 24       	eor	r15, r15

		printf_P(PSTR("Type something within 5 seconds\r"));
     16c:	8b e5       	ldi	r24, 0x5B	; 91
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	9f 93       	push	r25
     172:	8f 93       	push	r24
     174:	0e 94 e5 02 	call	0x5ca
		AvrXDelay(&timer, 5*1000);
     178:	68 e8       	ldi	r22, 0x88	; 136
     17a:	73 e1       	ldi	r23, 0x13	; 19
     17c:	ce 01       	movw	r24, r28
     17e:	01 96       	adiw	r24, 0x01	; 1
     180:	0e 94 86 08 	call	0x110c
#if 0		// Alternate code to determine when something was typed in.
		if ((c = AvrXStatFifo(Rx0Buf)))
		{
			bGotACharacter = TRUE;
			printf_P(PSTR("You typed in %d char: \""), c);
			while ((c = getchar()) >= 0)
				putchar(c);
		}
#else
		while ((c = getchar()) != EOF)
     184:	0f 90       	pop	r0
     186:	0f 90       	pop	r0
     188:	2b c0       	rjmp	.+86     	; 0x1e0
		{
			if (!bGotACharacter)
     18a:	ff 20       	and	r15, r15
     18c:	11 f5       	brne	.+68     	; 0x1d2
			{
				printf_P(PSTR("You typed in \""));
     18e:	8c e7       	ldi	r24, 0x7C	; 124
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	9f 93       	push	r25
     194:	8f 93       	push	r24
     196:	0e 94 e5 02 	call	0x5ca
				putchar('"'),putchar('\r'),putchar('\n');  
     19a:	60 91 3d 01 	lds	r22, 0x013D
     19e:	70 91 3e 01 	lds	r23, 0x013E
     1a2:	82 e2       	ldi	r24, 0x22	; 34
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	0e 94 b2 02 	call	0x564
     1aa:	60 91 3d 01 	lds	r22, 0x013D
     1ae:	70 91 3e 01 	lds	r23, 0x013E
     1b2:	8d e0       	ldi	r24, 0x0D	; 13
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	0e 94 b2 02 	call	0x564
     1ba:	60 91 3d 01 	lds	r22, 0x013D
     1be:	70 91 3e 01 	lds	r23, 0x013E
     1c2:	8a e0       	ldi	r24, 0x0A	; 10
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	0e 94 b2 02 	call	0x564
				bGotACharacter = TRUE;
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	f8 2e       	mov	r15, r24
     1ce:	0f 90       	pop	r0
     1d0:	0f 90       	pop	r0
			}
			putchar(c);
     1d2:	60 91 3d 01 	lds	r22, 0x013D
     1d6:	70 91 3e 01 	lds	r23, 0x013E
     1da:	c8 01       	movw	r24, r16
     1dc:	0e 94 b2 02 	call	0x564
     1e0:	80 91 3b 01 	lds	r24, 0x013B
     1e4:	90 91 3c 01 	lds	r25, 0x013C
     1e8:	0e 94 75 02 	call	0x4ea
     1ec:	8c 01       	movw	r16, r24
     1ee:	8f ef       	ldi	r24, 0xFF	; 255
     1f0:	0f 3f       	cpi	r16, 0xFF	; 255
     1f2:	18 07       	cpc	r17, r24
     1f4:	51 f6       	brne	.-108    	; 0x18a
		}
#endif
		if (!bGotACharacter)
     1f6:	ff 20       	and	r15, r15
     1f8:	09 f5       	brne	.+66     	; 0x23c
		{
			printf_P(PSTR("Try again... "));
     1fa:	8b e8       	ldi	r24, 0x8B	; 139
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	9f 93       	push	r25
     200:	8f 93       	push	r24
     202:	0e 94 e5 02 	call	0x5ca
			putchar('"'),putchar('\r'),putchar('\n');
     206:	60 91 3d 01 	lds	r22, 0x013D
     20a:	70 91 3e 01 	lds	r23, 0x013E
     20e:	82 e2       	ldi	r24, 0x22	; 34
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	0e 94 b2 02 	call	0x564
     216:	60 91 3d 01 	lds	r22, 0x013D
     21a:	70 91 3e 01 	lds	r23, 0x013E
     21e:	8d e0       	ldi	r24, 0x0D	; 13
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	0e 94 b2 02 	call	0x564
     226:	60 91 3d 01 	lds	r22, 0x013D
     22a:	70 91 3e 01 	lds	r23, 0x013E
     22e:	8a e0       	ldi	r24, 0x0A	; 10
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	0e 94 b2 02 	call	0x564
     236:	0f 90       	pop	r0
     238:	0f 90       	pop	r0
     23a:	97 cf       	rjmp	.-210    	; 0x16a
		}  
		else
			putchar('"'),putchar('\r'),putchar('\n');
     23c:	60 91 3d 01 	lds	r22, 0x013D
     240:	70 91 3e 01 	lds	r23, 0x013E
     244:	82 e2       	ldi	r24, 0x22	; 34
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 b2 02 	call	0x564
     24c:	60 91 3d 01 	lds	r22, 0x013D
     250:	70 91 3e 01 	lds	r23, 0x013E
     254:	8d e0       	ldi	r24, 0x0D	; 13
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	0e 94 b2 02 	call	0x564
     25c:	60 91 3d 01 	lds	r22, 0x013D
     260:	70 91 3e 01 	lds	r23, 0x013E
     264:	8a e0       	ldi	r24, 0x0A	; 10
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	0e 94 b2 02 	call	0x564
     26c:	7e cf       	rjmp	.-260    	; 0x16a

0000026e <main>:
	}
}
#endif // USART_CHANNELS & CHANNEL_0

#if USART_CHANNELS & CHANNEL_1

// This task uses simplified string handlers and only needs a little extra
// stack for the timer & normal call-return stuff.  Note: Buffered I/O routines
// need more stack (this is sufficient for buffered, but not stdio!).

AVRX_GCC_TASKDEF(task1, 40, 1)
{
	TimerControlBlock timer;

//	InitSerial1(BAUD(115200));	// Note: this only works with 12mhz or baud rate crystal
	InitSerial1(BAUD(57600));
	while(1)
	{
		int c;
		BOOL bGotACharacter = FALSE;

		myputs_P(put_char1, PSTR("Type something within 5 seconds\r"));
		AvrXDelay(&timer, 4*1000);
		while ((c = get_c1()) != EOF)
		{
			if (!bGotACharacter)
			{
				myputs_P(put_char1, PSTR("You typed in \""));
				bGotACharacter = TRUE;
			}
			put_char1(c);
		}

		if (!bGotACharacter)
		{
			myputs_P(put_char1, PSTR("Try again... "));
			myputs(put_char1, "\"\r");
 			 myputs(put_char1, "\"\n"); 
		}
		else
		{
			myputs(put_char1, "\"\r");		// Example of non-FLASH string..
			 myputs(put_char1, "\"\n");
		} 
	}
}
#endif // USART_CHANNELS & CHANNEL_1

int main(void)
{
     26e:	cf e5       	ldi	r28, 0x5F	; 95
     270:	d8 e0       	ldi	r29, 0x08	; 8
     272:	de bf       	out	0x3e, r29	; 62
     274:	cd bf       	out	0x3d, r28	; 61
    AvrXSetKernelStack(0);
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	0e 94 9f 07 	call	0xf3e

	MCUCR = _BV(SE);
     27e:	80 e8       	ldi	r24, 0x80	; 128
     280:	85 bf       	out	0x35, r24	; 53
	TCNT0 = TCNT0_INIT;
     282:	81 ec       	ldi	r24, 0xC1	; 193
     284:	82 bf       	out	0x32, r24	; 50
#if defined (__AVR_ATmega103__) || defined (__ATmega103__)
	TCCR0 =  ((1<<CS02) | (1<<CS01));
#elif defined (__AVR_ATmega128__) || defined (__ATmega128__) || defined (__AVR_ATmega64__) || defined (__ATmega64__)
	TCCR0 =  ((1<<CS2) | (1<<CS1));
#else	// Most other chips...  Note: some are TCCR0 and some are TCCR0B...
	TCCR0 =  (1<<CS02);
     286:	84 e0       	ldi	r24, 0x04	; 4
     288:	83 bf       	out	0x33, r24	; 51
#endif
	TIMSK = _BV(TOIE0);
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	89 bf       	out	0x39, r24	; 57

#if USART_CHANNELS & CHANNEL_1
	AvrXRunTask(TCB(task1));
#endif
#if USART_CHANNELS & CHANNEL_0
	AvrXRunTask(TCB(task0));
     28e:	84 e5       	ldi	r24, 0x54	; 84
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	0e 94 ab 07 	call	0xf56
#endif
	Epilog();
     296:	0e 94 66 07 	call	0xecc
	while(1);
     29a:	ff cf       	rjmp	.-2      	; 0x29a

0000029c <InitSerial0>:
AVRX_DECL_FIFO(Rx0Buf, RX0_BUFSZ);
AVRX_DECL_FIFO(Tx0Buf, TX0_BUFSZ);

void InitSerial0(uint16_t ubrr)
{
     29c:	1f 93       	push	r17
// Two USARTs, not shared
#if defined(__AVR_ATmega128__) || defined(__AVR_ATmega64__) | defined(__AVR_ATcan128__)
	UBRR0L = ubrr;
	UBRR0H = (uint8_t)(ubrr>>8);
	UCSR0A = (BAUDX == 8)?(1<<U2X):0;
	UCSR0B = ((1<<TXEN) | (1<<RXEN) | (1<<RXCIE));
	UCSR0C = ((1<<UCSZ1) | (1<<UCSZ0));

// Dual USART, old shared UCSRC & UBRRH
#elif defined(__AVR_ATmega162__) | defined(__AVR_ATmega161__)
	UBRR0L = ubrr;
	UBRR0H = (uint8_t)(ubrr>>8);
	UCSR0A = (BAUDX == 8)?(1<<U2X):0;
	UCSR0B = ((1<<TXEN) | (1<<RXEN) | (1<<RXCIE));
#	ifdef (__AVR_ATmega162__)
	UCSR0C = (1<<URSEL0) | (1<<UCSZ1) | (1<<UCSZ0));
#	endif

// One UART (note the missing C register)
#elif defined(__AVR_ATmega163__)
	UBRR   = ubrr;
	UBRRHI = (uint8_t)(ubrr>>8);
	UCSRA  = (BAUDX == 8)?(1<<U2X):0;
	UCSRB  = ((1<<TXEN) | (1<<RXEN) | (1<<RXCIE));

// One UART, (Classic)
#elif defined(__AVR_AT90S4414__) | defined(__AVR_AT90S8515__)| defined(__AVR_AT90S8535__)
	UBRR	= ubrr;
	UCR		= ((1<<TXEN) | (1<<RXEN) | (1<<RXCIE) | (1<<UDRIE));
#	define UCSRB UCR

// One USART, (C register shared)
#elif defined(__AVR_ATmega8__)   | defined(__AVR_ATmega16__)  | defined(__AVR_ATmega32__)  | \
	  defined(__AVR_ATmega323__) | defined(__AVR_ATmega8515__)| defined(__AVR_ATmega8535__)
	UBRRL = ubrr;
     29e:	89 b9       	out	0x09, r24	; 9
	UBRRH = (uint8_t)(ubrr>>8);
     2a0:	89 2f       	mov	r24, r25
     2a2:	99 27       	eor	r25, r25
     2a4:	80 bd       	out	0x20, r24	; 32
	UCSRA = (BAUDX == 8)?(1<<U2X):0;
     2a6:	82 e0       	ldi	r24, 0x02	; 2
     2a8:	8b b9       	out	0x0b, r24	; 11
	UCSRB = ((1<<TXEN) | (1<<RXEN) | (1<<RXCIE));
     2aa:	88 e9       	ldi	r24, 0x98	; 152
     2ac:	8a b9       	out	0x0a, r24	; 10
	UCSRC = ((1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0));
     2ae:	86 e8       	ldi	r24, 0x86	; 134
     2b0:	80 bd       	out	0x20, r24	; 32

// One USART, (C register not shared)
#elif defined(__AVR_ATmega169__) | defined(__AVR_ATmega165__) | defined(__AVR_IOtn2313__)
	UBRRL = ubrr;
	UBRRH = (uint8_t)(ubrr>>8);
	UCSRA = (BAUDX == 8)?(1<<U2X):0;
	UCSRB = ((1<<TXEN) | (1<<RXEN) | (1<<RXCIE));
	UCSRC = ((1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0));
#else
#   ERROR Dont know about that CPU!
#endif
#ifndef UCSRB
#   define UCSRB UCSR0B
#endif
#ifndef UDR
#	define UDR UDR0
#endif
	AVRX_INIT_FIFO(Rx0Buf);
     2b2:	86 e0       	ldi	r24, 0x06	; 6
     2b4:	91 e0       	ldi	r25, 0x01	; 1
     2b6:	0e 94 ff 01 	call	0x3fe
     2ba:	10 e2       	ldi	r17, 0x20	; 32
     2bc:	10 93 0c 01 	sts	0x010C, r17
	AVRX_INIT_FIFO(Tx0Buf);
     2c0:	8f ed       	ldi	r24, 0xDF	; 223
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	0e 94 ff 01 	call	0x3fe
     2c8:	10 93 e5 00 	sts	0x00E5, r17
     2cc:	1f 91       	pop	r17
     2ce:	08 95       	ret

000002d0 <put_c0>:
}

int put_c0(char c)	// Non blocking output
{
	int retc;
	retc = AvrXPutFifo(Tx0Buf, c);
     2d0:	68 2f       	mov	r22, r24
     2d2:	8f ed       	ldi	r24, 0xDF	; 223
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 9c 01 	call	0x338
	UCSRB |= (1<<UDRIE);
     2da:	55 9a       	sbi	0x0a, 5	; 10
     2dc:	08 95       	ret

000002de <put_char0>:
	return retc;
}

int put_char0( char c)	// Blocking output
{
	AvrXWaitPutFifo(Tx0Buf, c);
     2de:	68 2f       	mov	r22, r24
     2e0:	8f ed       	ldi	r24, 0xDF	; 223
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	0e 94 d9 01 	call	0x3b2
	UCSRB |= (1<<UDRIE);
     2e8:	55 9a       	sbi	0x0a, 5	; 10
	return 0;
}
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	08 95       	ret

000002f0 <get_c0>:


int get_c0(void)	// Non blocking, return status outside of char range
{
	int retc = AvrXPullFifo(Rx0Buf);
     2f0:	86 e0       	ldi	r24, 0x06	; 6
     2f2:	91 e0       	ldi	r25, 0x01	; 1
     2f4:	0e 94 b8 01 	call	0x370
     2f8:	08 95       	ret

000002fa <get_char0>:
	return retc;
}

int get_char0(void)	// Blocks waiting for something
{
	return AvrXWaitPullFifo(Rx0Buf);
     2fa:	86 e0       	ldi	r24, 0x06	; 6
     2fc:	91 e0       	ldi	r25, 0x01	; 1
     2fe:	0e 94 ee 01 	call	0x3dc
     302:	08 95       	ret

00000304 <__vector_13>:
}
// We don't care if the buffer is full.  Just signal we got one.
// The task may attempt one extra time to get data out of an empyt
// buffer (getc(), but so what.  Eventually it will block waiting
// for another character to be received.

#if defined(SIG_UART_RECV) && !defined(SIG_UART0_RECV)
#  define SIG_UART0_RECV SIG_UART_RECV		// This covers old single UART chips
#  define SIG_UART0_DATA SIG_UART_DATA
#endif

AVRX_SIGINT(SIG_UART0_RECV)
{
    IntProlog();
     304:	0e 94 1a 07 	call	0xe34
    UCSRB &= ~(1<<RXCIE);	// Disable Rx interrupt
     308:	57 98       	cbi	0x0a, 7	; 10
    sei();					// Allow other interrupt activity to occur
     30a:	78 94       	sei
	AvrXPutFifo(Rx0Buf, UDR);// This resets the Rx Interrupt
     30c:	6c b1       	in	r22, 0x0c	; 12
     30e:	86 e0       	ldi	r24, 0x06	; 6
     310:	91 e0       	ldi	r25, 0x01	; 1
     312:	0e 94 9c 01 	call	0x338
	UCSRB |= (1<<RXCIE);	// Re-enable.
     316:	57 9a       	sbi	0x0a, 7	; 10
	Epilog();
     318:	0e 94 66 07 	call	0xecc

0000031c <__vector_14>:
}

AVRX_SIGINT(SIG_UART0_DATA)
{
    IntProlog();
     31c:	0e 94 1a 07 	call	0xe34
    UCSRB &= ~(1<<UDRIE);			// Disable UDRE interrupt
     320:	55 98       	cbi	0x0a, 5	; 10
    sei();							// Allow other stuff to happen
     322:	78 94       	sei
	int c = AvrXPullFifo(Tx0Buf);	// Return -1 if empty (enables interrupts)
     324:	8f ed       	ldi	r24, 0xDF	; 223
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	0e 94 b8 01 	call	0x370
	if (c >= 0)						// Tricky tight code: only checking sign
     32c:	97 fd       	sbrc	r25, 7
     32e:	02 c0       	rjmp	.+4      	; 0x334
	{
		UDR = c;
     330:	8c b9       	out	0x0c, r24	; 12
		UCSRB |= (1<<UDRIE);
     332:	55 9a       	sbi	0x0a, 5	; 10
	}
	Epilog();
     334:	0e 94 66 07 	call	0xecc

00000338 <AvrXPutFifo>:
     338:	dc 01       	movw	r26, r24
     33a:	fc 01       	movw	r30, r24
     33c:	24 81       	ldd	r18, Z+4	; 0x04
     33e:	92 2f       	mov	r25, r18
     340:	9f 5f       	subi	r25, 0xFF	; 255
     342:	86 81       	ldd	r24, Z+6	; 0x06
     344:	98 17       	cp	r25, r24
     346:	08 f0       	brcs	.+2      	; 0x34a
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	fd 01       	movw	r30, r26
     34c:	85 81       	ldd	r24, Z+5	; 0x05
     34e:	98 17       	cp	r25, r24
     350:	19 f4       	brne	.+6      	; 0x358
     352:	8f ef       	ldi	r24, 0xFF	; 255
     354:	9f ef       	ldi	r25, 0xFF	; 255
     356:	08 95       	ret
     358:	fd 01       	movw	r30, r26
     35a:	e2 0f       	add	r30, r18
     35c:	f1 1d       	adc	r31, r1
     35e:	67 83       	std	Z+7, r22	; 0x07
     360:	fd 01       	movw	r30, r26
     362:	94 83       	std	Z+4, r25	; 0x04
     364:	cd 01       	movw	r24, r26
     366:	0e 94 1d 08 	call	0x103a
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	08 95       	ret

00000370 <AvrXPullFifo>:
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	dc 01       	movw	r26, r24
     376:	fc 01       	movw	r30, r24
     378:	84 81       	ldd	r24, Z+4	; 0x04
     37a:	95 81       	ldd	r25, Z+5	; 0x05
     37c:	89 17       	cp	r24, r25
     37e:	19 f4       	brne	.+6      	; 0x386
     380:	8f ef       	ldi	r24, 0xFF	; 255
     382:	9f ef       	ldi	r25, 0xFF	; 255
     384:	13 c0       	rjmp	.+38     	; 0x3ac
     386:	fd 01       	movw	r30, r26
     388:	e9 0f       	add	r30, r25
     38a:	f1 1d       	adc	r31, r1
     38c:	87 81       	ldd	r24, Z+7	; 0x07
     38e:	c8 2f       	mov	r28, r24
     390:	dd 27       	eor	r29, r29
     392:	9f 5f       	subi	r25, 0xFF	; 255
     394:	fd 01       	movw	r30, r26
     396:	86 81       	ldd	r24, Z+6	; 0x06
     398:	98 17       	cp	r25, r24
     39a:	08 f0       	brcs	.+2      	; 0x39e
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	fd 01       	movw	r30, r26
     3a0:	95 83       	std	Z+5, r25	; 0x05
     3a2:	cd 01       	movw	r24, r26
     3a4:	02 96       	adiw	r24, 0x02	; 2
     3a6:	0e 94 1d 08 	call	0x103a
     3aa:	ce 01       	movw	r24, r28
     3ac:	df 91       	pop	r29
     3ae:	cf 91       	pop	r28
     3b0:	08 95       	ret

000003b2 <AvrXWaitPutFifo>:
     3b2:	1f 93       	push	r17
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	ec 01       	movw	r28, r24
     3ba:	16 2f       	mov	r17, r22
     3bc:	04 c0       	rjmp	.+8      	; 0x3c6
     3be:	ce 01       	movw	r24, r28
     3c0:	02 96       	adiw	r24, 0x02	; 2
     3c2:	0e 94 06 08 	call	0x100c
     3c6:	61 2f       	mov	r22, r17
     3c8:	ce 01       	movw	r24, r28
     3ca:	0e 94 9c 01 	call	0x338
     3ce:	8f 5f       	subi	r24, 0xFF	; 255
     3d0:	9f 4f       	sbci	r25, 0xFF	; 255
     3d2:	a9 f3       	breq	.-22     	; 0x3be
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	08 95       	ret

000003dc <AvrXWaitPullFifo>:
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	ec 01       	movw	r28, r24
     3e2:	03 c0       	rjmp	.+6      	; 0x3ea
     3e4:	ce 01       	movw	r24, r28
     3e6:	0e 94 06 08 	call	0x100c
     3ea:	ce 01       	movw	r24, r28
     3ec:	0e 94 b8 01 	call	0x370
     3f0:	2f ef       	ldi	r18, 0xFF	; 255
     3f2:	8f 3f       	cpi	r24, 0xFF	; 255
     3f4:	92 07       	cpc	r25, r18
     3f6:	b1 f3       	breq	.-20     	; 0x3e4
     3f8:	df 91       	pop	r29
     3fa:	cf 91       	pop	r28
     3fc:	08 95       	ret

000003fe <AvrXFlushFifo>:
     3fe:	0f 93       	push	r16
     400:	1f 93       	push	r17
     402:	8c 01       	movw	r16, r24
     404:	fc 01       	movw	r30, r24
     406:	14 82       	std	Z+4, r1	; 0x04
     408:	15 82       	std	Z+5, r1	; 0x05
     40a:	02 96       	adiw	r24, 0x02	; 2
     40c:	0e 94 79 08 	call	0x10f2
     410:	c8 01       	movw	r24, r16
     412:	0e 94 79 08 	call	0x10f2
     416:	1f 91       	pop	r17
     418:	0f 91       	pop	r16
     41a:	08 95       	ret

0000041c <AvrXPeekFifo>:
     41c:	fc 01       	movw	r30, r24
     41e:	84 81       	ldd	r24, Z+4	; 0x04
     420:	95 81       	ldd	r25, Z+5	; 0x05
     422:	89 17       	cp	r24, r25
     424:	19 f4       	brne	.+6      	; 0x42c
     426:	8f ef       	ldi	r24, 0xFF	; 255
     428:	9f ef       	ldi	r25, 0xFF	; 255
     42a:	08 95       	ret
     42c:	e9 0f       	add	r30, r25
     42e:	f1 1d       	adc	r31, r1
     430:	87 81       	ldd	r24, Z+7	; 0x07
     432:	99 27       	eor	r25, r25
     434:	08 95       	ret

00000436 <AvrXStatFifo>:
     436:	fc 01       	movw	r30, r24
     438:	8f b7       	in	r24, 0x3f	; 63
     43a:	f8 94       	cli
     43c:	94 81       	ldd	r25, Z+4	; 0x04
     43e:	29 2f       	mov	r18, r25
     440:	33 27       	eor	r19, r19
     442:	95 81       	ldd	r25, Z+5	; 0x05
     444:	29 1b       	sub	r18, r25
     446:	31 09       	sbc	r19, r1
     448:	8f bf       	out	0x3f, r24	; 63
     44a:	37 ff       	sbrs	r19, 7
     44c:	03 c0       	rjmp	.+6      	; 0x454
     44e:	86 81       	ldd	r24, Z+6	; 0x06
     450:	28 0f       	add	r18, r24
     452:	31 1d       	adc	r19, r1
     454:	c9 01       	movw	r24, r18
     456:	08 95       	ret

00000458 <fdevopen>:
     458:	0f 93       	push	r16
     45a:	1f 93       	push	r17
     45c:	cf 93       	push	r28
     45e:	df 93       	push	r29
     460:	8c 01       	movw	r16, r24
     462:	eb 01       	movw	r28, r22
     464:	00 97       	sbiw	r24, 0x00	; 0
     466:	a1 f1       	breq	.+104    	; 0x4d0
     468:	6c e0       	ldi	r22, 0x0C	; 12
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 c7 05 	call	0xb8e
     474:	fc 01       	movw	r30, r24
     476:	89 2b       	or	r24, r25
     478:	21 f1       	breq	.+72     	; 0x4c2
     47a:	20 97       	sbiw	r28, 0x00	; 0
     47c:	51 f0       	breq	.+20     	; 0x492
     47e:	d3 87       	std	Z+11, r29	; 0x0b
     480:	c2 87       	std	Z+10, r28	; 0x0a
     482:	21 e0       	ldi	r18, 0x01	; 1
     484:	23 83       	std	Z+3, r18	; 0x03
     486:	80 91 3b 01 	lds	r24, 0x013B
     48a:	90 91 3c 01 	lds	r25, 0x013C
     48e:	89 2b       	or	r24, r25
     490:	d1 f0       	breq	.+52     	; 0x4c6
     492:	01 15       	cp	r16, r1
     494:	11 05       	cpc	r17, r1
     496:	a9 f0       	breq	.+42     	; 0x4c2
     498:	11 87       	std	Z+9, r17	; 0x09
     49a:	00 87       	std	Z+8, r16	; 0x08
     49c:	03 81       	ldd	r16, Z+3	; 0x03
     49e:	02 60       	ori	r16, 0x02	; 2
     4a0:	03 83       	std	Z+3, r16	; 0x03
     4a2:	a0 91 3d 01 	lds	r26, 0x013D
     4a6:	b0 91 3e 01 	lds	r27, 0x013E
     4aa:	ab 2b       	or	r26, r27
     4ac:	51 f4       	brne	.+20     	; 0x4c2
     4ae:	f0 93 3e 01 	sts	0x013E, r31
     4b2:	e0 93 3d 01 	sts	0x013D, r30
     4b6:	c0 91 3f 01 	lds	r28, 0x013F
     4ba:	d0 91 40 01 	lds	r29, 0x0140
     4be:	cd 2b       	or	r28, r29
     4c0:	51 f0       	breq	.+20     	; 0x4d6
     4c2:	cf 01       	movw	r24, r30
     4c4:	0d c0       	rjmp	.+26     	; 0x4e0
     4c6:	f0 93 3c 01 	sts	0x013C, r31
     4ca:	e0 93 3b 01 	sts	0x013B, r30
     4ce:	e1 cf       	rjmp	.-62     	; 0x492
     4d0:	67 2b       	or	r22, r23
     4d2:	51 f6       	brne	.-108    	; 0x468
     4d4:	05 c0       	rjmp	.+10     	; 0x4e0
     4d6:	f0 93 40 01 	sts	0x0140, r31
     4da:	e0 93 3f 01 	sts	0x013F, r30
     4de:	f1 cf       	rjmp	.-30     	; 0x4c2
     4e0:	df 91       	pop	r29
     4e2:	cf 91       	pop	r28
     4e4:	1f 91       	pop	r17
     4e6:	0f 91       	pop	r16
     4e8:	08 95       	ret

000004ea <fgetc>:
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
     4ee:	ec 01       	movw	r28, r24
     4f0:	2b 81       	ldd	r18, Y+3	; 0x03
     4f2:	82 2f       	mov	r24, r18
     4f4:	99 27       	eor	r25, r25
     4f6:	80 ff       	sbrs	r24, 0
     4f8:	30 c0       	rjmp	.+96     	; 0x55a
     4fa:	86 fd       	sbrc	r24, 6
     4fc:	16 c0       	rjmp	.+44     	; 0x52a
     4fe:	82 ff       	sbrs	r24, 2
     500:	1d c0       	rjmp	.+58     	; 0x53c
     502:	e8 81       	ld	r30, Y
     504:	f9 81       	ldd	r31, Y+1	; 0x01
     506:	31 91       	ld	r19, Z+
     508:	43 2f       	mov	r20, r19
     50a:	55 27       	eor	r21, r21
     50c:	47 fd       	sbrc	r20, 7
     50e:	50 95       	com	r21
     510:	f9 83       	std	Y+1, r31	; 0x01
     512:	e8 83       	st	Y, r30
     514:	41 15       	cp	r20, r1
     516:	51 05       	cpc	r21, r1
     518:	f1 f0       	breq	.+60     	; 0x556
     51a:	ae 81       	ldd	r26, Y+6	; 0x06
     51c:	bf 81       	ldd	r27, Y+7	; 0x07
     51e:	11 96       	adiw	r26, 0x01	; 1
     520:	bf 83       	std	Y+7, r27	; 0x07
     522:	ae 83       	std	Y+6, r26	; 0x06
     524:	84 2f       	mov	r24, r20
     526:	99 27       	eor	r25, r25
     528:	1a c0       	rjmp	.+52     	; 0x55e
     52a:	2f 7b       	andi	r18, 0xBF	; 191
     52c:	2b 83       	std	Y+3, r18	; 0x03
     52e:	8e 81       	ldd	r24, Y+6	; 0x06
     530:	9f 81       	ldd	r25, Y+7	; 0x07
     532:	01 96       	adiw	r24, 0x01	; 1
     534:	9f 83       	std	Y+7, r25	; 0x07
     536:	8e 83       	std	Y+6, r24	; 0x06
     538:	8a 81       	ldd	r24, Y+2	; 0x02
     53a:	f5 cf       	rjmp	.-22     	; 0x526
     53c:	ea 85       	ldd	r30, Y+10	; 0x0a
     53e:	fb 85       	ldd	r31, Y+11	; 0x0b
     540:	09 95       	icall
     542:	ac 01       	movw	r20, r24
     544:	8f ef       	ldi	r24, 0xFF	; 255
     546:	4f 3f       	cpi	r20, 0xFF	; 255
     548:	58 07       	cpc	r21, r24
     54a:	39 f7       	brne	.-50     	; 0x51a
     54c:	2b 81       	ldd	r18, Y+3	; 0x03
     54e:	20 61       	ori	r18, 0x10	; 16
     550:	2b 83       	std	Y+3, r18	; 0x03
     552:	ca 01       	movw	r24, r20
     554:	04 c0       	rjmp	.+8      	; 0x55e
     556:	20 62       	ori	r18, 0x20	; 32
     558:	2b 83       	std	Y+3, r18	; 0x03
     55a:	8f ef       	ldi	r24, 0xFF	; 255
     55c:	9f ef       	ldi	r25, 0xFF	; 255
     55e:	df 91       	pop	r29
     560:	cf 91       	pop	r28
     562:	08 95       	ret

00000564 <fputc>:
     564:	0f 93       	push	r16
     566:	1f 93       	push	r17
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	8c 01       	movw	r16, r24
     56e:	eb 01       	movw	r28, r22
     570:	8b 81       	ldd	r24, Y+3	; 0x03
     572:	99 27       	eor	r25, r25
     574:	81 ff       	sbrs	r24, 1
     576:	22 c0       	rjmp	.+68     	; 0x5bc
     578:	82 ff       	sbrs	r24, 2
     57a:	14 c0       	rjmp	.+40     	; 0x5a4
     57c:	2e 81       	ldd	r18, Y+6	; 0x06
     57e:	3f 81       	ldd	r19, Y+7	; 0x07
     580:	8c 81       	ldd	r24, Y+4	; 0x04
     582:	9d 81       	ldd	r25, Y+5	; 0x05
     584:	28 17       	cp	r18, r24
     586:	39 07       	cpc	r19, r25
     588:	3c f4       	brge	.+14     	; 0x598
     58a:	e8 81       	ld	r30, Y
     58c:	f9 81       	ldd	r31, Y+1	; 0x01
     58e:	01 93       	st	Z+, r16
     590:	f9 83       	std	Y+1, r31	; 0x01
     592:	e8 83       	st	Y, r30
     594:	2e 81       	ldd	r18, Y+6	; 0x06
     596:	3f 81       	ldd	r19, Y+7	; 0x07
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	3f 83       	std	Y+7, r19	; 0x07
     59e:	2e 83       	std	Y+6, r18	; 0x06
     5a0:	c8 01       	movw	r24, r16
     5a2:	0e c0       	rjmp	.+28     	; 0x5c0
     5a4:	e8 85       	ldd	r30, Y+8	; 0x08
     5a6:	f9 85       	ldd	r31, Y+9	; 0x09
     5a8:	80 2f       	mov	r24, r16
     5aa:	09 95       	icall
     5ac:	89 2b       	or	r24, r25
     5ae:	31 f4       	brne	.+12     	; 0x5bc
     5b0:	ae 81       	ldd	r26, Y+6	; 0x06
     5b2:	bf 81       	ldd	r27, Y+7	; 0x07
     5b4:	11 96       	adiw	r26, 0x01	; 1
     5b6:	bf 83       	std	Y+7, r27	; 0x07
     5b8:	ae 83       	std	Y+6, r26	; 0x06
     5ba:	f2 cf       	rjmp	.-28     	; 0x5a0
     5bc:	8f ef       	ldi	r24, 0xFF	; 255
     5be:	9f ef       	ldi	r25, 0xFF	; 255
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	1f 91       	pop	r17
     5c6:	0f 91       	pop	r16
     5c8:	08 95       	ret

000005ca <printf_P>:
     5ca:	cf 93       	push	r28
     5cc:	df 93       	push	r29
     5ce:	cd b7       	in	r28, 0x3d	; 61
     5d0:	de b7       	in	r29, 0x3e	; 62
     5d2:	45 e0       	ldi	r20, 0x05	; 5
     5d4:	50 e0       	ldi	r21, 0x00	; 0
     5d6:	4c 0f       	add	r20, r28
     5d8:	5d 1f       	adc	r21, r29
     5da:	fa 01       	movw	r30, r20
     5dc:	21 91       	ld	r18, Z+
     5de:	31 91       	ld	r19, Z+
     5e0:	af 01       	movw	r20, r30
     5e2:	a0 91 3d 01 	lds	r26, 0x013D
     5e6:	b0 91 3e 01 	lds	r27, 0x013E
     5ea:	fd 01       	movw	r30, r26
     5ec:	83 81       	ldd	r24, Z+3	; 0x03
     5ee:	88 60       	ori	r24, 0x08	; 8
     5f0:	83 83       	std	Z+3, r24	; 0x03
     5f2:	b9 01       	movw	r22, r18
     5f4:	80 91 3d 01 	lds	r24, 0x013D
     5f8:	90 91 3e 01 	lds	r25, 0x013E
     5fc:	0e 94 0a 03 	call	0x614
     600:	e0 91 3d 01 	lds	r30, 0x013D
     604:	f0 91 3e 01 	lds	r31, 0x013E
     608:	23 81       	ldd	r18, Z+3	; 0x03
     60a:	27 7f       	andi	r18, 0xF7	; 247
     60c:	23 83       	std	Z+3, r18	; 0x03
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	08 95       	ret

00000614 <vfprintf>:
     614:	2f 92       	push	r2
     616:	3f 92       	push	r3
     618:	4f 92       	push	r4
     61a:	5f 92       	push	r5
     61c:	6f 92       	push	r6
     61e:	7f 92       	push	r7
     620:	8f 92       	push	r8
     622:	9f 92       	push	r9
     624:	af 92       	push	r10
     626:	bf 92       	push	r11
     628:	cf 92       	push	r12
     62a:	df 92       	push	r13
     62c:	ef 92       	push	r14
     62e:	ff 92       	push	r15
     630:	0f 93       	push	r16
     632:	1f 93       	push	r17
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
     638:	cd b7       	in	r28, 0x3d	; 61
     63a:	de b7       	in	r29, 0x3e	; 62
     63c:	62 97       	sbiw	r28, 0x12	; 18
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	f8 94       	cli
     642:	de bf       	out	0x3e, r29	; 62
     644:	0f be       	out	0x3f, r0	; 63
     646:	cd bf       	out	0x3d, r28	; 61
     648:	ee 24       	eor	r14, r14
     64a:	ff 24       	eor	r15, r15
     64c:	87 01       	movw	r16, r14
     64e:	1c 01       	movw	r2, r24
     650:	7e 87       	std	Y+14, r23	; 0x0e
     652:	6d 87       	std	Y+13, r22	; 0x0d
     654:	2a 01       	movw	r4, r20
     656:	cc 24       	eor	r12, r12
     658:	dd 24       	eor	r13, r13
     65a:	fc 01       	movw	r30, r24
     65c:	d7 82       	std	Z+7, r13	; 0x07
     65e:	c6 82       	std	Z+6, r12	; 0x06
     660:	83 81       	ldd	r24, Z+3	; 0x03
     662:	81 fd       	sbrc	r24, 1
     664:	68 c2       	rjmp	.+1232   	; 0xb36
     666:	8f ef       	ldi	r24, 0xFF	; 255
     668:	9f ef       	ldi	r25, 0xFF	; 255
     66a:	78 c2       	rjmp	.+1264   	; 0xb5c
     66c:	8d 85       	ldd	r24, Y+13	; 0x0d
     66e:	9e 85       	ldd	r25, Y+14	; 0x0e
     670:	01 96       	adiw	r24, 0x01	; 1
     672:	9e 87       	std	Y+14, r25	; 0x0e
     674:	8d 87       	std	Y+13, r24	; 0x0d
     676:	c0 fe       	sbrs	r12, 0
     678:	4b c2       	rjmp	.+1174   	; 0xb10
     67a:	8f 85       	ldd	r24, Y+15	; 0x0f
     67c:	80 53       	subi	r24, 0x30	; 48
     67e:	8a 30       	cpi	r24, 0x0A	; 10
     680:	d0 f4       	brcc	.+52     	; 0x6b6
     682:	9f 85       	ldd	r25, Y+15	; 0x0f
     684:	90 33       	cpi	r25, 0x30	; 48
     686:	39 f4       	brne	.+14     	; 0x696
     688:	66 20       	and	r6, r6
     68a:	29 f4       	brne	.+10     	; 0x696
     68c:	c3 fc       	sbrc	r12, 3
     68e:	03 c0       	rjmp	.+6      	; 0x696
     690:	e0 e0       	ldi	r30, 0x00	; 0
     692:	f1 e0       	ldi	r31, 0x01	; 1
     694:	8d c0       	rjmp	.+282    	; 0x7b0
     696:	8a e0       	ldi	r24, 0x0A	; 10
     698:	68 9e       	mul	r6, r24
     69a:	60 2c       	mov	r6, r0
     69c:	11 24       	eor	r1, r1
     69e:	ff 85       	ldd	r31, Y+15	; 0x0f
     6a0:	6f 0e       	add	r6, r31
     6a2:	20 ed       	ldi	r18, 0xD0	; 208
     6a4:	62 0e       	add	r6, r18
     6a6:	67 fe       	sbrs	r6, 7
     6a8:	02 c0       	rjmp	.+4      	; 0x6ae
     6aa:	5f e7       	ldi	r21, 0x7F	; 127
     6ac:	65 2e       	mov	r6, r21
     6ae:	c3 fc       	sbrc	r12, 3
     6b0:	42 c2       	rjmp	.+1156   	; 0xb36
     6b2:	76 2c       	mov	r7, r6
     6b4:	40 c2       	rjmp	.+1152   	; 0xb36
     6b6:	c3 fe       	sbrs	r12, 3
     6b8:	04 c0       	rjmp	.+8      	; 0x6c2
     6ba:	66 20       	and	r6, r6
     6bc:	11 f4       	brne	.+4      	; 0x6c2
     6be:	41 e0       	ldi	r20, 0x01	; 1
     6c0:	64 2e       	mov	r6, r20
     6c2:	ef 85       	ldd	r30, Y+15	; 0x0f
     6c4:	8e 2f       	mov	r24, r30
     6c6:	99 27       	eor	r25, r25
     6c8:	87 fd       	sbrc	r24, 7
     6ca:	90 95       	com	r25
     6cc:	88 36       	cpi	r24, 0x68	; 104
     6ce:	91 05       	cpc	r25, r1
     6d0:	8c f5       	brge	.+98     	; 0x734
     6d2:	85 36       	cpi	r24, 0x65	; 101
     6d4:	91 05       	cpc	r25, r1
     6d6:	0c f0       	brlt	.+2      	; 0x6da
     6d8:	6e c0       	rjmp	.+220    	; 0x7b6
     6da:	83 35       	cpi	r24, 0x53	; 83
     6dc:	91 05       	cpc	r25, r1
     6de:	09 f4       	brne	.+2      	; 0x6e2
     6e0:	93 c0       	rjmp	.+294    	; 0x808
     6e2:	84 35       	cpi	r24, 0x54	; 84
     6e4:	91 05       	cpc	r25, r1
     6e6:	cc f4       	brge	.+50     	; 0x71a
     6e8:	8b 32       	cpi	r24, 0x2B	; 43
     6ea:	91 05       	cpc	r25, r1
     6ec:	09 f4       	brne	.+2      	; 0x6f0
     6ee:	49 c0       	rjmp	.+146    	; 0x782
     6f0:	8c 32       	cpi	r24, 0x2C	; 44
     6f2:	91 05       	cpc	r25, r1
     6f4:	4c f4       	brge	.+18     	; 0x708
     6f6:	80 32       	cpi	r24, 0x20	; 32
     6f8:	91 05       	cpc	r25, r1
     6fa:	09 f4       	brne	.+2      	; 0x6fe
     6fc:	46 c0       	rjmp	.+140    	; 0x78a
     6fe:	83 32       	cpi	r24, 0x23	; 35
     700:	91 05       	cpc	r25, r1
     702:	09 f4       	brne	.+2      	; 0x706
     704:	4a c0       	rjmp	.+148    	; 0x79a
     706:	fe c1       	rjmp	.+1020   	; 0xb04
     708:	8d 32       	cpi	r24, 0x2D	; 45
     70a:	91 05       	cpc	r25, r1
     70c:	09 f4       	brne	.+2      	; 0x710
     70e:	40 c0       	rjmp	.+128    	; 0x790
     710:	8e 32       	cpi	r24, 0x2E	; 46
     712:	91 05       	cpc	r25, r1
     714:	09 f4       	brne	.+2      	; 0x718
     716:	44 c0       	rjmp	.+136    	; 0x7a0
     718:	f5 c1       	rjmp	.+1002   	; 0xb04
     71a:	83 36       	cpi	r24, 0x63	; 99
     71c:	91 05       	cpc	r25, r1
     71e:	09 f4       	brne	.+2      	; 0x722
     720:	50 c0       	rjmp	.+160    	; 0x7c2
     722:	84 36       	cpi	r24, 0x64	; 100
     724:	91 05       	cpc	r25, r1
     726:	0c f0       	brlt	.+2      	; 0x72a
     728:	8a c0       	rjmp	.+276    	; 0x83e
     72a:	88 35       	cpi	r24, 0x58	; 88
     72c:	91 05       	cpc	r25, r1
     72e:	09 f4       	brne	.+2      	; 0x732
     730:	bc c0       	rjmp	.+376    	; 0x8aa
     732:	e8 c1       	rjmp	.+976    	; 0xb04
     734:	80 37       	cpi	r24, 0x70	; 112
     736:	91 05       	cpc	r25, r1
     738:	09 f4       	brne	.+2      	; 0x73c
     73a:	b1 c0       	rjmp	.+354    	; 0x89e
     73c:	81 37       	cpi	r24, 0x71	; 113
     73e:	91 05       	cpc	r25, r1
     740:	84 f4       	brge	.+32     	; 0x762
     742:	8c 36       	cpi	r24, 0x6C	; 108
     744:	91 05       	cpc	r25, r1
     746:	91 f1       	breq	.+100    	; 0x7ac
     748:	8d 36       	cpi	r24, 0x6D	; 109
     74a:	91 05       	cpc	r25, r1
     74c:	2c f4       	brge	.+10     	; 0x758
     74e:	89 36       	cpi	r24, 0x69	; 105
     750:	91 05       	cpc	r25, r1
     752:	09 f4       	brne	.+2      	; 0x756
     754:	74 c0       	rjmp	.+232    	; 0x83e
     756:	d6 c1       	rjmp	.+940    	; 0xb04
     758:	8f 36       	cpi	r24, 0x6F	; 111
     75a:	91 05       	cpc	r25, r1
     75c:	09 f4       	brne	.+2      	; 0x760
     75e:	9c c0       	rjmp	.+312    	; 0x898
     760:	d1 c1       	rjmp	.+930    	; 0xb04
     762:	85 37       	cpi	r24, 0x75	; 117
     764:	91 05       	cpc	r25, r1
     766:	09 f4       	brne	.+2      	; 0x76a
     768:	a2 c0       	rjmp	.+324    	; 0x8ae
     76a:	86 37       	cpi	r24, 0x76	; 118
     76c:	91 05       	cpc	r25, r1
     76e:	24 f4       	brge	.+8      	; 0x778
     770:	83 37       	cpi	r24, 0x73	; 115
     772:	91 05       	cpc	r25, r1
     774:	71 f1       	breq	.+92     	; 0x7d2
     776:	c6 c1       	rjmp	.+908    	; 0xb04
     778:	88 37       	cpi	r24, 0x78	; 120
     77a:	91 05       	cpc	r25, r1
     77c:	09 f4       	brne	.+2      	; 0x780
     77e:	95 c0       	rjmp	.+298    	; 0x8aa
     780:	c1 c1       	rjmp	.+898    	; 0xb04
     782:	80 e1       	ldi	r24, 0x10	; 16
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	c8 2a       	or	r12, r24
     788:	d9 2a       	or	r13, r25
     78a:	e0 e2       	ldi	r30, 0x20	; 32
     78c:	f0 e0       	ldi	r31, 0x00	; 0
     78e:	10 c0       	rjmp	.+32     	; 0x7b0
     790:	80 e8       	ldi	r24, 0x80	; 128
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	c8 2a       	or	r12, r24
     796:	d9 2a       	or	r13, r25
     798:	ce c1       	rjmp	.+924    	; 0xb36
     79a:	e0 e4       	ldi	r30, 0x40	; 64
     79c:	f0 e0       	ldi	r31, 0x00	; 0
     79e:	08 c0       	rjmp	.+16     	; 0x7b0
     7a0:	88 e0       	ldi	r24, 0x08	; 8
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	c8 2a       	or	r12, r24
     7a6:	d9 2a       	or	r13, r25
     7a8:	66 24       	eor	r6, r6
     7aa:	c5 c1       	rjmp	.+906    	; 0xb36
     7ac:	e4 e0       	ldi	r30, 0x04	; 4
     7ae:	f0 e0       	ldi	r31, 0x00	; 0
     7b0:	ce 2a       	or	r12, r30
     7b2:	df 2a       	or	r13, r31
     7b4:	c0 c1       	rjmp	.+896    	; 0xb36
     7b6:	3f e3       	ldi	r19, 0x3F	; 63
     7b8:	e3 2e       	mov	r14, r19
     7ba:	7a 94       	dec	r7
     7bc:	f3 e6       	ldi	r31, 0x63	; 99
     7be:	ff 87       	std	Y+15, r31	; 0x0f
     7c0:	3c c1       	rjmp	.+632    	; 0xa3a
     7c2:	f2 01       	movw	r30, r4
     7c4:	82 e0       	ldi	r24, 0x02	; 2
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	48 0e       	add	r4, r24
     7ca:	59 1e       	adc	r5, r25
     7cc:	e0 80       	ld	r14, Z
     7ce:	7a 94       	dec	r7
     7d0:	34 c1       	rjmp	.+616    	; 0xa3a
     7d2:	f2 01       	movw	r30, r4
     7d4:	82 e0       	ldi	r24, 0x02	; 2
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	48 0e       	add	r4, r24
     7da:	59 1e       	adc	r5, r25
     7dc:	a0 81       	ld	r26, Z
     7de:	b1 81       	ldd	r27, Z+1	; 0x01
     7e0:	7d 01       	movw	r14, r26
     7e2:	c3 fe       	sbrs	r12, 3
     7e4:	09 c0       	rjmp	.+18     	; 0x7f8
     7e6:	86 2d       	mov	r24, r6
     7e8:	99 27       	eor	r25, r25
     7ea:	87 fd       	sbrc	r24, 7
     7ec:	90 95       	com	r25
     7ee:	bc 01       	movw	r22, r24
     7f0:	cd 01       	movw	r24, r26
     7f2:	0e 94 04 07 	call	0xe08
     7f6:	1f c0       	rjmp	.+62     	; 0x836
     7f8:	fd 01       	movw	r30, r26
     7fa:	01 90       	ld	r0, Z+
     7fc:	00 20       	and	r0, r0
     7fe:	e9 f7       	brne	.-6      	; 0x7fa
     800:	31 97       	sbiw	r30, 0x01	; 1
     802:	ea 1b       	sub	r30, r26
     804:	e8 8b       	std	Y+16, r30	; 0x10
     806:	18 c0       	rjmp	.+48     	; 0x838
     808:	f2 01       	movw	r30, r4
     80a:	82 e0       	ldi	r24, 0x02	; 2
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	48 0e       	add	r4, r24
     810:	59 1e       	adc	r5, r25
     812:	01 90       	ld	r0, Z+
     814:	f0 81       	ld	r31, Z
     816:	e0 2d       	mov	r30, r0
     818:	7f 01       	movw	r14, r30
     81a:	c3 fe       	sbrs	r12, 3
     81c:	09 c0       	rjmp	.+18     	; 0x830
     81e:	86 2d       	mov	r24, r6
     820:	99 27       	eor	r25, r25
     822:	87 fd       	sbrc	r24, 7
     824:	90 95       	com	r25
     826:	bc 01       	movw	r22, r24
     828:	cf 01       	movw	r24, r30
     82a:	0e 94 0f 07 	call	0xe1e
     82e:	03 c0       	rjmp	.+6      	; 0x836
     830:	cf 01       	movw	r24, r30
     832:	0e 94 fb 06 	call	0xdf6
     836:	88 8b       	std	Y+16, r24	; 0x10
     838:	98 89       	ldd	r25, Y+16	; 0x10
     83a:	79 1a       	sub	r7, r25
     83c:	fe c0       	rjmp	.+508    	; 0xa3a
     83e:	c2 fe       	sbrs	r12, 2
     840:	0a c0       	rjmp	.+20     	; 0x856
     842:	f2 01       	movw	r30, r4
     844:	84 e0       	ldi	r24, 0x04	; 4
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	48 0e       	add	r4, r24
     84a:	59 1e       	adc	r5, r25
     84c:	20 81       	ld	r18, Z
     84e:	31 81       	ldd	r19, Z+1	; 0x01
     850:	42 81       	ldd	r20, Z+2	; 0x02
     852:	53 81       	ldd	r21, Z+3	; 0x03
     854:	0c c0       	rjmp	.+24     	; 0x86e
     856:	f2 01       	movw	r30, r4
     858:	82 e0       	ldi	r24, 0x02	; 2
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	48 0e       	add	r4, r24
     85e:	59 1e       	adc	r5, r25
     860:	80 81       	ld	r24, Z
     862:	91 81       	ldd	r25, Z+1	; 0x01
     864:	9c 01       	movw	r18, r24
     866:	44 27       	eor	r20, r20
     868:	37 fd       	sbrc	r19, 7
     86a:	40 95       	com	r20
     86c:	54 2f       	mov	r21, r20
     86e:	79 01       	movw	r14, r18
     870:	8a 01       	movw	r16, r20
     872:	57 ff       	sbrs	r21, 7
     874:	0c c0       	rjmp	.+24     	; 0x88e
     876:	e2 e0       	ldi	r30, 0x02	; 2
     878:	f0 e0       	ldi	r31, 0x00	; 0
     87a:	ce 2a       	or	r12, r30
     87c:	df 2a       	or	r13, r31
     87e:	10 95       	com	r17
     880:	00 95       	com	r16
     882:	f0 94       	com	r15
     884:	e0 94       	com	r14
     886:	e1 1c       	adc	r14, r1
     888:	f1 1c       	adc	r15, r1
     88a:	01 1d       	adc	r16, r1
     88c:	11 1d       	adc	r17, r1
     88e:	8f eb       	ldi	r24, 0xBF	; 191
     890:	9f ef       	ldi	r25, 0xFF	; 255
     892:	c8 22       	and	r12, r24
     894:	d9 22       	and	r13, r25
     896:	27 c0       	rjmp	.+78     	; 0x8e6
     898:	98 e0       	ldi	r25, 0x08	; 8
     89a:	98 8b       	std	Y+16, r25	; 0x10
     89c:	08 c0       	rjmp	.+16     	; 0x8ae
     89e:	e0 e4       	ldi	r30, 0x40	; 64
     8a0:	f0 e0       	ldi	r31, 0x00	; 0
     8a2:	ce 2a       	or	r12, r30
     8a4:	df 2a       	or	r13, r31
     8a6:	f8 e7       	ldi	r31, 0x78	; 120
     8a8:	ff 87       	std	Y+15, r31	; 0x0f
     8aa:	20 e1       	ldi	r18, 0x10	; 16
     8ac:	28 8b       	std	Y+16, r18	; 0x10
     8ae:	c2 fe       	sbrs	r12, 2
     8b0:	0a c0       	rjmp	.+20     	; 0x8c6
     8b2:	f2 01       	movw	r30, r4
     8b4:	84 e0       	ldi	r24, 0x04	; 4
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	48 0e       	add	r4, r24
     8ba:	59 1e       	adc	r5, r25
     8bc:	20 81       	ld	r18, Z
     8be:	31 81       	ldd	r19, Z+1	; 0x01
     8c0:	42 81       	ldd	r20, Z+2	; 0x02
     8c2:	53 81       	ldd	r21, Z+3	; 0x03
     8c4:	0a c0       	rjmp	.+20     	; 0x8da
     8c6:	f2 01       	movw	r30, r4
     8c8:	82 e0       	ldi	r24, 0x02	; 2
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	48 0e       	add	r4, r24
     8ce:	59 1e       	adc	r5, r25
     8d0:	80 81       	ld	r24, Z
     8d2:	91 81       	ldd	r25, Z+1	; 0x01
     8d4:	9c 01       	movw	r18, r24
     8d6:	44 27       	eor	r20, r20
     8d8:	55 27       	eor	r21, r21
     8da:	79 01       	movw	r14, r18
     8dc:	8a 01       	movw	r16, r20
     8de:	ef ec       	ldi	r30, 0xCF	; 207
     8e0:	ff ef       	ldi	r31, 0xFF	; 255
     8e2:	ce 22       	and	r12, r30
     8e4:	df 22       	and	r13, r31
     8e6:	ce 01       	movw	r24, r28
     8e8:	01 96       	adiw	r24, 0x01	; 1
     8ea:	9a 8b       	std	Y+18, r25	; 0x12
     8ec:	89 8b       	std	Y+17, r24	; 0x11
     8ee:	98 89       	ldd	r25, Y+16	; 0x10
     8f0:	89 2e       	mov	r8, r25
     8f2:	99 24       	eor	r9, r9
     8f4:	aa 24       	eor	r10, r10
     8f6:	bb 24       	eor	r11, r11
     8f8:	c8 01       	movw	r24, r16
     8fa:	b7 01       	movw	r22, r14
     8fc:	a5 01       	movw	r20, r10
     8fe:	94 01       	movw	r18, r8
     900:	0e 94 0f 09 	call	0x121e
     904:	dc 01       	movw	r26, r24
     906:	cb 01       	movw	r24, r22
     908:	e9 89       	ldd	r30, Y+17	; 0x11
     90a:	fa 89       	ldd	r31, Y+18	; 0x12
     90c:	80 83       	st	Z, r24
     90e:	8a 30       	cpi	r24, 0x0A	; 10
     910:	24 f0       	brlt	.+8      	; 0x91a
     912:	ff 85       	ldd	r31, Y+15	; 0x0f
     914:	8f 0f       	add	r24, r31
     916:	81 52       	subi	r24, 0x21	; 33
     918:	01 c0       	rjmp	.+2      	; 0x91c
     91a:	80 5d       	subi	r24, 0xD0	; 208
     91c:	e9 89       	ldd	r30, Y+17	; 0x11
     91e:	fa 89       	ldd	r31, Y+18	; 0x12
     920:	81 93       	st	Z+, r24
     922:	fa 8b       	std	Y+18, r31	; 0x12
     924:	e9 8b       	std	Y+17, r30	; 0x11
     926:	c8 01       	movw	r24, r16
     928:	b7 01       	movw	r22, r14
     92a:	a5 01       	movw	r20, r10
     92c:	94 01       	movw	r18, r8
     92e:	0e 94 0f 09 	call	0x121e
     932:	79 01       	movw	r14, r18
     934:	8a 01       	movw	r16, r20
     936:	21 15       	cp	r18, r1
     938:	31 05       	cpc	r19, r1
     93a:	41 05       	cpc	r20, r1
     93c:	51 05       	cpc	r21, r1
     93e:	e1 f6       	brne	.-72     	; 0x8f8
     940:	e9 88       	ldd	r14, Y+17	; 0x11
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	8c 0f       	add	r24, r28
     948:	9d 1f       	adc	r25, r29
     94a:	e8 1a       	sub	r14, r24
     94c:	c6 01       	movw	r24, r12
     94e:	82 73       	andi	r24, 0x32	; 50
     950:	90 70       	andi	r25, 0x00	; 0
     952:	89 2b       	or	r24, r25
     954:	09 f0       	breq	.+2      	; 0x958
     956:	7a 94       	dec	r7
     958:	c6 fe       	sbrs	r12, 6
     95a:	0d c0       	rjmp	.+26     	; 0x976
     95c:	87 2d       	mov	r24, r7
     95e:	99 27       	eor	r25, r25
     960:	87 fd       	sbrc	r24, 7
     962:	90 95       	com	r25
     964:	e8 89       	ldd	r30, Y+16	; 0x10
     966:	e0 31       	cpi	r30, 0x10	; 16
     968:	21 f4       	brne	.+8      	; 0x972
     96a:	2e ef       	ldi	r18, 0xFE	; 254
     96c:	72 2e       	mov	r7, r18
     96e:	78 0e       	add	r7, r24
     970:	02 c0       	rjmp	.+4      	; 0x976
     972:	78 2e       	mov	r7, r24
     974:	7a 94       	dec	r7
     976:	c3 fe       	sbrs	r12, 3
     978:	0f c0       	rjmp	.+30     	; 0x998
     97a:	26 2d       	mov	r18, r6
     97c:	33 27       	eor	r19, r19
     97e:	27 fd       	sbrc	r18, 7
     980:	30 95       	com	r19
     982:	8e 2d       	mov	r24, r14
     984:	99 27       	eor	r25, r25
     986:	82 17       	cp	r24, r18
     988:	93 07       	cpc	r25, r19
     98a:	2c f0       	brlt	.+10     	; 0x996
     98c:	87 ef       	ldi	r24, 0xF7	; 247
     98e:	9f ef       	ldi	r25, 0xFF	; 255
     990:	c8 22       	and	r12, r24
     992:	d9 22       	and	r13, r25
     994:	01 c0       	rjmp	.+2      	; 0x998
     996:	6e 18       	sub	r6, r14
     998:	c3 fe       	sbrs	r12, 3
     99a:	02 c0       	rjmp	.+4      	; 0x9a0
     99c:	76 18       	sub	r7, r6
     99e:	01 c0       	rjmp	.+2      	; 0x9a2
     9a0:	7e 18       	sub	r7, r14
     9a2:	c6 01       	movw	r24, r12
     9a4:	80 78       	andi	r24, 0x80	; 128
     9a6:	91 70       	andi	r25, 0x01	; 1
     9a8:	89 2b       	or	r24, r25
     9aa:	51 f4       	brne	.+20     	; 0x9c0
     9ac:	87 2d       	mov	r24, r7
     9ae:	7a 94       	dec	r7
     9b0:	18 16       	cp	r1, r24
     9b2:	34 f4       	brge	.+12     	; 0x9c0
     9b4:	b1 01       	movw	r22, r2
     9b6:	80 e2       	ldi	r24, 0x20	; 32
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	0e 94 b2 02 	call	0x564
     9be:	f6 cf       	rjmp	.-20     	; 0x9ac
     9c0:	c1 fe       	sbrs	r12, 1
     9c2:	04 c0       	rjmp	.+8      	; 0x9cc
     9c4:	b1 01       	movw	r22, r2
     9c6:	8d e2       	ldi	r24, 0x2D	; 45
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	0b c0       	rjmp	.+22     	; 0x9e2
     9cc:	c4 fe       	sbrs	r12, 4
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8
     9d0:	b1 01       	movw	r22, r2
     9d2:	8b e2       	ldi	r24, 0x2B	; 43
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	05 c0       	rjmp	.+10     	; 0x9e2
     9d8:	c5 fe       	sbrs	r12, 5
     9da:	05 c0       	rjmp	.+10     	; 0x9e6
     9dc:	b1 01       	movw	r22, r2
     9de:	80 e2       	ldi	r24, 0x20	; 32
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	0e 94 b2 02 	call	0x564
     9e6:	c6 fe       	sbrs	r12, 6
     9e8:	10 c0       	rjmp	.+32     	; 0xa0a
     9ea:	b1 01       	movw	r22, r2
     9ec:	80 e3       	ldi	r24, 0x30	; 48
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 b2 02 	call	0x564
     9f4:	98 89       	ldd	r25, Y+16	; 0x10
     9f6:	90 31       	cpi	r25, 0x10	; 16
     9f8:	41 f4       	brne	.+16     	; 0xa0a
     9fa:	b1 01       	movw	r22, r2
     9fc:	ef 85       	ldd	r30, Y+15	; 0x0f
     9fe:	8e 2f       	mov	r24, r30
     a00:	99 27       	eor	r25, r25
     a02:	87 fd       	sbrc	r24, 7
     a04:	90 95       	com	r25
     a06:	0e 94 b2 02 	call	0x564
     a0a:	d0 fe       	sbrs	r13, 0
     a0c:	0a c0       	rjmp	.+20     	; 0xa22
     a0e:	87 2d       	mov	r24, r7
     a10:	7a 94       	dec	r7
     a12:	18 16       	cp	r1, r24
     a14:	34 f4       	brge	.+12     	; 0xa22
     a16:	b1 01       	movw	r22, r2
     a18:	80 e3       	ldi	r24, 0x30	; 48
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	0e 94 b2 02 	call	0x564
     a20:	f6 cf       	rjmp	.-20     	; 0xa0e
     a22:	c3 fe       	sbrs	r12, 3
     a24:	0a c0       	rjmp	.+20     	; 0xa3a
     a26:	86 2d       	mov	r24, r6
     a28:	6a 94       	dec	r6
     a2a:	18 16       	cp	r1, r24
     a2c:	34 f4       	brge	.+12     	; 0xa3a
     a2e:	b1 01       	movw	r22, r2
     a30:	80 e3       	ldi	r24, 0x30	; 48
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 b2 02 	call	0x564
     a38:	f6 cf       	rjmp	.-20     	; 0xa26
     a3a:	90 e8       	ldi	r25, 0x80	; 128
     a3c:	b9 2e       	mov	r11, r25
     a3e:	bc 20       	and	r11, r12
     a40:	51 f4       	brne	.+20     	; 0xa56
     a42:	87 2d       	mov	r24, r7
     a44:	7a 94       	dec	r7
     a46:	18 16       	cp	r1, r24
     a48:	34 f4       	brge	.+12     	; 0xa56
     a4a:	b1 01       	movw	r22, r2
     a4c:	80 e2       	ldi	r24, 0x20	; 32
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	0e 94 b2 02 	call	0x564
     a54:	f6 cf       	rjmp	.-20     	; 0xa42
     a56:	ff 85       	ldd	r31, Y+15	; 0x0f
     a58:	f3 36       	cpi	r31, 0x63	; 99
     a5a:	41 f4       	brne	.+16     	; 0xa6c
     a5c:	8e 2d       	mov	r24, r14
     a5e:	b1 01       	movw	r22, r2
     a60:	99 27       	eor	r25, r25
     a62:	87 fd       	sbrc	r24, 7
     a64:	90 95       	com	r25
     a66:	0e 94 b2 02 	call	0x564
     a6a:	40 c0       	rjmp	.+128    	; 0xaec
     a6c:	2f 85       	ldd	r18, Y+15	; 0x0f
     a6e:	23 37       	cpi	r18, 0x73	; 115
     a70:	b1 f4       	brne	.+44     	; 0xa9e
     a72:	88 89       	ldd	r24, Y+16	; 0x10
     a74:	81 50       	subi	r24, 0x01	; 1
     a76:	88 8b       	std	Y+16, r24	; 0x10
     a78:	8f 3f       	cpi	r24, 0xFF	; 255
     a7a:	c1 f1       	breq	.+112    	; 0xaec
     a7c:	f7 01       	movw	r30, r14
     a7e:	80 81       	ld	r24, Z
     a80:	08 94       	sec
     a82:	e1 1c       	adc	r14, r1
     a84:	f1 1c       	adc	r15, r1
     a86:	b1 01       	movw	r22, r2
     a88:	99 27       	eor	r25, r25
     a8a:	87 fd       	sbrc	r24, 7
     a8c:	90 95       	com	r25
     a8e:	0e 94 b2 02 	call	0x564
     a92:	98 89       	ldd	r25, Y+16	; 0x10
     a94:	91 50       	subi	r25, 0x01	; 1
     a96:	98 8b       	std	Y+16, r25	; 0x10
     a98:	9f 3f       	cpi	r25, 0xFF	; 255
     a9a:	81 f7       	brne	.-32     	; 0xa7c
     a9c:	27 c0       	rjmp	.+78     	; 0xaec
     a9e:	ef 85       	ldd	r30, Y+15	; 0x0f
     aa0:	e3 35       	cpi	r30, 0x53	; 83
     aa2:	79 f4       	brne	.+30     	; 0xac2
     aa4:	f8 89       	ldd	r31, Y+16	; 0x10
     aa6:	f1 50       	subi	r31, 0x01	; 1
     aa8:	f8 8b       	std	Y+16, r31	; 0x10
     aaa:	ff 3f       	cpi	r31, 0xFF	; 255
     aac:	f9 f0       	breq	.+62     	; 0xaec
     aae:	f7 01       	movw	r30, r14
     ab0:	84 91       	lpm	r24, Z
     ab2:	b1 01       	movw	r22, r2
     ab4:	99 27       	eor	r25, r25
     ab6:	0e 94 b2 02 	call	0x564
     aba:	08 94       	sec
     abc:	e1 1c       	adc	r14, r1
     abe:	f1 1c       	adc	r15, r1
     ac0:	f1 cf       	rjmp	.-30     	; 0xaa4
     ac2:	6e 01       	movw	r12, r28
     ac4:	08 94       	sec
     ac6:	c1 1c       	adc	r12, r1
     ac8:	d1 1c       	adc	r13, r1
     aca:	89 89       	ldd	r24, Y+17	; 0x11
     acc:	9a 89       	ldd	r25, Y+18	; 0x12
     ace:	8c 15       	cp	r24, r12
     ad0:	9d 05       	cpc	r25, r13
     ad2:	61 f0       	breq	.+24     	; 0xaec
     ad4:	e9 89       	ldd	r30, Y+17	; 0x11
     ad6:	fa 89       	ldd	r31, Y+18	; 0x12
     ad8:	82 91       	ld	r24, -Z
     ada:	fa 8b       	std	Y+18, r31	; 0x12
     adc:	e9 8b       	std	Y+17, r30	; 0x11
     ade:	b1 01       	movw	r22, r2
     ae0:	99 27       	eor	r25, r25
     ae2:	87 fd       	sbrc	r24, 7
     ae4:	90 95       	com	r25
     ae6:	0e 94 b2 02 	call	0x564
     aea:	ef cf       	rjmp	.-34     	; 0xaca
     aec:	bb 20       	and	r11, r11
     aee:	69 f0       	breq	.+26     	; 0xb0a
     af0:	87 2d       	mov	r24, r7
     af2:	7a 94       	dec	r7
     af4:	18 16       	cp	r1, r24
     af6:	4c f4       	brge	.+18     	; 0xb0a
     af8:	b1 01       	movw	r22, r2
     afa:	80 e2       	ldi	r24, 0x20	; 32
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	0e 94 b2 02 	call	0x564
     b02:	f6 cf       	rjmp	.-20     	; 0xaf0
     b04:	b1 01       	movw	r22, r2
     b06:	0e 94 b2 02 	call	0x564
     b0a:	cc 24       	eor	r12, r12
     b0c:	dd 24       	eor	r13, r13
     b0e:	13 c0       	rjmp	.+38     	; 0xb36
     b10:	9f 85       	ldd	r25, Y+15	; 0x0f
     b12:	95 32       	cpi	r25, 0x25	; 37
     b14:	41 f4       	brne	.+16     	; 0xb26
     b16:	81 e0       	ldi	r24, 0x01	; 1
     b18:	c8 2e       	mov	r12, r24
     b1a:	d1 2c       	mov	r13, r1
     b1c:	66 24       	eor	r6, r6
     b1e:	76 2c       	mov	r7, r6
     b20:	ea e0       	ldi	r30, 0x0A	; 10
     b22:	e8 8b       	std	Y+16, r30	; 0x10
     b24:	08 c0       	rjmp	.+16     	; 0xb36
     b26:	b1 01       	movw	r22, r2
     b28:	ff 85       	ldd	r31, Y+15	; 0x0f
     b2a:	8f 2f       	mov	r24, r31
     b2c:	99 27       	eor	r25, r25
     b2e:	87 fd       	sbrc	r24, 7
     b30:	90 95       	com	r25
     b32:	0e 94 b2 02 	call	0x564
     b36:	f1 01       	movw	r30, r2
     b38:	83 81       	ldd	r24, Z+3	; 0x03
     b3a:	83 ff       	sbrs	r24, 3
     b3c:	04 c0       	rjmp	.+8      	; 0xb46
     b3e:	ed 85       	ldd	r30, Y+13	; 0x0d
     b40:	fe 85       	ldd	r31, Y+14	; 0x0e
     b42:	f4 91       	lpm	r31, Z
     b44:	03 c0       	rjmp	.+6      	; 0xb4c
     b46:	ed 85       	ldd	r30, Y+13	; 0x0d
     b48:	fe 85       	ldd	r31, Y+14	; 0x0e
     b4a:	f0 81       	ld	r31, Z
     b4c:	ff 87       	std	Y+15, r31	; 0x0f
     b4e:	2f 85       	ldd	r18, Y+15	; 0x0f
     b50:	22 23       	and	r18, r18
     b52:	09 f0       	breq	.+2      	; 0xb56
     b54:	8b cd       	rjmp	.-1258   	; 0x66c
     b56:	f1 01       	movw	r30, r2
     b58:	86 81       	ldd	r24, Z+6	; 0x06
     b5a:	97 81       	ldd	r25, Z+7	; 0x07
     b5c:	62 96       	adiw	r28, 0x12	; 18
     b5e:	0f b6       	in	r0, 0x3f	; 63
     b60:	f8 94       	cli
     b62:	de bf       	out	0x3e, r29	; 62
     b64:	0f be       	out	0x3f, r0	; 63
     b66:	cd bf       	out	0x3d, r28	; 61
     b68:	df 91       	pop	r29
     b6a:	cf 91       	pop	r28
     b6c:	1f 91       	pop	r17
     b6e:	0f 91       	pop	r16
     b70:	ff 90       	pop	r15
     b72:	ef 90       	pop	r14
     b74:	df 90       	pop	r13
     b76:	cf 90       	pop	r12
     b78:	bf 90       	pop	r11
     b7a:	af 90       	pop	r10
     b7c:	9f 90       	pop	r9
     b7e:	8f 90       	pop	r8
     b80:	7f 90       	pop	r7
     b82:	6f 90       	pop	r6
     b84:	5f 90       	pop	r5
     b86:	4f 90       	pop	r4
     b88:	3f 90       	pop	r3
     b8a:	2f 90       	pop	r2
     b8c:	08 95       	ret

00000b8e <calloc>:
     b8e:	0f 93       	push	r16
     b90:	1f 93       	push	r17
     b92:	cf 93       	push	r28
     b94:	df 93       	push	r29
     b96:	86 9f       	mul	r24, r22
     b98:	80 01       	movw	r16, r0
     b9a:	87 9f       	mul	r24, r23
     b9c:	10 0d       	add	r17, r0
     b9e:	96 9f       	mul	r25, r22
     ba0:	10 0d       	add	r17, r0
     ba2:	11 24       	eor	r1, r1
     ba4:	c8 01       	movw	r24, r16
     ba6:	0e 94 e3 05 	call	0xbc6
     baa:	ec 01       	movw	r28, r24
     bac:	00 97       	sbiw	r24, 0x00	; 0
     bae:	29 f0       	breq	.+10     	; 0xbba
     bb0:	a8 01       	movw	r20, r16
     bb2:	60 e0       	ldi	r22, 0x00	; 0
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	0e 94 f4 06 	call	0xde8
     bba:	ce 01       	movw	r24, r28
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	08 95       	ret

00000bc6 <malloc>:
     bc6:	cf 93       	push	r28
     bc8:	df 93       	push	r29
     bca:	9c 01       	movw	r18, r24
     bcc:	02 97       	sbiw	r24, 0x02	; 2
     bce:	10 f4       	brcc	.+4      	; 0xbd4
     bd0:	22 e0       	ldi	r18, 0x02	; 2
     bd2:	30 e0       	ldi	r19, 0x00	; 0
     bd4:	40 e0       	ldi	r20, 0x00	; 0
     bd6:	50 e0       	ldi	r21, 0x00	; 0
     bd8:	60 91 43 01 	lds	r22, 0x0143
     bdc:	70 91 44 01 	lds	r23, 0x0144
     be0:	fb 01       	movw	r30, r22
     be2:	da 01       	movw	r26, r20
     be4:	61 15       	cp	r22, r1
     be6:	71 05       	cpc	r23, r1
     be8:	69 f1       	breq	.+90     	; 0xc44
     bea:	80 81       	ld	r24, Z
     bec:	91 81       	ldd	r25, Z+1	; 0x01
     bee:	82 17       	cp	r24, r18
     bf0:	93 07       	cpc	r25, r19
     bf2:	09 f4       	brne	.+2      	; 0xbf6
     bf4:	52 c0       	rjmp	.+164    	; 0xc9a
     bf6:	28 17       	cp	r18, r24
     bf8:	39 07       	cpc	r19, r25
     bfa:	38 f4       	brcc	.+14     	; 0xc0a
     bfc:	41 15       	cp	r20, r1
     bfe:	51 05       	cpc	r21, r1
     c00:	19 f0       	breq	.+6      	; 0xc08
     c02:	84 17       	cp	r24, r20
     c04:	95 07       	cpc	r25, r21
     c06:	08 f4       	brcc	.+2      	; 0xc0a
     c08:	ac 01       	movw	r20, r24
     c0a:	df 01       	movw	r26, r30
     c0c:	02 80       	ldd	r0, Z+2	; 0x02
     c0e:	f3 81       	ldd	r31, Z+3	; 0x03
     c10:	e0 2d       	mov	r30, r0
     c12:	30 97       	sbiw	r30, 0x00	; 0
     c14:	51 f7       	brne	.-44     	; 0xbea
     c16:	41 15       	cp	r20, r1
     c18:	51 05       	cpc	r21, r1
     c1a:	a1 f0       	breq	.+40     	; 0xc44
     c1c:	da 01       	movw	r26, r20
     c1e:	a2 1b       	sub	r26, r18
     c20:	b3 0b       	sbc	r27, r19
     c22:	14 97       	sbiw	r26, 0x04	; 4
     c24:	08 f4       	brcc	.+2      	; 0xc28
     c26:	43 c0       	rjmp	.+134    	; 0xcae
     c28:	db 01       	movw	r26, r22
     c2a:	0a c0       	rjmp	.+20     	; 0xc40
     c2c:	6d 91       	ld	r22, X+
     c2e:	7c 91       	ld	r23, X
     c30:	11 97       	sbiw	r26, 0x01	; 1
     c32:	64 17       	cp	r22, r20
     c34:	75 07       	cpc	r23, r21
     c36:	09 f4       	brne	.+2      	; 0xc3a
     c38:	50 c0       	rjmp	.+160    	; 0xcda
     c3a:	fd 01       	movw	r30, r26
     c3c:	a2 81       	ldd	r26, Z+2	; 0x02
     c3e:	b3 81       	ldd	r27, Z+3	; 0x03
     c40:	10 97       	sbiw	r26, 0x00	; 0
     c42:	a1 f7       	brne	.-24     	; 0xc2c
     c44:	e0 91 41 01 	lds	r30, 0x0141
     c48:	f0 91 42 01 	lds	r31, 0x0142
     c4c:	30 97       	sbiw	r30, 0x00	; 0
     c4e:	41 f4       	brne	.+16     	; 0xc60
     c50:	e0 91 66 00 	lds	r30, 0x0066
     c54:	f0 91 67 00 	lds	r31, 0x0067
     c58:	f0 93 42 01 	sts	0x0142, r31
     c5c:	e0 93 41 01 	sts	0x0141, r30
     c60:	40 91 64 00 	lds	r20, 0x0064
     c64:	50 91 65 00 	lds	r21, 0x0065
     c68:	41 15       	cp	r20, r1
     c6a:	51 05       	cpc	r21, r1
     c6c:	29 f1       	breq	.+74     	; 0xcb8
     c6e:	4e 1b       	sub	r20, r30
     c70:	5f 0b       	sbc	r21, r31
     c72:	42 17       	cp	r20, r18
     c74:	53 07       	cpc	r21, r19
     c76:	e8 f0       	brcs	.+58     	; 0xcb2
     c78:	c9 01       	movw	r24, r18
     c7a:	02 96       	adiw	r24, 0x02	; 2
     c7c:	48 17       	cp	r20, r24
     c7e:	59 07       	cpc	r21, r25
     c80:	c0 f0       	brcs	.+48     	; 0xcb2
     c82:	ef 01       	movw	r28, r30
     c84:	c2 0f       	add	r28, r18
     c86:	d3 1f       	adc	r29, r19
     c88:	22 96       	adiw	r28, 0x02	; 2
     c8a:	d0 93 42 01 	sts	0x0142, r29
     c8e:	c0 93 41 01 	sts	0x0141, r28
     c92:	21 93       	st	Z+, r18
     c94:	31 93       	st	Z+, r19
     c96:	cf 01       	movw	r24, r30
     c98:	42 c0       	rjmp	.+132    	; 0xd1e
     c9a:	10 97       	sbiw	r26, 0x00	; 0
     c9c:	b1 f0       	breq	.+44     	; 0xcca
     c9e:	82 81       	ldd	r24, Z+2	; 0x02
     ca0:	93 81       	ldd	r25, Z+3	; 0x03
     ca2:	ed 01       	movw	r28, r26
     ca4:	9b 83       	std	Y+3, r25	; 0x03
     ca6:	8a 83       	std	Y+2, r24	; 0x02
     ca8:	cf 01       	movw	r24, r30
     caa:	02 96       	adiw	r24, 0x02	; 2
     cac:	38 c0       	rjmp	.+112    	; 0xd1e
     cae:	9a 01       	movw	r18, r20
     cb0:	bb cf       	rjmp	.-138    	; 0xc28
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	33 c0       	rjmp	.+102    	; 0xd1e
     cb8:	4d b7       	in	r20, 0x3d	; 61
     cba:	5e b7       	in	r21, 0x3e	; 62
     cbc:	a0 91 68 00 	lds	r26, 0x0068
     cc0:	b0 91 69 00 	lds	r27, 0x0069
     cc4:	4a 1b       	sub	r20, r26
     cc6:	5b 0b       	sbc	r21, r27
     cc8:	d2 cf       	rjmp	.-92     	; 0xc6e
     cca:	22 81       	ldd	r18, Z+2	; 0x02
     ccc:	33 81       	ldd	r19, Z+3	; 0x03
     cce:	30 93 44 01 	sts	0x0144, r19
     cd2:	20 93 43 01 	sts	0x0143, r18
     cd6:	cf 01       	movw	r24, r30
     cd8:	e8 cf       	rjmp	.-48     	; 0xcaa
     cda:	24 17       	cp	r18, r20
     cdc:	35 07       	cpc	r19, r21
     cde:	61 f0       	breq	.+24     	; 0xcf8
     ce0:	ea 01       	movw	r28, r20
     ce2:	c2 1b       	sub	r28, r18
     ce4:	d3 0b       	sbc	r29, r19
     ce6:	fd 01       	movw	r30, r26
     ce8:	ec 0f       	add	r30, r28
     cea:	fd 1f       	adc	r31, r29
     cec:	21 93       	st	Z+, r18
     cee:	31 93       	st	Z+, r19
     cf0:	22 97       	sbiw	r28, 0x02	; 2
     cf2:	cd 93       	st	X+, r28
     cf4:	dc 93       	st	X, r29
     cf6:	cf cf       	rjmp	.-98     	; 0xc96
     cf8:	30 97       	sbiw	r30, 0x00	; 0
     cfa:	41 f0       	breq	.+16     	; 0xd0c
     cfc:	ed 01       	movw	r28, r26
     cfe:	4a 81       	ldd	r20, Y+2	; 0x02
     d00:	5b 81       	ldd	r21, Y+3	; 0x03
     d02:	53 83       	std	Z+3, r21	; 0x03
     d04:	42 83       	std	Z+2, r20	; 0x02
     d06:	cd 01       	movw	r24, r26
     d08:	02 96       	adiw	r24, 0x02	; 2
     d0a:	09 c0       	rjmp	.+18     	; 0xd1e
     d0c:	fd 01       	movw	r30, r26
     d0e:	82 81       	ldd	r24, Z+2	; 0x02
     d10:	93 81       	ldd	r25, Z+3	; 0x03
     d12:	90 93 44 01 	sts	0x0144, r25
     d16:	80 93 43 01 	sts	0x0143, r24
     d1a:	cd 01       	movw	r24, r26
     d1c:	f5 cf       	rjmp	.-22     	; 0xd08
     d1e:	df 91       	pop	r29
     d20:	cf 91       	pop	r28
     d22:	08 95       	ret

00000d24 <free>:
     d24:	cf 93       	push	r28
     d26:	df 93       	push	r29
     d28:	00 97       	sbiw	r24, 0x00	; 0
     d2a:	09 f4       	brne	.+2      	; 0xd2e
     d2c:	5a c0       	rjmp	.+180    	; 0xde2
     d2e:	dc 01       	movw	r26, r24
     d30:	12 97       	sbiw	r26, 0x02	; 2
     d32:	ed 01       	movw	r28, r26
     d34:	1b 82       	std	Y+3, r1	; 0x03
     d36:	1a 82       	std	Y+2, r1	; 0x02
     d38:	80 91 43 01 	lds	r24, 0x0143
     d3c:	90 91 44 01 	lds	r25, 0x0144
     d40:	00 97       	sbiw	r24, 0x00	; 0
     d42:	d9 f1       	breq	.+118    	; 0xdba
     d44:	fc 01       	movw	r30, r24
     d46:	40 e0       	ldi	r20, 0x00	; 0
     d48:	50 e0       	ldi	r21, 0x00	; 0
     d4a:	ea 17       	cp	r30, r26
     d4c:	fb 07       	cpc	r31, r27
     d4e:	48 f4       	brcc	.+18     	; 0xd62
     d50:	af 01       	movw	r20, r30
     d52:	02 80       	ldd	r0, Z+2	; 0x02
     d54:	f3 81       	ldd	r31, Z+3	; 0x03
     d56:	e0 2d       	mov	r30, r0
     d58:	30 97       	sbiw	r30, 0x00	; 0
     d5a:	a1 f0       	breq	.+40     	; 0xd84
     d5c:	ea 17       	cp	r30, r26
     d5e:	fb 07       	cpc	r31, r27
     d60:	b8 f3       	brcs	.-18     	; 0xd50
     d62:	ed 01       	movw	r28, r26
     d64:	fb 83       	std	Y+3, r31	; 0x03
     d66:	ea 83       	std	Y+2, r30	; 0x02
     d68:	2d 91       	ld	r18, X+
     d6a:	3c 91       	ld	r19, X
     d6c:	11 97       	sbiw	r26, 0x01	; 1
     d6e:	e9 01       	movw	r28, r18
     d70:	ca 0f       	add	r28, r26
     d72:	db 1f       	adc	r29, r27
     d74:	ce 01       	movw	r24, r28
     d76:	02 96       	adiw	r24, 0x02	; 2
     d78:	8e 17       	cp	r24, r30
     d7a:	9f 07       	cpc	r25, r31
     d7c:	19 f1       	breq	.+70     	; 0xdc4
     d7e:	41 15       	cp	r20, r1
     d80:	51 05       	cpc	r21, r1
     d82:	d9 f0       	breq	.+54     	; 0xdba
     d84:	ea 01       	movw	r28, r20
     d86:	bb 83       	std	Y+3, r27	; 0x03
     d88:	aa 83       	std	Y+2, r26	; 0x02
     d8a:	ca 01       	movw	r24, r20
     d8c:	02 96       	adiw	r24, 0x02	; 2
     d8e:	28 81       	ld	r18, Y
     d90:	39 81       	ldd	r19, Y+1	; 0x01
     d92:	82 0f       	add	r24, r18
     d94:	93 1f       	adc	r25, r19
     d96:	8a 17       	cp	r24, r26
     d98:	9b 07       	cpc	r25, r27
     d9a:	19 f5       	brne	.+70     	; 0xde2
     d9c:	6d 91       	ld	r22, X+
     d9e:	7c 91       	ld	r23, X
     da0:	11 97       	sbiw	r26, 0x01	; 1
     da2:	26 0f       	add	r18, r22
     da4:	37 1f       	adc	r19, r23
     da6:	2e 5f       	subi	r18, 0xFE	; 254
     da8:	3f 4f       	sbci	r19, 0xFF	; 255
     daa:	39 83       	std	Y+1, r19	; 0x01
     dac:	28 83       	st	Y, r18
     dae:	fd 01       	movw	r30, r26
     db0:	42 81       	ldd	r20, Z+2	; 0x02
     db2:	53 81       	ldd	r21, Z+3	; 0x03
     db4:	5b 83       	std	Y+3, r21	; 0x03
     db6:	4a 83       	std	Y+2, r20	; 0x02
     db8:	14 c0       	rjmp	.+40     	; 0xde2
     dba:	b0 93 44 01 	sts	0x0144, r27
     dbe:	a0 93 43 01 	sts	0x0143, r26
     dc2:	0f c0       	rjmp	.+30     	; 0xde2
     dc4:	6a 81       	ldd	r22, Y+2	; 0x02
     dc6:	7b 81       	ldd	r23, Y+3	; 0x03
     dc8:	26 0f       	add	r18, r22
     dca:	37 1f       	adc	r19, r23
     dcc:	2e 5f       	subi	r18, 0xFE	; 254
     dce:	3f 4f       	sbci	r19, 0xFF	; 255
     dd0:	11 96       	adiw	r26, 0x01	; 1
     dd2:	3c 93       	st	X, r19
     dd4:	2e 93       	st	-X, r18
     dd6:	22 81       	ldd	r18, Z+2	; 0x02
     dd8:	33 81       	ldd	r19, Z+3	; 0x03
     dda:	fd 01       	movw	r30, r26
     ddc:	33 83       	std	Z+3, r19	; 0x03
     dde:	22 83       	std	Z+2, r18	; 0x02
     de0:	ce cf       	rjmp	.-100    	; 0xd7e
     de2:	df 91       	pop	r29
     de4:	cf 91       	pop	r28
     de6:	08 95       	ret

00000de8 <memset>:
     de8:	dc 01       	movw	r26, r24
     dea:	01 c0       	rjmp	.+2      	; 0xdee

00000dec <.memset_loop>:
     dec:	6d 93       	st	X+, r22

00000dee <.memset_start>:
     dee:	41 50       	subi	r20, 0x01	; 1
     df0:	50 40       	sbci	r21, 0x00	; 0
     df2:	e0 f7       	brcc	.-8      	; 0xdec
     df4:	08 95       	ret

00000df6 <strlen_P>:
     df6:	fc 01       	movw	r30, r24

00000df8 <.strlen_P_loop>:
     df8:	05 90       	lpm	r0, Z+
     dfa:	00 20       	and	r0, r0
     dfc:	e9 f7       	brne	.-6      	; 0xdf8
     dfe:	80 95       	com	r24
     e00:	90 95       	com	r25
     e02:	8e 0f       	add	r24, r30
     e04:	9f 1f       	adc	r25, r31
     e06:	08 95       	ret

00000e08 <strnlen>:
     e08:	fc 01       	movw	r30, r24

00000e0a <.strnlen_loop>:
     e0a:	61 50       	subi	r22, 0x01	; 1
     e0c:	70 40       	sbci	r23, 0x00	; 0
     e0e:	01 90       	ld	r0, Z+
     e10:	01 10       	cpse	r0, r1
     e12:	d8 f7       	brcc	.-10     	; 0xe0a
     e14:	80 95       	com	r24
     e16:	90 95       	com	r25
     e18:	8e 0f       	add	r24, r30
     e1a:	9f 1f       	adc	r25, r31
     e1c:	08 95       	ret

00000e1e <strnlen_P>:
     e1e:	fc 01       	movw	r30, r24
     e20:	61 50       	subi	r22, 0x01	; 1
     e22:	70 40       	sbci	r23, 0x00	; 0
     e24:	05 90       	lpm	r0, Z+
     e26:	01 10       	cpse	r0, r1
     e28:	d8 f7       	brcc	.-10     	; 0xe20
     e2a:	80 95       	com	r24
     e2c:	90 95       	com	r25
     e2e:	8e 0f       	add	r24, r30
     e30:	9f 1f       	adc	r25, r31
     e32:	08 95       	ret

00000e34 <IntProlog>:
     e34:	df 93       	push	r29
     e36:	cf 93       	push	r28
     e38:	bf 93       	push	r27
     e3a:	af 93       	push	r26
     e3c:	9f 93       	push	r25
     e3e:	d1 e0       	ldi	r29, 0x01	; 1
     e40:	c0 e3       	ldi	r28, 0x30	; 48
     e42:	9f b7       	in	r25, 0x3f	; 63
     e44:	ae 81       	ldd	r26, Y+6	; 0x06
     e46:	af 5f       	subi	r26, 0xFF	; 255
     e48:	ae 83       	std	Y+6, r26	; 0x06
     e4a:	60 f0       	brcs	.+24     	; 0xe64
     e4c:	aa 81       	ldd	r26, Y+2	; 0x02
     e4e:	bb 81       	ldd	r27, Y+3	; 0x03
     e50:	ba 2b       	or	r27, r26
     e52:	41 f4       	brne	.+16     	; 0xe64
     e54:	cd b7       	in	r28, 0x3d	; 61
     e56:	de b7       	in	r29, 0x3e	; 62
     e58:	fe 81       	ldd	r31, Y+6	; 0x06
     e5a:	ef 81       	ldd	r30, Y+7	; 0x07
     e5c:	29 96       	adiw	r28, 0x09	; 9
     e5e:	cd bf       	out	0x3d, r28	; 61
     e60:	de bf       	out	0x3e, r29	; 62
     e62:	09 94       	ijmp

00000e64 <SaveContext>:
     e64:	8f 93       	push	r24
     e66:	7f 93       	push	r23
     e68:	6f 93       	push	r22
     e6a:	5f 93       	push	r21
     e6c:	4f 93       	push	r20
     e6e:	3f 93       	push	r19
     e70:	2f 93       	push	r18
     e72:	1f 93       	push	r17
     e74:	0f 93       	push	r16
     e76:	ff 92       	push	r15
     e78:	ef 92       	push	r14
     e7a:	df 92       	push	r13
     e7c:	cf 92       	push	r12
     e7e:	bf 92       	push	r11
     e80:	af 92       	push	r10
     e82:	9f 92       	push	r9
     e84:	8f 92       	push	r8
     e86:	7f 92       	push	r7
     e88:	6f 92       	push	r6
     e8a:	5f 92       	push	r5
     e8c:	4f 92       	push	r4
     e8e:	3f 92       	push	r3
     e90:	2f 92       	push	r2
     e92:	1f 92       	push	r1
     e94:	0f 92       	push	r0
     e96:	9f 93       	push	r25
     e98:	cd b7       	in	r28, 0x3d	; 61
     e9a:	de b7       	in	r29, 0x3e	; 62
     e9c:	9b 8d       	ldd	r25, Y+27	; 0x1b
     e9e:	39 a1       	ldd	r19, Y+33	; 0x21
     ea0:	48 a1       	ldd	r20, Y+32	; 0x20
     ea2:	e8 a3       	std	Y+32, r30	; 0x20
     ea4:	f9 a3       	std	Y+33, r31	; 0x21
     ea6:	70 f0       	brcs	.+28     	; 0xec4
     ea8:	f1 e0       	ldi	r31, 0x01	; 1
     eaa:	e0 e3       	ldi	r30, 0x30	; 48
     eac:	d3 81       	ldd	r29, Z+3	; 0x03
     eae:	c2 81       	ldd	r28, Z+2	; 0x02
     eb0:	be b7       	in	r27, 0x3e	; 62
     eb2:	ad b7       	in	r26, 0x3d	; 61
     eb4:	bd 83       	std	Y+5, r27	; 0x05
     eb6:	ac 83       	std	Y+4, r26	; 0x04
     eb8:	24 81       	ldd	r18, Z+4	; 0x04
     eba:	2d bf       	out	0x3d, r18	; 61
     ebc:	25 81       	ldd	r18, Z+5	; 0x05
     ebe:	2e bf       	out	0x3e, r18	; 62
     ec0:	ca 2f       	mov	r28, r26
     ec2:	db 2f       	mov	r29, r27

00000ec4 <AlreadyInKernel>:
     ec4:	11 24       	eor	r1, r1
     ec6:	e3 2f       	mov	r30, r19
     ec8:	f4 2f       	mov	r31, r20
     eca:	09 94       	ijmp

00000ecc <Epilog>:
     ecc:	ef 91       	pop	r30
     ece:	ef 91       	pop	r30

00000ed0 <_Epilog>:
     ed0:	e0 e3       	ldi	r30, 0x30	; 48
     ed2:	f1 e0       	ldi	r31, 0x01	; 1
     ed4:	f8 94       	cli
     ed6:	06 81       	ldd	r16, Z+6	; 0x06
     ed8:	0a 95       	dec	r16
     eda:	06 83       	std	Z+6, r16	; 0x06
     edc:	54 f4       	brge	.+20     	; 0xef2
     ede:	d1 81       	ldd	r29, Z+1	; 0x01
     ee0:	c0 81       	ld	r28, Z
     ee2:	d3 83       	std	Z+3, r29	; 0x03
     ee4:	c2 83       	std	Z+2, r28	; 0x02
     ee6:	20 96       	adiw	r28, 0x00	; 0
     ee8:	39 f1       	breq	.+78     	; 0xf38
     eea:	bd 81       	ldd	r27, Y+5	; 0x05
     eec:	ac 81       	ldd	r26, Y+4	; 0x04
     eee:	ad bf       	out	0x3d, r26	; 61
     ef0:	be bf       	out	0x3e, r27	; 62

00000ef2 <SkipTaskSwap>:
     ef2:	0f 90       	pop	r0
     ef4:	0f be       	out	0x3f, r0	; 63
     ef6:	0f 90       	pop	r0
     ef8:	1f 90       	pop	r1
     efa:	2f 90       	pop	r2
     efc:	3f 90       	pop	r3
     efe:	4f 90       	pop	r4
     f00:	5f 90       	pop	r5
     f02:	6f 90       	pop	r6
     f04:	7f 90       	pop	r7
     f06:	8f 90       	pop	r8
     f08:	9f 90       	pop	r9
     f0a:	af 90       	pop	r10
     f0c:	bf 90       	pop	r11
     f0e:	cf 90       	pop	r12
     f10:	df 90       	pop	r13
     f12:	ef 90       	pop	r14
     f14:	ff 90       	pop	r15
     f16:	0f 91       	pop	r16
     f18:	1f 91       	pop	r17
     f1a:	2f 91       	pop	r18
     f1c:	3f 91       	pop	r19
     f1e:	4f 91       	pop	r20
     f20:	5f 91       	pop	r21
     f22:	6f 91       	pop	r22
     f24:	7f 91       	pop	r23
     f26:	8f 91       	pop	r24
     f28:	9f 91       	pop	r25
     f2a:	af 91       	pop	r26
     f2c:	bf 91       	pop	r27
     f2e:	cf 91       	pop	r28
     f30:	df 91       	pop	r29
     f32:	ef 91       	pop	r30
     f34:	ff 91       	pop	r31
     f36:	18 95       	reti

00000f38 <_IdleTask>:
     f38:	78 94       	sei
     f3a:	88 95       	sleep

00000f3c <snooze>:
     f3c:	fd cf       	rjmp	.-6      	; 0xf38

00000f3e <AvrXSetKernelStack>:
     f3e:	ff 91       	pop	r31
     f40:	ef 91       	pop	r30
     f42:	80 50       	subi	r24, 0x00	; 0
     f44:	90 40       	sbci	r25, 0x00	; 0
     f46:	11 f4       	brne	.+4      	; 0xf4c
     f48:	8d b7       	in	r24, 0x3d	; 61
     f4a:	9e b7       	in	r25, 0x3e	; 62

00000f4c <sks1>:
     f4c:	80 93 34 01 	sts	0x0134, r24
     f50:	90 93 35 01 	sts	0x0135, r25
     f54:	09 94       	ijmp

00000f56 <AvrXRunTask>:
     f56:	01 d0       	rcall	.+2      	; 0xf5a
     f58:	23 c0       	rjmp	.+70     	; 0xfa0

00000f5a <AvrXInitTask>:
     f5a:	e8 2f       	mov	r30, r24
     f5c:	f9 2f       	mov	r31, r25
     f5e:	1d d0       	rcall	.+58     	; 0xf9a
     f60:	a0 2d       	mov	r26, r0
     f62:	1b d0       	rcall	.+54     	; 0xf9a
     f64:	b0 2d       	mov	r27, r0
     f66:	19 d0       	rcall	.+50     	; 0xf9a
     f68:	0c 92       	st	X, r0
     f6a:	17 d0       	rcall	.+46     	; 0xf9a
     f6c:	0e 92       	st	-X, r0
     f6e:	40 e0       	ldi	r20, 0x00	; 0
     f70:	40 e0       	ldi	r20, 0x00	; 0
     f72:	51 e2       	ldi	r21, 0x21	; 33

00000f74 <PushRegisters>:
     f74:	4e 93       	st	-X, r20
     f76:	5a 95       	dec	r21
     f78:	e9 f7       	brne	.-6      	; 0xf74
     f7a:	11 97       	sbiw	r26, 0x01	; 1
     f7c:	0e d0       	rcall	.+28     	; 0xf9a
     f7e:	80 2d       	mov	r24, r0
     f80:	0c d0       	rcall	.+24     	; 0xf9a
     f82:	90 2d       	mov	r25, r0
     f84:	0a d0       	rcall	.+20     	; 0xf9a
     f86:	e8 2f       	mov	r30, r24
     f88:	f9 2f       	mov	r31, r25
     f8a:	a4 83       	std	Z+4, r26	; 0x04
     f8c:	b5 83       	std	Z+5, r27	; 0x05
     f8e:	03 82       	std	Z+3, r0	; 0x03
     f90:	a0 e6       	ldi	r26, 0x60	; 96
     f92:	a2 83       	std	Z+2, r26	; 0x02
     f94:	41 83       	std	Z+1, r20	; 0x01
     f96:	40 83       	st	Z, r20
     f98:	08 95       	ret

00000f9a <lpm_inc>:
     f9a:	c8 95       	lpm
     f9c:	31 96       	adiw	r30, 0x01	; 1
     f9e:	08 95       	ret

00000fa0 <AvrXResume>:
     fa0:	f8 94       	cli
     fa2:	48 df       	rcall	.-368    	; 0xe34
     fa4:	78 94       	sei
     fa6:	e8 2f       	mov	r30, r24
     fa8:	f9 2f       	mov	r31, r25
     faa:	22 81       	ldd	r18, Z+2	; 0x02
     fac:	2f 7d       	andi	r18, 0xDF	; 223
     fae:	22 83       	std	Z+2, r18	; 0x02
     fb0:	26 ff       	sbrs	r18, 6
     fb2:	03 c0       	rjmp	.+6      	; 0xfba
     fb4:	2f 7b       	andi	r18, 0xBF	; 191
     fb6:	22 83       	std	Z+2, r18	; 0x02
     fb8:	01 d0       	rcall	.+2      	; 0xfbc

00000fba <ar00>:
     fba:	8a cf       	rjmp	.-236    	; 0xed0

00000fbc <_QueuePid>:
     fbc:	e8 2f       	mov	r30, r24
     fbe:	f9 2f       	mov	r31, r25
     fc0:	3f ef       	ldi	r19, 0xFF	; 255
     fc2:	22 81       	ldd	r18, Z+2	; 0x02
     fc4:	20 73       	andi	r18, 0x30	; 48
     fc6:	e1 f4       	brne	.+56     	; 0x1000
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	43 81       	ldd	r20, Z+3	; 0x03
     fce:	c0 e3       	ldi	r28, 0x30	; 48
     fd0:	d1 e0       	ldi	r29, 0x01	; 1
     fd2:	2f b7       	in	r18, 0x3f	; 63
     fd4:	f8 94       	cli

00000fd6 <_qp00>:
     fd6:	33 95       	inc	r19
     fd8:	ec 2f       	mov	r30, r28
     fda:	fd 2f       	mov	r31, r29
     fdc:	c0 81       	ld	r28, Z
     fde:	d1 81       	ldd	r29, Z+1	; 0x01
     fe0:	20 96       	adiw	r28, 0x00	; 0
     fe2:	19 f0       	breq	.+6      	; 0xfea
     fe4:	5b 81       	ldd	r21, Y+3	; 0x03
     fe6:	45 17       	cp	r20, r21
     fe8:	b0 f7       	brcc	.-20     	; 0xfd6

00000fea <_qp01>:
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	80 83       	st	Z, r24
     fee:	f9 2f       	mov	r31, r25
     ff0:	e8 2f       	mov	r30, r24
     ff2:	d1 83       	std	Z+1, r29	; 0x01
     ff4:	c0 83       	st	Z, r28
     ff6:	df 91       	pop	r29
     ff8:	cf 91       	pop	r28
     ffa:	83 2f       	mov	r24, r19
     ffc:	2f bf       	out	0x3f, r18	; 63
     ffe:	08 95       	ret

00001000 <_qpSUSPEND>:
    1000:	83 2f       	mov	r24, r19
    1002:	20 64       	ori	r18, 0x40	; 64
    1004:	22 83       	std	Z+2, r18	; 0x02
    1006:	08 95       	ret

00001008 <AvrXWaitMessageAck>:
    1008:	8e 5f       	subi	r24, 0xFE	; 254
    100a:	9f 4f       	sbci	r25, 0xFF	; 255

0000100c <AvrXWaitSemaphore>:
    100c:	e8 2f       	mov	r30, r24
    100e:	f9 2f       	mov	r31, r25
    1010:	f8 94       	cli
    1012:	20 81       	ld	r18, Z
    1014:	31 81       	ldd	r19, Z+1	; 0x01
    1016:	21 50       	subi	r18, 0x01	; 1
    1018:	30 40       	sbci	r19, 0x00	; 0
    101a:	19 f4       	brne	.+6      	; 0x1022
    101c:	20 83       	st	Z, r18
    101e:	31 83       	std	Z+1, r19	; 0x01
    1020:	18 95       	reti

00001022 <aws01>:
    1022:	08 df       	rcall	.-496    	; 0xe34
    1024:	e0 e3       	ldi	r30, 0x30	; 48
    1026:	f1 e0       	ldi	r31, 0x01	; 1
    1028:	73 81       	ldd	r23, Z+3	; 0x03
    102a:	62 81       	ldd	r22, Z+2	; 0x02
    102c:	3c d0       	rcall	.+120    	; 0x10a6
    102e:	e8 2f       	mov	r30, r24
    1030:	f9 2f       	mov	r31, r25
    1032:	2b d0       	rcall	.+86     	; 0x108a
    1034:	4d cf       	rjmp	.-358    	; 0xed0

00001036 <AvrXAckMessage>:
    1036:	8e 5f       	subi	r24, 0xFE	; 254
    1038:	9f 4f       	sbci	r25, 0xFF	; 255

0000103a <AvrXSetSemaphore>:
    103a:	0c d0       	rcall	.+24     	; 0x1054
    103c:	90 91 36 01 	lds	r25, 0x0136
    1040:	93 95       	inc	r25
    1042:	89 2b       	or	r24, r25
    1044:	09 f0       	breq	.+2      	; 0x1048
    1046:	08 95       	ret

00001048 <axss0>:
    1048:	f8 94       	cli
    104a:	f4 de       	rcall	.-536    	; 0xe34
    104c:	78 94       	sei
    104e:	40 cf       	rjmp	.-384    	; 0xed0

00001050 <AvrXIntSetObjectSemaphore>:
    1050:	8e 5f       	subi	r24, 0xFE	; 254
    1052:	9f 4f       	sbci	r25, 0xFF	; 255

00001054 <AvrXIntSetSemaphore>:
    1054:	e8 2f       	mov	r30, r24
    1056:	f9 2f       	mov	r31, r25
    1058:	81 e0       	ldi	r24, 0x01	; 1
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	2f b7       	in	r18, 0x3f	; 63
    105e:	f8 94       	cli
    1060:	71 81       	ldd	r23, Z+1	; 0x01
    1062:	60 81       	ld	r22, Z
    1064:	86 17       	cp	r24, r22
    1066:	97 07       	cpc	r25, r23
    1068:	28 f0       	brcs	.+10     	; 0x1074
    106a:	80 83       	st	Z, r24
    106c:	91 83       	std	Z+1, r25	; 0x01

0000106e <BogusSemaphore>:
    106e:	8f ef       	ldi	r24, 0xFF	; 255
    1070:	2f bf       	out	0x3f, r18	; 63
    1072:	08 95       	ret

00001074 <aiss00>:
    1074:	8f e5       	ldi	r24, 0x5F	; 95
    1076:	86 17       	cp	r24, r22
    1078:	97 07       	cpc	r25, r23
    107a:	c8 f7       	brcc	.-14     	; 0x106e
    107c:	23 d0       	rcall	.+70     	; 0x10c4
    107e:	2f bf       	out	0x3f, r18	; 63
    1080:	86 2f       	mov	r24, r22
    1082:	97 2f       	mov	r25, r23
    1084:	9b cf       	rjmp	.-202    	; 0xfbc

00001086 <_ao00>:
    1086:	e2 2f       	mov	r30, r18
    1088:	f3 2f       	mov	r31, r19

0000108a <_AppendObject>:
    108a:	20 81       	ld	r18, Z
    108c:	31 81       	ldd	r19, Z+1	; 0x01
    108e:	20 50       	subi	r18, 0x00	; 0
    1090:	30 40       	sbci	r19, 0x00	; 0
    1092:	c9 f7       	brne	.-14     	; 0x1086
    1094:	71 83       	std	Z+1, r23	; 0x01
    1096:	60 83       	st	Z, r22
    1098:	f7 2f       	mov	r31, r23
    109a:	e6 2f       	mov	r30, r22
    109c:	31 83       	std	Z+1, r19	; 0x01
    109e:	20 83       	st	Z, r18
    10a0:	08 95       	ret

000010a2 <_ro00>:
    10a2:	f3 2f       	mov	r31, r19
    10a4:	e2 2f       	mov	r30, r18

000010a6 <_RemoveObject>:
    10a6:	20 81       	ld	r18, Z
    10a8:	31 81       	ldd	r19, Z+1	; 0x01
    10aa:	62 17       	cp	r22, r18
    10ac:	73 07       	cpc	r23, r19
    10ae:	51 f0       	breq	.+20     	; 0x10c4
    10b0:	20 50       	subi	r18, 0x00	; 0
    10b2:	30 40       	sbci	r19, 0x00	; 0
    10b4:	b1 f7       	brne	.-20     	; 0x10a2
    10b6:	08 95       	ret

000010b8 <_RemoveFirstObject>:
    10b8:	60 81       	ld	r22, Z
    10ba:	71 81       	ldd	r23, Z+1	; 0x01
    10bc:	60 50       	subi	r22, 0x00	; 0
    10be:	70 40       	sbci	r23, 0x00	; 0
    10c0:	09 f4       	brne	.+2      	; 0x10c4
    10c2:	08 95       	ret

000010c4 <_RemoveObjectAt>:
    10c4:	4c 2f       	mov	r20, r28
    10c6:	5d 2f       	mov	r21, r29
    10c8:	c6 2f       	mov	r28, r22
    10ca:	d7 2f       	mov	r29, r23
    10cc:	79 81       	ldd	r23, Y+1	; 0x01
    10ce:	68 81       	ld	r22, Y
    10d0:	71 83       	std	Z+1, r23	; 0x01
    10d2:	60 83       	st	Z, r22
    10d4:	e6 2f       	mov	r30, r22
    10d6:	f7 2f       	mov	r31, r23
    10d8:	66 27       	eor	r22, r22
    10da:	68 83       	st	Y, r22
    10dc:	69 83       	std	Y+1, r22	; 0x01
    10de:	7d 2f       	mov	r23, r29
    10e0:	6c 2f       	mov	r22, r28
    10e2:	c4 2f       	mov	r28, r20
    10e4:	d5 2f       	mov	r29, r21
    10e6:	98 94       	clz
    10e8:	08 95       	ret

000010ea <AvrXIntResetObjectSemaphore>:
    10ea:	e8 2f       	mov	r30, r24
    10ec:	f9 2f       	mov	r31, r25
    10ee:	32 96       	adiw	r30, 0x02	; 2
    10f0:	02 c0       	rjmp	.+4      	; 0x10f6

000010f2 <AvrXIntResetSemaphore>:
    10f2:	f9 2f       	mov	r31, r25
    10f4:	e8 2f       	mov	r30, r24

000010f6 <ars00>:
    10f6:	f8 94       	cli
    10f8:	40 81       	ld	r20, Z
    10fa:	51 81       	ldd	r21, Z+1	; 0x01
    10fc:	41 50       	subi	r20, 0x01	; 1
    10fe:	50 40       	sbci	r21, 0x00	; 0
    1100:	11 f0       	breq	.+4      	; 0x1106
    1102:	4f 5f       	subi	r20, 0xFF	; 255
    1104:	5f 4f       	sbci	r21, 0xFF	; 255

00001106 <ars01>:
    1106:	51 83       	std	Z+1, r21	; 0x01
    1108:	40 83       	st	Z, r20
    110a:	18 95       	reti

0000110c <AvrXDelay>:
    110c:	01 d0       	rcall	.+2      	; 0x1110
    110e:	7c cf       	rjmp	.-264    	; 0x1008

00001110 <AvrXStartTimer>:
    1110:	60 50       	subi	r22, 0x00	; 0
    1112:	70 40       	sbci	r23, 0x00	; 0
    1114:	09 f4       	brne	.+2      	; 0x1118
    1116:	8f cf       	rjmp	.-226    	; 0x1036

00001118 <CountNotZero>:
    1118:	f8 94       	cli
    111a:	8c de       	rcall	.-744    	; 0xe34
    111c:	78 94       	sei
    111e:	e5 df       	rcall	.-54     	; 0x10ea
    1120:	e8 e3       	ldi	r30, 0x38	; 56
    1122:	f1 e0       	ldi	r31, 0x01	; 1
    1124:	f8 94       	cli
    1126:	20 91 3a 01 	lds	r18, 0x013A
    112a:	2a 95       	dec	r18
    112c:	20 93 3a 01 	sts	0x013A, r18
    1130:	78 94       	sei

00001132 <ast00>:
    1132:	ce 2f       	mov	r28, r30
    1134:	df 2f       	mov	r29, r31
    1136:	e8 81       	ld	r30, Y
    1138:	f9 81       	ldd	r31, Y+1	; 0x01
    113a:	30 96       	adiw	r30, 0x00	; 0
    113c:	59 f0       	breq	.+22     	; 0x1154
    113e:	24 81       	ldd	r18, Z+4	; 0x04
    1140:	35 81       	ldd	r19, Z+5	; 0x05
    1142:	62 1b       	sub	r22, r18
    1144:	73 0b       	sbc	r23, r19
    1146:	a8 f7       	brcc	.-22     	; 0x1132
    1148:	62 0f       	add	r22, r18
    114a:	73 1f       	adc	r23, r19
    114c:	26 1b       	sub	r18, r22
    114e:	37 0b       	sbc	r19, r23
    1150:	24 83       	std	Z+4, r18	; 0x04
    1152:	35 83       	std	Z+5, r19	; 0x05

00001154 <ast01>:
    1154:	99 83       	std	Y+1, r25	; 0x01
    1156:	88 83       	st	Y, r24
    1158:	d9 2f       	mov	r29, r25
    115a:	c8 2f       	mov	r28, r24
    115c:	f9 83       	std	Y+1, r31	; 0x01
    115e:	e8 83       	st	Y, r30
    1160:	6c 83       	std	Y+4, r22	; 0x04
    1162:	7d 83       	std	Y+5, r23	; 0x05
    1164:	3c d0       	rcall	.+120    	; 0x11de
    1166:	b4 ce       	rjmp	.-664    	; 0xed0

00001168 <AvrXTimerHandler>:
    1168:	f8 94       	cli
    116a:	20 91 3a 01 	lds	r18, 0x013A
    116e:	21 50       	subi	r18, 0x01	; 1
    1170:	20 93 3a 01 	sts	0x013A, r18
    1174:	78 94       	sei
    1176:	08 f0       	brcs	.+2      	; 0x117a
    1178:	08 95       	ret

0000117a <ati00>:
    117a:	cf 93       	push	r28
    117c:	df 93       	push	r29
    117e:	af 93       	push	r26
    1180:	bf 93       	push	r27
    1182:	d0 91 39 01 	lds	r29, 0x0139
    1186:	c0 91 38 01 	lds	r28, 0x0138
    118a:	20 96       	adiw	r28, 0x00	; 0
    118c:	21 f1       	breq	.+72     	; 0x11d6
    118e:	fd 81       	ldd	r31, Y+5	; 0x05
    1190:	ec 81       	ldd	r30, Y+4	; 0x04
    1192:	31 97       	sbiw	r30, 0x01	; 1
    1194:	fd 83       	std	Y+5, r31	; 0x05
    1196:	ec 83       	std	Y+4, r30	; 0x04

00001198 <ati01>:
    1198:	ef 2b       	or	r30, r31
    119a:	e9 f4       	brne	.+58     	; 0x11d6
    119c:	a8 81       	ld	r26, Y
    119e:	b9 81       	ldd	r27, Y+1	; 0x01
    11a0:	b0 93 39 01 	sts	0x0139, r27
    11a4:	a0 93 38 01 	sts	0x0138, r26
    11a8:	f9 83       	std	Y+1, r31	; 0x01
    11aa:	e8 83       	st	Y, r30
    11ac:	8a 81       	ldd	r24, Y+2	; 0x02
    11ae:	9b 81       	ldd	r25, Y+3	; 0x03
    11b0:	82 50       	subi	r24, 0x02	; 2
    11b2:	90 40       	sbci	r25, 0x00	; 0
    11b4:	31 f4       	brne	.+12     	; 0x11c2
    11b6:	8e 81       	ldd	r24, Y+6	; 0x06
    11b8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ba:	7d 2f       	mov	r23, r29
    11bc:	6c 2f       	mov	r22, r28
    11be:	1d d0       	rcall	.+58     	; 0x11fa
    11c0:	03 c0       	rjmp	.+6      	; 0x11c8

000011c2 <ati04>:
    11c2:	8c 2f       	mov	r24, r28
    11c4:	9d 2f       	mov	r25, r29
    11c6:	44 df       	rcall	.-376    	; 0x1050

000011c8 <ati03>:
    11c8:	10 96       	adiw	r26, 0x00	; 0
    11ca:	29 f0       	breq	.+10     	; 0x11d6
    11cc:	ca 2f       	mov	r28, r26
    11ce:	db 2f       	mov	r29, r27
    11d0:	fd 81       	ldd	r31, Y+5	; 0x05
    11d2:	ec 81       	ldd	r30, Y+4	; 0x04
    11d4:	e1 cf       	rjmp	.-62     	; 0x1198

000011d6 <ati02>:
    11d6:	bf 91       	pop	r27
    11d8:	af 91       	pop	r26
    11da:	df 91       	pop	r29
    11dc:	cf 91       	pop	r28

000011de <TimerHandler>:
    11de:	f8 94       	cli
    11e0:	20 91 3a 01 	lds	r18, 0x013A
    11e4:	23 95       	inc	r18
    11e6:	20 93 3a 01 	sts	0x013A, r18
    11ea:	78 94       	sei
    11ec:	31 f6       	brne	.-116    	; 0x117a
    11ee:	08 95       	ret

000011f0 <AvrXSendMessage>:
    11f0:	f8 94       	cli
    11f2:	20 de       	rcall	.-960    	; 0xe34
    11f4:	78 94       	sei
    11f6:	01 d0       	rcall	.+2      	; 0x11fa
    11f8:	6b ce       	rjmp	.-810    	; 0xed0

000011fa <AvrXIntSendMessage>:
    11fa:	f9 2f       	mov	r31, r25
    11fc:	e8 2f       	mov	r30, r24
    11fe:	45 df       	rcall	.-374    	; 0x108a
    1200:	27 cf       	rjmp	.-434    	; 0x1050

00001202 <AvrXWaitMessage>:
    1202:	e8 2f       	mov	r30, r24
    1204:	f9 2f       	mov	r31, r25
    1206:	f8 94       	cli
    1208:	57 df       	rcall	.-338    	; 0x10b8
    120a:	78 94       	sei
    120c:	21 f4       	brne	.+8      	; 0x1216
    120e:	fc de       	rcall	.-520    	; 0x1008
    1210:	82 50       	subi	r24, 0x02	; 2
    1212:	90 40       	sbci	r25, 0x00	; 0
    1214:	f6 cf       	rjmp	.-20     	; 0x1202

00001216 <_rm01>:
    1216:	69 df       	rcall	.-302    	; 0x10ea
    1218:	86 2f       	mov	r24, r22
    121a:	97 2f       	mov	r25, r23
    121c:	08 95       	ret

0000121e <__udivmodsi4>:
    121e:	a1 e2       	ldi	r26, 0x21	; 33
    1220:	1a 2e       	mov	r1, r26
    1222:	aa 1b       	sub	r26, r26
    1224:	bb 1b       	sub	r27, r27
    1226:	fd 01       	movw	r30, r26
    1228:	0d c0       	rjmp	.+26     	; 0x1244

0000122a <__udivmodsi4_loop>:
    122a:	aa 1f       	adc	r26, r26
    122c:	bb 1f       	adc	r27, r27
    122e:	ee 1f       	adc	r30, r30
    1230:	ff 1f       	adc	r31, r31
    1232:	a2 17       	cp	r26, r18
    1234:	b3 07       	cpc	r27, r19
    1236:	e4 07       	cpc	r30, r20
    1238:	f5 07       	cpc	r31, r21
    123a:	20 f0       	brcs	.+8      	; 0x1244
    123c:	a2 1b       	sub	r26, r18
    123e:	b3 0b       	sbc	r27, r19
    1240:	e4 0b       	sbc	r30, r20
    1242:	f5 0b       	sbc	r31, r21

00001244 <__udivmodsi4_ep>:
    1244:	66 1f       	adc	r22, r22
    1246:	77 1f       	adc	r23, r23
    1248:	88 1f       	adc	r24, r24
    124a:	99 1f       	adc	r25, r25
    124c:	1a 94       	dec	r1
    124e:	69 f7       	brne	.-38     	; 0x122a
    1250:	60 95       	com	r22
    1252:	70 95       	com	r23
    1254:	80 95       	com	r24
    1256:	90 95       	com	r25
    1258:	9b 01       	movw	r18, r22
    125a:	ac 01       	movw	r20, r24
    125c:	bd 01       	movw	r22, r26
    125e:	cf 01       	movw	r24, r30
    1260:	08 95       	ret
